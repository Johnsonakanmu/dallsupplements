function x(){Array.from(document.querySelectorAll('[data-wrap-text]:not([style*="display: none"])')).forEach((e,n)=>{const o=parseFloat(window.getComputedStyle(e).lineHeight);if(e.clientHeight/o===1||e.children.length>0)return;const l=p(e);document.body.append(l),requestAnimationFrame(()=>s(l,e))})}function p(t){const e=t.cloneNode(!1),n=Array.from(t.childNodes);return f(t,e),n.forEach((o,l)=>{if(o.nodeType===Node.TEXT_NODE&&o.textContent.trim()){const a=o.textContent.trim().split(" ");a.forEach((h,i)=>{const r=document.createElement("span");r.textContent=h,e.append(r),n.length!==l-1&&a.length!==i&&e.append(" ")})}else if(o.nodeType===Node.ELEMENT_NODE){const a=document.createElement("span");a.textContent=o.textContent,f(o,a),e.append(a),n.length!==l-1&&e.append(" ")}}),e}function f(t,e){if(t instanceof Element){const n=window.getComputedStyle(t);e.style.cssText=`
            font-size: ${n.fontSize};
            font-family: ${n.fontFamily};
            font-weight: ${n.fontWeight};
            text-transform: ${n.textTransform};
            opacity: 0;
            width: ${Math.ceil(t.clientWidth)}px;
            max-width: ${n.maxWidth};
            display: ${n.display==="flex"?"block !important":n.display};
        `}}function s(t,e){const n=d(t);if(n.length<2){t.remove();return}const{breakBeforeText:o,occurrences:l}=g(n);o&&(e.innerHTML=u(e.innerHTML,l,"<br>"+o,o)),t.remove()}function d(t){let e=null,n=null;const o=[];let l=[];return Array.from(t.children).forEach((a,h)=>{const i=a.getBoundingClientRect();n!==null&&Math.abs(i.top-e)>Math.abs(i.height-n)/2&&(o.push(l),l=[]),l.push(a),e=i.top,n=i.height}),l.length>0&&o.push(l),o}function g(t){const e=t.length-2;let n=0,o=0,l=0,a=null,h;t[e].forEach(i=>n+=i.offsetWidth),t[t.length-1].forEach(i=>o+=i.offsetWidth);for(let i=0;i<t[e].length;i++){const r=t[e][t[e].length-i-1],c=r.offsetWidth;if(n-o<0||o+c>n-c)break;n-=c,o+=c,a=r.textContent,h=i}if(a){const i=a.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");for(let r=0;r<t[t.length-1].length;r++){const c=t[t.length-1][r].textContent.match(new RegExp(i,"g"));l+=c?c.length:0}for(let r=t[e].length-h-1;r<t[e].length;r++){const c=t[e][r].textContent.match(new RegExp(i,"g"));l+=c?c.length:0}}return{breakBeforeText:a,occurrences:l}}function u(t,e,n,o){const l=new RegExp(o.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"g");let a=0;return e=(t.match(l)||[]).length-e+1,t.replace(l,h=>++a===e?n:h)}export{x as default};
