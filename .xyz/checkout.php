<!DOCTYPE html>
<html lang="en" dir="ltr" class="tw-scroll-smooth">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">

  <meta name="format-detection" content="telephone=no">
  <meta name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/="">
  <link rel="preload" as="style"
    href="../css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap">
  <link rel="stylesheet"
    href="../css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
    media="print" onload="this.media='all'">
  <noscript>
    <link rel="stylesheet"
      href="../css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap">
  </noscript>
  <title>
    Checkout | Dall Supplement
  </title>
  <meta property="og:image" content="https://get-huusk.com/theme/huusk/og-image.jpg">

  <!-- <link rel="icon" type="image/png" href="../theme/huusk/favicon_.png"> -->
  <meta name="robots" content="noindex, nofollow">
  <meta name="csrf-token" content="fjLbYmRPh7Y8quIT3xsbOtQJqyhVJcpraSrlzcPX">
  <script>
  window.addEventListener('storage', function(event) {
    if (event.key === 'last_csrf_token') {
      updateCsrf(event.newValue);
    }
  });
  if (window.localStorage) {
    function getCookie(name) {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${name}=`);
      if (parts.length === 2) return parts.pop().split(';').shift();
    }

    var cookieSessionId = getCookie('orbio_session_id');
    var requestSessionId = 'PRj00uBCJS1863UE';
    if (cookieSessionId === requestSessionId) {
      window.localStorage.setItem('last_csrf_token', 'fjLbYmRPh7Y8quIT3xsbOtQJqyhVJcpraSrlzcPX')
    } else if (window.localStorage.getItem('last_csrf_token')) {
      updateCsrf(window.localStorage.getItem('last_csrf_token'));
    }
  }

  function updateCsrf(value) {
    var metaTag = document.querySelector('meta[name="csrf-token"]');
    var hiddenInput = document.querySelector('input[name="_token"]');

    if (metaTag) {
      metaTag.setAttribute('content', value);
    }
    if (hiddenInput) {
      hiddenInput.value = value;
    }
    if (window.livewireScriptConfig) {
      window.livewireScriptConfig.csrf = value;
    }
  }
  </script>
  <script type="module">
  function q_() {
    import.meta.url, import("_").catch(() => 1);
    async function* t() {}
  }
  const Mi = Object.prototype.toString;

  function Gi(t) {
    switch (Mi.call(t)) {
      case "[object Error]":
      case "[object Exception]":
      case "[object DOMException]":
        return !0;
      default:
        return Ut(t, Error)
    }
  }

  function oe(t, e) {
    return Mi.call(t) === `[object ${e}]`
  }

  function Pi(t) {
    return oe(t, "ErrorEvent")
  }

  function Gr(t) {
    return oe(t, "DOMError")
  }

  function Ga(t) {
    return oe(t, "DOMException")
  }

  function Ct(t) {
    return oe(t, "String")
  }

  function Yi(t) {
    return t === null || typeof t != "object" && typeof t != "function"
  }

  function Qt(t) {
    return oe(t, "Object")
  }

  function _r(t) {
    return typeof Event < "u" && Ut(t, Event)
  }

  function Pa(t) {
    return typeof Element < "u" && Ut(t, Element)
  }

  function Ya(t) {
    return oe(t, "RegExp")
  }

  function gn(t) {
    return !!(t && t.then && typeof t.then == "function")
  }

  function Fa(t) {
    return Qt(t) && "nativeEvent" in t && "preventDefault" in t && "stopPropagation" in t
  }

  function Fi(t) {
    return typeof t == "number" && t !== t
  }

  function Ut(t, e) {
    try {
      return t instanceof e
    } catch (n) {
      return !1
    }
  }

  function Me(t) {
    return t && t.Math == Math ? t : void 0
  }
  const nt = typeof globalThis == "object" && Me(globalThis) || typeof window == "object" && Me(window) ||
    typeof self == "object" && Me(self) || typeof global == "object" && Me(global) || function() {
      return this
    }() || {};

  function Oe() {
    return nt
  }

  function hr(t, e, n) {
    const r = n || nt,
      i = r.__SENTRY__ = r.__SENTRY__ || {};
    return i[t] || (i[t] = e())
  }
  const Je = Oe(),
    za = 80;

  function Pt(t, e = {}) {
    try {
      let n = t;
      const r = 5,
        i = [];
      let s = 0,
        a = 0;
      const o = " > ",
        c = o.length;
      let u;
      const d = Array.isArray(e) ? e : e.keyAttrs,
        l = !Array.isArray(e) && e.maxStringLength || za;
      for (; n && s++ < r && (u = $a(n, d), !(u === "html" || s > 1 && a + i.length * c + u.length >= l));) i.push(u),
        a += u.length, n = n.parentNode;
      return i.reverse().join(o)
    } catch (n) {
      return "<unknown>"
    }
  }

  function $a(t, e) {
    const n = t,
      r = [];
    let i, s, a, o, c;
    if (!n || !n.tagName) return "";
    r.push(n.tagName.toLowerCase());
    const u = e && e.length ? e.filter(l => n.getAttribute(l)).map(l => [l, n.getAttribute(l)]) : null;
    if (u && u.length) u.forEach(l => {
      r.push(`[${l[0]}="${l[1]}"]`)
    });
    else if (n.id && r.push(`#${n.id}`), i = n.className, i && Ct(i))
      for (s = i.split(/\s+/), c = 0; c < s.length; c++) r.push(`.${s[c]}`);
    const d = ["aria-label", "type", "name", "title", "alt"];
    for (c = 0; c < d.length; c++) a = d[c], o = n.getAttribute(a), o && r.push(`[${a}="${o}"]`);
    return r.join("")
  }

  function Ha() {
    try {
      return Je.document.location.href
    } catch (t) {
      return ""
    }
  }

  function ja(t) {
    return Je.document && Je.document.querySelector ? Je.document.querySelector(t) : null
  }
  class J extends Error {
    constructor(e, n = "warn") {
      super(e), this.message = e, this.name = new.target.prototype.constructor.name, Object.setPrototypeOf(this, new
        .target.prototype), this.logLevel = n
    }
  }
  const Wa = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;

  function qa(t) {
    return t === "http" || t === "https"
  }

  function ce(t, e = !1) {
    const {
      host: n,
      path: r,
      pass: i,
      port: s,
      projectId: a,
      protocol: o,
      publicKey: c
    } = t;
    return `${o}://${c}${e&&i?`:${i}`:""}@${n}${s?`:${s}`:""}/${r&&`${r}/`}${a}`
  }

  function zi(t) {
    const e = Wa.exec(t);
    if (!e) throw new J(`Invalid Sentry Dsn: ${t}`);
    const [n, r, i = "", s, a = "", o] = e.slice(1);
    let c = "",
      u = o;
    const d = u.split("/");
    if (d.length > 1 && (c = d.slice(0, -1).join("/"), u = d.pop()), u) {
      const l = u.match(/^\d+/);
      l && (u = l[0])
    }
    return $i({
      host: s,
      pass: i,
      path: c,
      projectId: u,
      port: a,
      protocol: n,
      publicKey: r
    })
  }

  function $i(t) {
    return {
      protocol: t.protocol,
      publicKey: t.publicKey || "",
      pass: t.pass || "",
      host: t.host,
      port: t.port || "",
      path: t.path || "",
      projectId: t.projectId
    }
  }

  function Za(t) {
    if (!(typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__)) return;
    const {
      port: e,
      projectId: n,
      protocol: r
    } = t;
    if (["protocol", "publicKey", "host", "projectId"].forEach(s => {
        if (!t[s]) throw new J(`Invalid Sentry Dsn: ${s} missing`)
      }), !n.match(/^\d+$/)) throw new J(`Invalid Sentry Dsn: Invalid projectId ${n}`);
    if (!qa(r)) throw new J(`Invalid Sentry Dsn: Invalid protocol ${r}`);
    if (e && isNaN(parseInt(e, 10))) throw new J(`Invalid Sentry Dsn: Invalid port ${e}`);
    return !0
  }

  function Hi(t) {
    const e = typeof t == "string" ? zi(t) : $i(t);
    return Za(e), e
  }
  const Va = "Sentry Logger ",
    sn = ["debug", "info", "warn", "error", "log", "assert", "trace"];

  function ji(t) {
    if (!("console" in nt)) return t();
    const e = nt.console,
      n = {};
    sn.forEach(r => {
      const i = e[r] && e[r].__sentry_original__;
      r in e && i && (n[r] = e[r], e[r] = i)
    });
    try {
      return t()
    } finally {
      Object.keys(n).forEach(r => {
        e[r] = n[r]
      })
    }
  }

  function Pr() {
    let t = !1;
    const e = {
      enable: () => {
        t = !0
      },
      disable: () => {
        t = !1
      }
    };
    return typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__ ? sn.forEach(n => {
      e[n] = (...r) => {
        t && ji(() => {
          nt.console[n](`${Va}[${n}]:`, ...r)
        })
      }
    }) : sn.forEach(n => {
      e[n] = () => {}
    }), e
  }
  let f;
  typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__ ? f = hr("logger", Pr) : f = Pr();

  function ye(t, e = 0) {
    return typeof t != "string" || e === 0 || t.length <= e ? t : `${t.slice(0,e)}...`
  }

  function Yr(t, e) {
    if (!Array.isArray(t)) return "";
    const n = [];
    for (let r = 0; r < t.length; r++) {
      const i = t[r];
      try {
        n.push(String(i))
      } catch (s) {
        n.push("[value cannot be serialized]")
      }
    }
    return n.join(e)
  }

  function Xa(t, e, n = !1) {
    return Ct(t) ? Ya(e) ? e.test(t) : Ct(e) ? n ? t === e : t.includes(e) : !1 : !1
  }

  function ue(t, e = [], n = !1) {
    return e.some(r => Xa(t, r, n))
  }

  function X(t, e, n) {
    if (!(e in t)) return;
    const r = t[e],
      i = n(r);
    if (typeof i == "function") try {
      Wi(i, r)
    } catch (s) {}
    t[e] = i
  }

  function pr(t, e, n) {
    Object.defineProperty(t, e, {
      value: n,
      writable: !0,
      configurable: !0
    })
  }

  function Wi(t, e) {
    const n = e.prototype || {};
    t.prototype = e.prototype = n, pr(t, "__sentry_original__", e)
  }

  function mr(t) {
    return t.__sentry_original__
  }

  function Ka(t) {
    return Object.keys(t).map(e => `${encodeURIComponent(e)}=${encodeURIComponent(t[e])}`).join("&")
  }

  function qi(t) {
    if (Gi(t)) return {
      message: t.message,
      name: t.name,
      stack: t.stack,
      ...zr(t)
    };
    if (_r(t)) {
      const e = {
        type: t.type,
        target: Fr(t.target),
        currentTarget: Fr(t.currentTarget),
        ...zr(t)
      };
      return typeof CustomEvent < "u" && Ut(t, CustomEvent) && (e.detail = t.detail), e
    } else return t
  }

  function Fr(t) {
    try {
      return Pa(t) ? Pt(t) : Object.prototype.toString.call(t)
    } catch (e) {
      return "<unknown>"
    }
  }

  function zr(t) {
    if (typeof t == "object" && t !== null) {
      const e = {};
      for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
      return e
    } else return {}
  }

  function Ja(t, e = 40) {
    const n = Object.keys(qi(t));
    if (n.sort(), !n.length) return "[object has no keys]";
    if (n[0].length >= e) return ye(n[0], e);
    for (let r = n.length; r > 0; r--) {
      const i = n.slice(0, r).join(", ");
      if (!(i.length > e)) return r === n.length ? i : ye(i, e)
    }
    return ""
  }

  function ut(t) {
    return Mn(t, new Map)
  }

  function Mn(t, e) {
    if (Qt(t)) {
      const n = e.get(t);
      if (n !== void 0) return n;
      const r = {};
      e.set(t, r);
      for (const i of Object.keys(t)) typeof t[i] < "u" && (r[i] = Mn(t[i], e));
      return r
    }
    if (Array.isArray(t)) {
      const n = e.get(t);
      if (n !== void 0) return n;
      const r = [];
      return e.set(t, r), t.forEach(i => {
        r.push(Mn(i, e))
      }), r
    }
    return t
  }
  const Zi = 50,
    $r = /\(error: (.*)\)/;

  function Vi(...t) {
    const e = t.sort((n, r) => n[0] - r[0]).map(n => n[1]);
    return (n, r = 0) => {
      const i = [],
        s = n.split(`
`);
      for (let a = r; a < s.length; a++) {
        const o = s[a];
        if (o.length > 1024) continue;
        const c = $r.test(o) ? o.replace($r, "$1") : o;
        if (!c.match(/\S*Error: /)) {
          for (const u of e) {
            const d = u(c);
            if (d) {
              i.push(d);
              break
            }
          }
          if (i.length >= Zi) break
        }
      }
      return to(i)
    }
  }

  function Qa(t) {
    return Array.isArray(t) ? Vi(...t) : t
  }

  function to(t) {
    if (!t.length) return [];
    const e = t.slice(0, Zi),
      n = e[e.length - 1].function;
    n && /sentryWrapped/.test(n) && e.pop(), e.reverse();
    const r = e[e.length - 1].function;
    return r && /captureMessage|captureException/.test(r) && e.pop(), e.map(i => ({
      ...i,
      filename: i.filename || e[e.length - 1].filename,
      function: i.function || "?"
    }))
  }
  const xn = "<anonymous>";

  function Bt(t) {
    try {
      return !t || typeof t != "function" ? xn : t.name || xn
    } catch (e) {
      return xn
    }
  }
  const Gn = Oe();

  function Xi() {
    if (!("fetch" in Gn)) return !1;
    try {
      return new Headers, new Request("http://www.example.com"), new Response, !0
    } catch (t) {
      return !1
    }
  }

  function Pn(t) {
    return t && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(t.toString())
  }

  function eo() {
    if (!Xi()) return !1;
    if (Pn(Gn.fetch)) return !0;
    let t = !1;
    const e = Gn.document;
    if (e && typeof e.createElement == "function") try {
      const n = e.createElement("iframe");
      n.hidden = !0, e.head.appendChild(n), n.contentWindow && n.contentWindow.fetch && (t = Pn(n.contentWindow
        .fetch)), e.head.removeChild(n)
    } catch (n) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
        "Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", n)
    }
    return t
  }
  const Ge = Oe();

  function no() {
    const t = Ge.chrome,
      e = t && t.app && t.app.runtime,
      n = "history" in Ge && !!Ge.history.pushState && !!Ge.history.replaceState;
    return !e && n
  }
  const P = Oe(),
    Rt = "__sentry_xhr_v2__",
    Ee = {},
    Hr = {};

  function ro(t) {
    if (!Hr[t]) switch (Hr[t] = !0, t) {
      case "console":
        io();
        break;
      case "dom":
        _o();
        break;
      case "xhr":
        oo();
        break;
      case "fetch":
        so();
        break;
      case "history":
        co();
        break;
      case "error":
        ho();
        break;
      case "unhandledrejection":
        po();
        break;
      default:
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn("unknown instrumentation type:", t);
        return
    }
  }

  function V(t, e) {
    Ee[t] = Ee[t] || [], Ee[t].push(e), ro(t)
  }

  function dt(t, e) {
    if (!(!t || !Ee[t]))
      for (const n of Ee[t] || []) try {
        n(e)
      } catch (r) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(`Error while triggering instrumentation handler.
Type: ${t}
Name: ${Bt(n)}
Error:`, r)
      }
  }

  function io() {
    "console" in P && sn.forEach(function(t) {
      t in P.console && X(P.console, t, function(e) {
        return function(...n) {
          dt("console", {
            args: n,
            level: t
          }), e && e.apply(P.console, n)
        }
      })
    })
  }

  function so() {
    eo() && X(P, "fetch", function(t) {
      return function(...e) {
        const {
          method: n,
          url: r
        } = ao(e), i = {
          args: e,
          fetchData: {
            method: n,
            url: r
          },
          startTimestamp: Date.now()
        };
        return dt("fetch", {
          ...i
        }), t.apply(P, e).then(s => (dt("fetch", {
          ...i,
          endTimestamp: Date.now(),
          response: s
        }), s), s => {
          throw dt("fetch", {
            ...i,
            endTimestamp: Date.now(),
            error: s
          }), s
        })
      }
    })
  }

  function Yn(t, e) {
    return !!t && typeof t == "object" && !!t[e]
  }

  function jr(t) {
    return typeof t == "string" ? t : t ? Yn(t, "url") ? t.url : t.toString ? t.toString() : "" : ""
  }

  function ao(t) {
    if (t.length === 0) return {
      method: "GET",
      url: ""
    };
    if (t.length === 2) {
      const [n, r] = t;
      return {
        url: jr(n),
        method: Yn(r, "method") ? String(r.method).toUpperCase() : "GET"
      }
    }
    const e = t[0];
    return {
      url: jr(e),
      method: Yn(e, "method") ? String(e.method).toUpperCase() : "GET"
    }
  }

  function oo() {
    if (!("XMLHttpRequest" in P)) return;
    const t = XMLHttpRequest.prototype;
    X(t, "open", function(e) {
      return function(...n) {
        const r = n[1],
          i = this[Rt] = {
            method: Ct(n[0]) ? n[0].toUpperCase() : n[0],
            url: n[1],
            request_headers: {}
          };
        Ct(r) && i.method === "POST" && r.match(/sentry_key/) && (this.__sentry_own_request__ = !0);
        const s = () => {
          const a = this[Rt];
          if (a && this.readyState === 4) {
            try {
              a.status_code = this.status
            } catch (o) {}
            dt("xhr", {
              args: n,
              endTimestamp: Date.now(),
              startTimestamp: Date.now(),
              xhr: this
            })
          }
        };
        return "onreadystatechange" in this && typeof this.onreadystatechange == "function" ? X(this,
          "onreadystatechange",
          function(a) {
            return function(...o) {
              return s(), a.apply(this, o)
            }
          }) : this.addEventListener("readystatechange", s), X(this, "setRequestHeader", function(a) {
          return function(...o) {
            const [c, u] = o, d = this[Rt];
            return d && (d.request_headers[c.toLowerCase()] = u), a.apply(this, o)
          }
        }), e.apply(this, n)
      }
    }), X(t, "send", function(e) {
      return function(...n) {
        const r = this[Rt];
        return r && n[0] !== void 0 && (r.body = n[0]), dt("xhr", {
          args: n,
          startTimestamp: Date.now(),
          xhr: this
        }), e.apply(this, n)
      }
    })
  }
  let Pe;

  function co() {
    if (!no()) return;
    const t = P.onpopstate;
    P.onpopstate = function(...n) {
      const r = P.location.href,
        i = Pe;
      if (Pe = r, dt("history", {
          from: i,
          to: r
        }), t) try {
        return t.apply(this, n)
      } catch (s) {}
    };

    function e(n) {
      return function(...r) {
        const i = r.length > 2 ? r[2] : void 0;
        if (i) {
          const s = Pe,
            a = String(i);
          Pe = a, dt("history", {
            from: s,
            to: a
          })
        }
        return n.apply(this, r)
      }
    }
    X(P.history, "pushState", e), X(P.history, "replaceState", e)
  }
  const uo = 1e3;
  let Ye, Fe;

  function lo(t, e) {
    if (!t || t.type !== e.type) return !0;
    try {
      if (t.target !== e.target) return !0
    } catch (n) {}
    return !1
  }

  function fo(t) {
    if (t.type !== "keypress") return !1;
    try {
      const e = t.target;
      if (!e || !e.tagName) return !0;
      if (e.tagName === "INPUT" || e.tagName === "TEXTAREA" || e.isContentEditable) return !1
    } catch (e) {}
    return !0
  }

  function Wr(t, e = !1) {
    return n => {
      if (!n || Fe === n || fo(n)) return;
      const r = n.type === "keypress" ? "input" : n.type;
      Ye === void 0 ? (t({
        event: n,
        name: r,
        global: e
      }), Fe = n) : lo(Fe, n) && (t({
        event: n,
        name: r,
        global: e
      }), Fe = n), clearTimeout(Ye), Ye = P.setTimeout(() => {
        Ye = void 0
      }, uo)
    }
  }

  function _o() {
    if (!("document" in P)) return;
    const t = dt.bind(null, "dom"),
      e = Wr(t, !0);
    P.document.addEventListener("click", e, !1), P.document.addEventListener("keypress", e, !1), ["EventTarget", "Node"]
      .forEach(n => {
        const r = P[n] && P[n].prototype;
        !r || !r.hasOwnProperty || !r.hasOwnProperty("addEventListener") || (X(r, "addEventListener", function(i) {
          return function(s, a, o) {
            if (s === "click" || s == "keypress") try {
              const c = this,
                u = c.__sentry_instrumentation_handlers__ = c.__sentry_instrumentation_handlers__ || {},
                d = u[s] = u[s] || {
                  refCount: 0
                };
              if (!d.handler) {
                const l = Wr(t);
                d.handler = l, i.call(this, s, l, o)
              }
              d.refCount++
            } catch (c) {}
            return i.call(this, s, a, o)
          }
        }), X(r, "removeEventListener", function(i) {
          return function(s, a, o) {
            if (s === "click" || s == "keypress") try {
              const c = this,
                u = c.__sentry_instrumentation_handlers__ || {},
                d = u[s];
              d && (d.refCount--, d.refCount <= 0 && (i.call(this, s, d.handler, o), d.handler = void 0,
                  delete u[s]), Object.keys(u).length === 0 && delete c
                .__sentry_instrumentation_handlers__)
            } catch (c) {}
            return i.call(this, s, a, o)
          }
        }))
      })
  }
  let ze = null;

  function ho() {
    ze = P.onerror, P.onerror = function(t, e, n, r, i) {
      return dt("error", {
        column: r,
        error: i,
        line: n,
        msg: t,
        url: e
      }), ze && !ze.__SENTRY_LOADER__ ? ze.apply(this, arguments) : !1
    }, P.onerror.__SENTRY_INSTRUMENTED__ = !0
  }
  let $e = null;

  function po() {
    $e = P.onunhandledrejection, P.onunhandledrejection = function(t) {
      return dt("unhandledrejection", t), $e && !$e.__SENTRY_LOADER__ ? $e.apply(this, arguments) : !0
    }, P.onunhandledrejection.__SENTRY_INSTRUMENTED__ = !0
  }

  function mo() {
    const t = typeof WeakSet == "function",
      e = t ? new WeakSet : [];

    function n(i) {
      if (t) return e.has(i) ? !0 : (e.add(i), !1);
      for (let s = 0; s < e.length; s++)
        if (e[s] === i) return !0;
      return e.push(i), !1
    }

    function r(i) {
      if (t) e.delete(i);
      else
        for (let s = 0; s < e.length; s++)
          if (e[s] === i) {
            e.splice(s, 1);
            break
          }
    }
    return [n, r]
  }

  function lt() {
    const t = nt,
      e = t.crypto || t.msCrypto;
    if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
    const n = e && e.getRandomValues ? () => e.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;
    return ([1e7] + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, r => (r ^ (n() & 15) >> r / 4).toString(16))
  }

  function Ki(t) {
    return t.exception && t.exception.values ? t.exception.values[0] : void 0
  }

  function vt(t) {
    const {
      message: e,
      event_id: n
    } = t;
    if (e) return e;
    const r = Ki(t);
    return r ? r.type && r.value ? `${r.type}: ${r.value}` : r.type || r.value || n || "<unknown>" : n || "<unknown>"
  }

  function Fn(t, e, n) {
    const r = t.exception = t.exception || {},
      i = r.values = r.values || [],
      s = i[0] = i[0] || {};
    s.value || (s.value = e || ""), s.type || (s.type = n || "Error")
  }

  function ve(t, e) {
    const n = Ki(t);
    if (!n) return;
    const r = {
        type: "generic",
        handled: !0
      },
      i = n.mechanism;
    if (n.mechanism = {
        ...r,
        ...i,
        ...e
      }, e && "data" in e) {
      const s = {
        ...i && i.data,
        ...e.data
      };
      n.mechanism.data = s
    }
  }

  function qr(t) {
    if (t && t.__sentry_captured__) return !0;
    try {
      pr(t, "__sentry_captured__", !0)
    } catch (e) {}
    return !1
  }

  function Ji(t) {
    return Array.isArray(t) ? t : [t]
  }

  function go() {
    return typeof __SENTRY_BROWSER_BUNDLE__ < "u" && !!__SENTRY_BROWSER_BUNDLE__
  }

  function yo() {
    return "npm"
  }

  function Qi() {
    return !go() && Object.prototype.toString.call(typeof process < "u" ? process : 0) === "[object process]"
  }

  function Eo(t, e) {
    return t.require(e)
  }

  function pt(t, e = 100, n = 1 / 0) {
    try {
      return zn("", t, e, n)
    } catch (r) {
      return {
        ERROR: `**non-serializable** (${r})`
      }
    }
  }

  function ts(t, e = 3, n = 100 * 1024) {
    const r = pt(t, e);
    return To(r) > n ? ts(t, e - 1, n) : r
  }

  function zn(t, e, n = 1 / 0, r = 1 / 0, i = mo()) {
    const [s, a] = i;
    if (e == null || ["number", "boolean", "string"].includes(typeof e) && !Fi(e)) return e;
    const o = So(t, e);
    if (!o.startsWith("[object ")) return o;
    if (e.__sentry_skip_normalization__) return e;
    const c = typeof e.__sentry_override_normalization_depth__ == "number" ? e.__sentry_override_normalization_depth__ :
      n;
    if (c === 0) return o.replace("object ", "");
    if (s(e)) return "[Circular ~]";
    const u = e;
    if (u && typeof u.toJSON == "function") try {
      const _ = u.toJSON();
      return zn("", _, c - 1, r, i)
    } catch (_) {}
    const d = Array.isArray(e) ? [] : {};
    let l = 0;
    const h = qi(e);
    for (const _ in h) {
      if (!Object.prototype.hasOwnProperty.call(h, _)) continue;
      if (l >= r) {
        d[_] = "[MaxProperties ~]";
        break
      }
      const p = h[_];
      d[_] = zn(_, p, c - 1, r, i), l++
    }
    return a(e), d
  }

  function So(t, e) {
    try {
      if (t === "domain" && e && typeof e == "object" && e._events) return "[Domain]";
      if (t === "domainEmitter") return "[DomainEmitter]";
      if (typeof global < "u" && e === global) return "[Global]";
      if (typeof window < "u" && e === window) return "[Window]";
      if (typeof document < "u" && e === document) return "[Document]";
      if (Fa(e)) return "[SyntheticEvent]";
      if (typeof e == "number" && e !== e) return "[NaN]";
      if (typeof e == "function") return `[Function: ${Bt(e)}]`;
      if (typeof e == "symbol") return `[${String(e)}]`;
      if (typeof e == "bigint") return `[BigInt: ${String(e)}]`;
      const n = bo(e);
      return /^HTML(\w*)Element$/.test(n) ? `[HTMLElement: ${n}]` : `[object ${n}]`
    } catch (n) {
      return `**non-serializable** (${n})`
    }
  }

  function bo(t) {
    const e = Object.getPrototypeOf(t);
    return e ? e.constructor.name : "null prototype"
  }

  function wo(t) {
    return ~-encodeURI(t).split(/%..|./).length
  }

  function To(t) {
    return wo(JSON.stringify(t))
  }
  var gt;
  (function(t) {
    t[t.PENDING = 0] = "PENDING";
    const n = 1;
    t[t.RESOLVED = n] = "RESOLVED";
    const r = 2;
    t[t.REJECTED = r] = "REJECTED"
  })(gt || (gt = {}));

  function St(t) {
    return new tt(e => {
      e(t)
    })
  }

  function an(t) {
    return new tt((e, n) => {
      n(t)
    })
  }
  class tt {
    __init() {
      this._state = gt.PENDING
    }
    __init2() {
      this._handlers = []
    }
    constructor(e) {
      tt.prototype.__init.call(this), tt.prototype.__init2.call(this), tt.prototype.__init3.call(this), tt.prototype
        .__init4.call(this), tt.prototype.__init5.call(this), tt.prototype.__init6.call(this);
      try {
        e(this._resolve, this._reject)
      } catch (n) {
        this._reject(n)
      }
    }
    then(e, n) {
      return new tt((r, i) => {
        this._handlers.push([!1, s => {
          if (!e) r(s);
          else try {
            r(e(s))
          } catch (a) {
            i(a)
          }
        }, s => {
          if (!n) i(s);
          else try {
            r(n(s))
          } catch (a) {
            i(a)
          }
        }]), this._executeHandlers()
      })
    } catch (e) {
      return this.then(n => n, e)
    } finally(e) {
      return new tt((n, r) => {
        let i, s;
        return this.then(a => {
          s = !1, i = a, e && e()
        }, a => {
          s = !0, i = a, e && e()
        }).then(() => {
          if (s) {
            r(i);
            return
          }
          n(i)
        })
      })
    }
    __init3() {
      this._resolve = e => {
        this._setResult(gt.RESOLVED, e)
      }
    }
    __init4() {
      this._reject = e => {
        this._setResult(gt.REJECTED, e)
      }
    }
    __init5() {
      this._setResult = (e, n) => {
        if (this._state === gt.PENDING) {
          if (gn(n)) {
            n.then(this._resolve, this._reject);
            return
          }
          this._state = e, this._value = n, this._executeHandlers()
        }
      }
    }
    __init6() {
      this._executeHandlers = () => {
        if (this._state === gt.PENDING) return;
        const e = this._handlers.slice();
        this._handlers = [], e.forEach(n => {
          n[0] || (this._state === gt.RESOLVED && n[1](this._value), this._state === gt.REJECTED && n[2](this
            ._value), n[0] = !0)
        })
      }
    }
  }

  function vo(t) {
    const e = [];

    function n() {
      return t === void 0 || e.length < t
    }

    function r(a) {
      return e.splice(e.indexOf(a), 1)[0]
    }

    function i(a) {
      if (!n()) return an(new J("Not adding Promise because buffer limit was reached."));
      const o = a();
      return e.indexOf(o) === -1 && e.push(o), o.then(() => r(o)).then(null, () => r(o).then(null, () => {})), o
    }

    function s(a) {
      return new tt((o, c) => {
        let u = e.length;
        if (!u) return o(!0);
        const d = setTimeout(() => {
          a && a > 0 && o(!1)
        }, a);
        e.forEach(l => {
          St(l).then(() => {
            --u || (clearTimeout(d), o(!0))
          }, c)
        })
      })
    }
    return {
      $: e,
      add: i,
      drain: s
    }
  }

  function In(t) {
    if (!t) return {};
    const e = t.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
    if (!e) return {};
    const n = e[6] || "",
      r = e[8] || "";
    return {
      host: e[4],
      path: e[5],
      protocol: e[2],
      search: n,
      hash: r,
      relative: e[5] + n + r
    }
  }
  const Ro = ["fatal", "error", "warning", "log", "info", "debug"];

  function ko(t) {
    return t === "warn" ? "warning" : Ro.includes(t) ? t : "log"
  }
  const es = Oe(),
    $n = {
      nowSeconds: () => Date.now() / 1e3
    };

  function No() {
    const {
      performance: t
    } = es;
    if (!t || !t.now) return;
    const e = Date.now() - t.now();
    return {
      now: () => t.now(),
      timeOrigin: e
    }
  }

  function Do() {
    try {
      return Eo(module, "perf_hooks").performance
    } catch (t) {
      return
    }
  }
  const On = Qi() ? Do() : No(),
    Zr = On === void 0 ? $n : {
      nowSeconds: () => (On.timeOrigin + On.now()) / 1e3
    },
    yn = $n.nowSeconds.bind($n),
    Yt = Zr.nowSeconds.bind(Zr),
    bt = (() => {
      const {
        performance: t
      } = es;
      if (!t || !t.now) return;
      const e = 3600 * 1e3,
        n = t.now(),
        r = Date.now(),
        i = t.timeOrigin ? Math.abs(t.timeOrigin + n - r) : e,
        s = i < e,
        a = t.timing && t.timing.navigationStart,
        c = typeof a == "number" ? Math.abs(a + n - r) : e,
        u = c < e;
      return s || u ? i <= c ? t.timeOrigin : a : r
    })(),
    xo = new RegExp("^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$");

  function ns(t) {
    const e = t.match(xo);
    if (!t || !e) return;
    let n;
    return e[3] === "1" ? n = !0 : e[3] === "0" && (n = !1), {
      traceId: e[1],
      parentSampled: n,
      parentSpanId: e[2]
    }
  }

  function Wt(t, e = []) {
    return [t, e]
  }

  function Io(t, e) {
    const [n, r] = t;
    return [n, [...r, e]]
  }

  function on(t, e) {
    const n = t[1];
    for (const r of n) {
      const i = r[0].type;
      if (e(r, i)) return !0
    }
    return !1
  }

  function Oo(t, e) {
    return on(t, (n, r) => e.includes(r))
  }

  function Hn(t, e) {
    return (e || new TextEncoder).encode(t)
  }

  function rs(t, e) {
    const [n, r] = t;
    let i = JSON.stringify(n);

    function s(a) {
      typeof i == "string" ? i = typeof a == "string" ? i + a : [Hn(i, e), a] : i.push(typeof a == "string" ? Hn(a, e) :
        a)
    }
    for (const a of r) {
      const [o, c] = a;
      if (s(`
${JSON.stringify(o)}
`), typeof c == "string" || c instanceof Uint8Array) s(c);
      else {
        let u;
        try {
          u = JSON.stringify(c)
        } catch (d) {
          u = JSON.stringify(pt(c))
        }
        s(u)
      }
    }
    return typeof i == "string" ? i : Ao(i)
  }

  function Ao(t) {
    const e = t.reduce((i, s) => i + s.length, 0),
      n = new Uint8Array(e);
    let r = 0;
    for (const i of t) n.set(i, r), r += i.length;
    return n
  }

  function Co(t, e, n) {
    let r = typeof t == "string" ? e.encode(t) : t;

    function i(c) {
      const u = r.subarray(0, c);
      return r = r.subarray(c + 1), u
    }

    function s() {
      let c = r.indexOf(10);
      return c < 0 && (c = r.length), JSON.parse(n.decode(i(c)))
    }
    const a = s(),
      o = [];
    for (; r.length;) {
      const c = s(),
        u = typeof c.length == "number" ? c.length : void 0;
      o.push([c, u ? i(u) : s()])
    }
    return [a, o]
  }

  function Uo(t, e) {
    const n = typeof t.data == "string" ? Hn(t.data, e) : t.data;
    return [ut({
      type: "attachment",
      length: n.length,
      filename: t.filename,
      content_type: t.contentType,
      attachment_type: t.attachmentType
    }), n]
  }
  const Bo = {
    session: "session",
    sessions: "session",
    attachment: "attachment",
    transaction: "transaction",
    event: "error",
    client_report: "internal",
    user_report: "default",
    profile: "profile",
    replay_event: "replay",
    replay_recording: "replay",
    check_in: "monitor"
  };

  function Vr(t) {
    return Bo[t]
  }

  function gr(t) {
    if (!t || !t.sdk) return;
    const {
      name: e,
      version: n
    } = t.sdk;
    return {
      name: e,
      version: n
    }
  }

  function is(t, e, n, r) {
    const i = t.sdkProcessingMetadata && t.sdkProcessingMetadata.dynamicSamplingContext;
    return {
      event_id: t.event_id,
      sent_at: new Date().toISOString(),
      ...e && {
        sdk: e
      },
      ...!!n && {
        dsn: ce(r)
      },
      ...i && {
        trace: ut({
          ...i
        })
      }
    }
  }

  function Lo(t, e, n) {
    const r = [{
      type: "client_report"
    }, {
      timestamp: n || yn(),
      discarded_events: t
    }];
    return Wt(e ? {
      dsn: e
    } : {}, [r])
  }
  const Mo = 60 * 1e3;

  function ss(t, e = Date.now()) {
    const n = parseInt(`${t}`, 10);
    if (!isNaN(n)) return n * 1e3;
    const r = Date.parse(`${t}`);
    return isNaN(r) ? Mo : r - e
  }

  function Go(t, e) {
    return t[e] || t.all || 0
  }

  function Po(t, e, n = Date.now()) {
    return Go(t, e) > n
  }

  function Yo(t, {
    statusCode: e,
    headers: n
  }, r = Date.now()) {
    const i = {
        ...t
      },
      s = n && n["x-sentry-rate-limits"],
      a = n && n["retry-after"];
    if (s)
      for (const o of s.trim().split(",")) {
        const [c, u] = o.split(":", 2), d = parseInt(c, 10), l = (isNaN(d) ? 60 : d) * 1e3;
        if (!u) i.all = r + l;
        else
          for (const h of u.split(";")) i[h] = r + l
      } else a ? i.all = r + ss(a, r) : e === 429 && (i.all = r + 60 * 1e3);
    return i
  }
  const jn = "baggage",
    as = "sentry-",
    Fo = /^sentry-/,
    zo = 8192;

  function $o(t) {
    if (!Ct(t) && !Array.isArray(t)) return;
    let e = {};
    if (Array.isArray(t)) e = t.reduce((r, i) => {
      const s = Xr(i);
      return {
        ...r,
        ...s
      }
    }, {});
    else {
      if (!t) return;
      e = Xr(t)
    }
    const n = Object.entries(e).reduce((r, [i, s]) => {
      if (i.match(Fo)) {
        const a = i.slice(as.length);
        r[a] = s
      }
      return r
    }, {});
    if (Object.keys(n).length > 0) return n
  }

  function os(t) {
    const e = Object.entries(t).reduce((n, [r, i]) => (i && (n[`${as}${r}`] = i), n), {});
    return Ho(e)
  }

  function Xr(t) {
    return t.split(",").map(e => e.split("=").map(n => decodeURIComponent(n.trim()))).reduce((e, [n, r]) => (e[n] = r,
      e), {})
  }

  function Ho(t) {
    if (Object.keys(t).length !== 0) return Object.entries(t).reduce((e, [n, r], i) => {
      const s = `${encodeURIComponent(n)}=${encodeURIComponent(r)}`,
        a = i === 0 ? s : `${e},${s}`;
      return a.length > zo ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
        `Not adding key: ${n} with val: ${r} to baggage header due to exceeding baggage size limits.`), e) : a
    }, "")
  }
  const En = "production";

  function jo(t) {
    const e = Yt(),
      n = {
        sid: lt(),
        init: !0,
        timestamp: e,
        started: e,
        duration: 0,
        status: "ok",
        errors: 0,
        ignoreDuration: !1,
        toJSON: () => qo(n)
      };
    return t && te(n, t), n
  }

  function te(t, e = {}) {
    if (e.user && (!t.ipAddress && e.user.ip_address && (t.ipAddress = e.user.ip_address), !t.did && !e.did && (t.did =
        e.user.id || e.user.email || e.user.username)), t.timestamp = e.timestamp || Yt(), e.ignoreDuration && (t
        .ignoreDuration = e.ignoreDuration), e.sid && (t.sid = e.sid.length === 32 ? e.sid : lt()), e.init !== void 0 &&
      (t.init = e.init), !t.did && e.did && (t.did = `${e.did}`), typeof e.started == "number" && (t.started = e
        .started), t.ignoreDuration) t.duration = void 0;
    else if (typeof e.duration == "number") t.duration = e.duration;
    else {
      const n = t.timestamp - t.started;
      t.duration = n >= 0 ? n : 0
    }
    e.release && (t.release = e.release), e.environment && (t.environment = e.environment), !t.ipAddress && e
      .ipAddress && (t.ipAddress = e.ipAddress), !t.userAgent && e.userAgent && (t.userAgent = e.userAgent), typeof e
      .errors == "number" && (t.errors = e.errors), e.status && (t.status = e.status)
  }

  function Wo(t, e) {
    let n = {};
    e ? n = {
      status: e
    } : t.status === "ok" && (n = {
      status: "exited"
    }), te(t, n)
  }

  function qo(t) {
    return ut({
      sid: `${t.sid}`,
      init: t.init,
      started: new Date(t.started * 1e3).toISOString(),
      timestamp: new Date(t.timestamp * 1e3).toISOString(),
      status: t.status,
      errors: t.errors,
      did: typeof t.did == "number" || typeof t.did == "string" ? `${t.did}` : void 0,
      duration: t.duration,
      attrs: {
        release: t.release,
        environment: t.environment,
        ip_address: t.ipAddress,
        user_agent: t.userAgent
      }
    })
  }
  const Zo = 100;
  class Dt {
    constructor() {
      this._notifyingListeners = !1, this._scopeListeners = [], this._eventProcessors = [], this._breadcrumbs = [],
        this._attachments = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}, this
        ._sdkProcessingMetadata = {}
    }
    static clone(e) {
      const n = new Dt;
      return e && (n._breadcrumbs = [...e._breadcrumbs], n._tags = {
          ...e._tags
        }, n._extra = {
          ...e._extra
        }, n._contexts = {
          ...e._contexts
        }, n._user = e._user, n._level = e._level, n._span = e._span, n._session = e._session, n._transactionName =
        e._transactionName, n._fingerprint = e._fingerprint, n._eventProcessors = [...e._eventProcessors], n
        ._requestSession = e._requestSession, n._attachments = [...e._attachments], n._sdkProcessingMetadata = {
          ...e._sdkProcessingMetadata
        }), n
    }
    addScopeListener(e) {
      this._scopeListeners.push(e)
    }
    addEventProcessor(e) {
      return this._eventProcessors.push(e), this
    }
    setUser(e) {
      return this._user = e || {}, this._session && te(this._session, {
        user: e
      }), this._notifyScopeListeners(), this
    }
    getUser() {
      return this._user
    }
    getRequestSession() {
      return this._requestSession
    }
    setRequestSession(e) {
      return this._requestSession = e, this
    }
    setTags(e) {
      return this._tags = {
        ...this._tags,
        ...e
      }, this._notifyScopeListeners(), this
    }
    setTag(e, n) {
      return this._tags = {
        ...this._tags,
        [e]: n
      }, this._notifyScopeListeners(), this
    }
    setExtras(e) {
      return this._extra = {
        ...this._extra,
        ...e
      }, this._notifyScopeListeners(), this
    }
    setExtra(e, n) {
      return this._extra = {
        ...this._extra,
        [e]: n
      }, this._notifyScopeListeners(), this
    }
    setFingerprint(e) {
      return this._fingerprint = e, this._notifyScopeListeners(), this
    }
    setLevel(e) {
      return this._level = e, this._notifyScopeListeners(), this
    }
    setTransactionName(e) {
      return this._transactionName = e, this._notifyScopeListeners(), this
    }
    setContext(e, n) {
      return n === null ? delete this._contexts[e] : this._contexts[e] = n, this._notifyScopeListeners(), this
    }
    setSpan(e) {
      return this._span = e, this._notifyScopeListeners(), this
    }
    getSpan() {
      return this._span
    }
    getTransaction() {
      const e = this.getSpan();
      return e && e.transaction
    }
    setSession(e) {
      return e ? this._session = e : delete this._session, this._notifyScopeListeners(), this
    }
    getSession() {
      return this._session
    }
    update(e) {
      if (!e) return this;
      if (typeof e == "function") {
        const n = e(this);
        return n instanceof Dt ? n : this
      }
      return e instanceof Dt ? (this._tags = {
          ...this._tags,
          ...e._tags
        }, this._extra = {
          ...this._extra,
          ...e._extra
        }, this._contexts = {
          ...this._contexts,
          ...e._contexts
        }, e._user && Object.keys(e._user).length && (this._user = e._user), e._level && (this._level = e._level), e
        ._fingerprint && (this._fingerprint = e._fingerprint), e._requestSession && (this._requestSession = e
          ._requestSession)) : Qt(e) && (e = e, this._tags = {
        ...this._tags,
        ...e.tags
      }, this._extra = {
        ...this._extra,
        ...e.extra
      }, this._contexts = {
        ...this._contexts,
        ...e.contexts
      }, e.user && (this._user = e.user), e.level && (this._level = e.level), e.fingerprint && (this
        ._fingerprint = e.fingerprint), e.requestSession && (this._requestSession = e.requestSession)), this
    }
    clear() {
      return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this
        ._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, this._requestSession = void 0,
        this._span = void 0, this._session = void 0, this._notifyScopeListeners(), this._attachments = [], this
    }
    addBreadcrumb(e, n) {
      const r = typeof n == "number" ? n : Zo;
      if (r <= 0) return this;
      const i = {
        timestamp: yn(),
        ...e
      };
      return this._breadcrumbs = [...this._breadcrumbs, i].slice(-r), this._notifyScopeListeners(), this
    }
    getLastBreadcrumb() {
      return this._breadcrumbs[this._breadcrumbs.length - 1]
    }
    clearBreadcrumbs() {
      return this._breadcrumbs = [], this._notifyScopeListeners(), this
    }
    addAttachment(e) {
      return this._attachments.push(e), this
    }
    getAttachments() {
      return this._attachments
    }
    clearAttachments() {
      return this._attachments = [], this
    }
    applyToEvent(e, n = {}) {
      if (this._extra && Object.keys(this._extra).length && (e.extra = {
          ...this._extra,
          ...e.extra
        }), this._tags && Object.keys(this._tags).length && (e.tags = {
          ...this._tags,
          ...e.tags
        }), this._user && Object.keys(this._user).length && (e.user = {
          ...this._user,
          ...e.user
        }), this._contexts && Object.keys(this._contexts).length && (e.contexts = {
          ...this._contexts,
          ...e.contexts
        }), this._level && (e.level = this._level), this._transactionName && (e.transaction = this._transactionName),
        this._span) {
        e.contexts = {
          trace: this._span.getTraceContext(),
          ...e.contexts
        };
        const r = this._span.transaction;
        if (r) {
          e.sdkProcessingMetadata = {
            dynamicSamplingContext: r.getDynamicSamplingContext(),
            ...e.sdkProcessingMetadata
          };
          const i = r.name;
          i && (e.tags = {
            transaction: i,
            ...e.tags
          })
        }
      }
      return this._applyFingerprint(e), e.breadcrumbs = [...e.breadcrumbs || [], ...this._breadcrumbs], e
        .breadcrumbs = e.breadcrumbs.length > 0 ? e.breadcrumbs : void 0, e.sdkProcessingMetadata = {
          ...e.sdkProcessingMetadata,
          ...this._sdkProcessingMetadata
        }, this._notifyEventProcessors([...cs(), ...this._eventProcessors], e, n)
    }
    setSDKProcessingMetadata(e) {
      return this._sdkProcessingMetadata = {
        ...this._sdkProcessingMetadata,
        ...e
      }, this
    }
    _notifyEventProcessors(e, n, r, i = 0) {
      return new tt((s, a) => {
        const o = e[i];
        if (n === null || typeof o != "function") s(n);
        else {
          const c = o({
            ...n
          }, r);
          (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && o.id && c === null && f.log(
            `Event processor "${o.id}" dropped event`), gn(c) ? c.then(u => this._notifyEventProcessors(e, u, r,
            i + 1).then(s)).then(null, a) : this._notifyEventProcessors(e, c, r, i + 1).then(s).then(null, a)
        }
      })
    }
    _notifyScopeListeners() {
      this._notifyingListeners || (this._notifyingListeners = !0, this._scopeListeners.forEach(e => {
        e(this)
      }), this._notifyingListeners = !1)
    }
    _applyFingerprint(e) {
      e.fingerprint = e.fingerprint ? Ji(e.fingerprint) : [], this._fingerprint && (e.fingerprint = e.fingerprint
        .concat(this._fingerprint)), e.fingerprint && !e.fingerprint.length && delete e.fingerprint
    }
  }

  function cs() {
    return hr("globalEventProcessors", () => [])
  }

  function Ae(t) {
    cs().push(t)
  }
  const us = 4,
    Vo = 100;
  class yr {
    constructor(e, n = new Dt, r = us) {
      this._version = r, this._stack = [{
        scope: n
      }], e && this.bindClient(e)
    }
    isOlderThan(e) {
      return this._version < e
    }
    bindClient(e) {
      const n = this.getStackTop();
      n.client = e, e && e.setupIntegrations && e.setupIntegrations()
    }
    pushScope() {
      const e = Dt.clone(this.getScope());
      return this.getStack().push({
        client: this.getClient(),
        scope: e
      }), e
    }
    popScope() {
      return this.getStack().length <= 1 ? !1 : !!this.getStack().pop()
    }
    withScope(e) {
      const n = this.pushScope();
      try {
        e(n)
      } finally {
        this.popScope()
      }
    }
    getClient() {
      return this.getStackTop().client
    }
    getScope() {
      return this.getStackTop().scope
    }
    getStack() {
      return this._stack
    }
    getStackTop() {
      return this._stack[this._stack.length - 1]
    }
    captureException(e, n) {
      const r = this._lastEventId = n && n.event_id ? n.event_id : lt(),
        i = new Error("Sentry syntheticException");
      return this._withClient((s, a) => {
        s.captureException(e, {
          originalException: e,
          syntheticException: i,
          ...n,
          event_id: r
        }, a)
      }), r
    }
    captureMessage(e, n, r) {
      const i = this._lastEventId = r && r.event_id ? r.event_id : lt(),
        s = new Error(e);
      return this._withClient((a, o) => {
        a.captureMessage(e, n, {
          originalException: e,
          syntheticException: s,
          ...r,
          event_id: i
        }, o)
      }), i
    }
    captureEvent(e, n) {
      const r = n && n.event_id ? n.event_id : lt();
      return e.type || (this._lastEventId = r), this._withClient((i, s) => {
        i.captureEvent(e, {
          ...n,
          event_id: r
        }, s)
      }), r
    }
    lastEventId() {
      return this._lastEventId
    }
    addBreadcrumb(e, n) {
      const {
        scope: r,
        client: i
      } = this.getStackTop();
      if (!i) return;
      const {
        beforeBreadcrumb: s = null,
        maxBreadcrumbs: a = Vo
      } = i.getOptions && i.getOptions() || {};
      if (a <= 0) return;
      const c = {
          timestamp: yn(),
          ...e
        },
        u = s ? ji(() => s(c, n)) : c;
      u !== null && (i.emit && i.emit("beforeAddBreadcrumb", u, n), r.addBreadcrumb(u, a))
    }
    setUser(e) {
      this.getScope().setUser(e)
    }
    setTags(e) {
      this.getScope().setTags(e)
    }
    setExtras(e) {
      this.getScope().setExtras(e)
    }
    setTag(e, n) {
      this.getScope().setTag(e, n)
    }
    setExtra(e, n) {
      this.getScope().setExtra(e, n)
    }
    setContext(e, n) {
      this.getScope().setContext(e, n)
    }
    configureScope(e) {
      const {
        scope: n,
        client: r
      } = this.getStackTop();
      r && e(n)
    }
    run(e) {
      const n = Wn(this);
      try {
        e(this)
      } finally {
        Wn(n)
      }
    }
    getIntegration(e) {
      const n = this.getClient();
      if (!n) return null;
      try {
        return n.getIntegration(e)
      } catch (r) {
        return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
          `Cannot retrieve integration ${e.id} from the current Hub`), null
      }
    }
    startTransaction(e, n) {
      const r = this._callExtensionMethod("startTransaction", e, n);
      return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && !r && console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':
Sentry.addTracingExtensions();
Sentry.init({...});
`), r
    }
    traceHeaders() {
      return this._callExtensionMethod("traceHeaders")
    }
    captureSession(e = !1) {
      if (e) return this.endSession();
      this._sendSessionUpdate()
    }
    endSession() {
      const n = this.getStackTop().scope,
        r = n.getSession();
      r && Wo(r), this._sendSessionUpdate(), n.setSession()
    }
    startSession(e) {
      const {
        scope: n,
        client: r
      } = this.getStackTop(), {
        release: i,
        environment: s = En
      } = r && r.getOptions() || {}, {
        userAgent: a
      } = nt.navigator || {}, o = jo({
        release: i,
        environment: s,
        user: n.getUser(),
        ...a && {
          userAgent: a
        },
        ...e
      }), c = n.getSession && n.getSession();
      return c && c.status === "ok" && te(c, {
        status: "exited"
      }), this.endSession(), n.setSession(o), o
    }
    shouldSendDefaultPii() {
      const e = this.getClient(),
        n = e && e.getOptions();
      return !!(n && n.sendDefaultPii)
    }
    _sendSessionUpdate() {
      const {
        scope: e,
        client: n
      } = this.getStackTop(), r = e.getSession();
      r && n && n.captureSession && n.captureSession(r)
    }
    _withClient(e) {
      const {
        scope: n,
        client: r
      } = this.getStackTop();
      r && e(r, n)
    }
    _callExtensionMethod(e, ...n) {
      const i = de().__SENTRY__;
      if (i && i.extensions && typeof i.extensions[e] == "function") return i.extensions[e].apply(this, n);
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
        `Extension method ${e} couldn't be found, doing nothing.`)
    }
  }

  function de() {
    return nt.__SENTRY__ = nt.__SENTRY__ || {
      extensions: {},
      hub: void 0
    }, nt
  }

  function Wn(t) {
    const e = de(),
      n = cn(e);
    return ds(e, t), n
  }

  function g() {
    const t = de();
    if (t.__SENTRY__ && t.__SENTRY__.acs) {
      const e = t.__SENTRY__.acs.getCurrentHub();
      if (e) return e
    }
    return Xo(t)
  }

  function Xo(t = de()) {
    return (!Ko(t) || cn(t).isOlderThan(us)) && ds(t, new yr), cn(t)
  }

  function Ko(t) {
    return !!(t && t.__SENTRY__ && t.__SENTRY__.hub)
  }

  function cn(t) {
    return hr("hub", () => new yr, t)
  }

  function ds(t, e) {
    if (!t) return !1;
    const n = t.__SENTRY__ = t.__SENTRY__ || {};
    return n.hub = e, !0
  }

  function Er(t) {
    if (typeof __SENTRY_TRACING__ == "boolean" && !__SENTRY_TRACING__) return !1;
    const e = g().getClient(),
      n = t || e && e.getOptions();
    return !!n && (n.enableTracing || "tracesSampleRate" in n || "tracesSampler" in n)
  }

  function le(t) {
    return (t || g()).getScope().getTransaction()
  }
  let Kr = !1;

  function Jo() {
    Kr || (Kr = !0, V("error", qn), V("unhandledrejection", qn))
  }

  function qn() {
    const t = le();
    if (t) {
      const e = "internal_error";
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        `[Tracing] Transaction: ${e} -> Global error occured`), t.setStatus(e)
    }
  }
  qn.tag = "sentry_tracingErrorCallback";
  class Sn {
    __init() {
      this.spans = []
    }
    constructor(e = 1e3) {
      Sn.prototype.__init.call(this), this._maxlen = e
    }
    add(e) {
      this.spans.length > this._maxlen ? e.spanRecorder = void 0 : this.spans.push(e)
    }
  }
  class yt {
    __init2() {
      this.traceId = lt()
    }
    __init3() {
      this.spanId = lt().substring(16)
    }
    __init4() {
      this.startTimestamp = Yt()
    }
    __init5() {
      this.tags = {}
    }
    __init6() {
      this.data = {}
    }
    __init7() {
      this.instrumenter = "sentry"
    }
    constructor(e) {
      if (yt.prototype.__init2.call(this), yt.prototype.__init3.call(this), yt.prototype.__init4.call(this), yt
        .prototype.__init5.call(this), yt.prototype.__init6.call(this), yt.prototype.__init7.call(this), !e)
        return this;
      e.traceId && (this.traceId = e.traceId), e.spanId && (this.spanId = e.spanId), e.parentSpanId && (this
          .parentSpanId = e.parentSpanId), "sampled" in e && (this.sampled = e.sampled), e.op && (this.op = e.op), e
        .description && (this.description = e.description), e.data && (this.data = e.data), e.tags && (this.tags = e
          .tags), e.status && (this.status = e.status), e.startTimestamp && (this.startTimestamp = e.startTimestamp),
        e.endTimestamp && (this.endTimestamp = e.endTimestamp), e.instrumenter && (this.instrumenter = e.instrumenter)
    }
    startChild(e) {
      const n = new yt({
        ...e,
        parentSpanId: this.spanId,
        sampled: this.sampled,
        traceId: this.traceId
      });
      if (n.spanRecorder = this.spanRecorder, n.spanRecorder && n.spanRecorder.add(n), n.transaction = this
        .transaction, (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && n.transaction) {
        const r = e && e.op || "< unknown op >",
          i = n.transaction.name || "< unknown name >",
          s = n.transaction.spanId,
          a = `[Tracing] Starting '${r}' span on transaction '${i}' (${s}).`;
        n.transaction.metadata.spanMetadata[n.spanId] = {
          logMessage: a
        }, f.log(a)
      }
      return n
    }
    setTag(e, n) {
      return this.tags = {
        ...this.tags,
        [e]: n
      }, this
    }
    setData(e, n) {
      return this.data = {
        ...this.data,
        [e]: n
      }, this
    }
    setStatus(e) {
      return this.status = e, this
    }
    setHttpStatus(e) {
      this.setTag("http.status_code", String(e));
      const n = ls(e);
      return n !== "unknown_error" && this.setStatus(n), this
    }
    isSuccess() {
      return this.status === "ok"
    }
    finish(e) {
      if ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && this.transaction && this.transaction.spanId !== this
        .spanId) {
        const {
          logMessage: n
        } = this.transaction.metadata.spanMetadata[this.spanId];
        n && f.log(n.replace("Starting", "Finishing"))
      }
      this.endTimestamp = typeof e == "number" ? e : Yt()
    }
    toTraceparent() {
      let e = "";
      return this.sampled !== void 0 && (e = this.sampled ? "-1" : "-0"), `${this.traceId}-${this.spanId}${e}`
    }
    toContext() {
      return ut({
        data: this.data,
        description: this.description,
        endTimestamp: this.endTimestamp,
        op: this.op,
        parentSpanId: this.parentSpanId,
        sampled: this.sampled,
        spanId: this.spanId,
        startTimestamp: this.startTimestamp,
        status: this.status,
        tags: this.tags,
        traceId: this.traceId
      })
    }
    updateWithContext(e) {
      return this.data = e.data || {}, this.description = e.description, this.endTimestamp = e.endTimestamp, this.op =
        e.op, this.parentSpanId = e.parentSpanId, this.sampled = e.sampled, this.spanId = e.spanId || this.spanId,
        this.startTimestamp = e.startTimestamp || this.startTimestamp, this.status = e.status, this.tags = e.tags ||
        {}, this.traceId = e.traceId || this.traceId, this
    }
    getTraceContext() {
      return ut({
        data: Object.keys(this.data).length > 0 ? this.data : void 0,
        description: this.description,
        op: this.op,
        parent_span_id: this.parentSpanId,
        span_id: this.spanId,
        status: this.status,
        tags: Object.keys(this.tags).length > 0 ? this.tags : void 0,
        trace_id: this.traceId
      })
    }
    toJSON() {
      return ut({
        data: Object.keys(this.data).length > 0 ? this.data : void 0,
        description: this.description,
        op: this.op,
        parent_span_id: this.parentSpanId,
        span_id: this.spanId,
        start_timestamp: this.startTimestamp,
        status: this.status,
        tags: Object.keys(this.tags).length > 0 ? this.tags : void 0,
        timestamp: this.endTimestamp,
        trace_id: this.traceId
      })
    }
  }

  function ls(t) {
    if (t < 400 && t >= 100) return "ok";
    if (t >= 400 && t < 500) switch (t) {
      case 401:
        return "unauthenticated";
      case 403:
        return "permission_denied";
      case 404:
        return "not_found";
      case 409:
        return "already_exists";
      case 413:
        return "failed_precondition";
      case 429:
        return "resource_exhausted";
      default:
        return "invalid_argument"
    }
    if (t >= 500 && t < 600) switch (t) {
      case 501:
        return "unimplemented";
      case 503:
        return "unavailable";
      case 504:
        return "deadline_exceeded";
      default:
        return "internal_error"
    }
    return "unknown_error"
  }
  class Jt extends yt {
    __init() {
      this._measurements = {}
    }
    __init2() {
      this._contexts = {}
    }
    __init3() {
      this._frozenDynamicSamplingContext = void 0
    }
    constructor(e, n) {
      super(e), Jt.prototype.__init.call(this), Jt.prototype.__init2.call(this), Jt.prototype.__init3.call(this), this
        ._hub = n || g(), this._name = e.name || "", this.metadata = {
          source: "custom",
          ...e.metadata,
          spanMetadata: {}
        }, this._trimEnd = e.trimEnd, this.transaction = this;
      const r = this.metadata.dynamicSamplingContext;
      r && (this._frozenDynamicSamplingContext = {
        ...r
      })
    }
    get name() {
      return this._name
    }
    set name(e) {
      this.setName(e)
    }
    setName(e, n = "custom") {
      this._name = e, this.metadata.source = n
    }
    initSpanRecorder(e = 1e3) {
      this.spanRecorder || (this.spanRecorder = new Sn(e)), this.spanRecorder.add(this)
    }
    setContext(e, n) {
      n === null ? delete this._contexts[e] : this._contexts[e] = n
    }
    setMeasurement(e, n, r = "") {
      this._measurements[e] = {
        value: n,
        unit: r
      }
    }
    setMetadata(e) {
      this.metadata = {
        ...this.metadata,
        ...e
      }
    }
    finish(e) {
      if (this.endTimestamp !== void 0) return;
      this.name || ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
          "Transaction has no name, falling back to `<unlabeled transaction>`."), this.name =
        "<unlabeled transaction>"), super.finish(e);
      const n = this._hub.getClient();
      if (n && n.emit && n.emit("finishTransaction", this), this.sampled !== !0) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
            "[Tracing] Discarding transaction because its trace was not chosen to be sampled."), n && n
          .recordDroppedEvent("sample_rate", "transaction");
        return
      }
      const r = this.spanRecorder ? this.spanRecorder.spans.filter(o => o !== this && o.endTimestamp) : [];
      this._trimEnd && r.length > 0 && (this.endTimestamp = r.reduce((o, c) => o.endTimestamp && c.endTimestamp ? o
        .endTimestamp > c.endTimestamp ? o : c : o).endTimestamp);
      const i = this.metadata,
        s = {
          contexts: {
            ...this._contexts,
            trace: this.getTraceContext()
          },
          spans: r,
          start_timestamp: this.startTimestamp,
          tags: this.tags,
          timestamp: this.endTimestamp,
          transaction: this.name,
          type: "transaction",
          sdkProcessingMetadata: {
            ...i,
            dynamicSamplingContext: this.getDynamicSamplingContext()
          },
          ...i.source && {
            transaction_info: {
              source: i.source
            }
          }
        };
      return Object.keys(this._measurements).length > 0 && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f
        .log("[Measurements] Adding measurements to transaction", JSON.stringify(this._measurements, void 0, 2)), s
        .measurements = this._measurements), (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        `[Tracing] Finishing ${this.op} transaction: ${this.name}.`), this._hub.captureEvent(s)
    }
    toContext() {
      const e = super.toContext();
      return ut({
        ...e,
        name: this.name,
        trimEnd: this._trimEnd
      })
    }
    updateWithContext(e) {
      return super.updateWithContext(e), this.name = e.name || "", this._trimEnd = e.trimEnd, this
    }
    getDynamicSamplingContext() {
      if (this._frozenDynamicSamplingContext) return this._frozenDynamicSamplingContext;
      const e = this._hub || g(),
        n = e && e.getClient();
      if (!n) return {};
      const {
        environment: r,
        release: i
      } = n.getOptions() || {}, {
          publicKey: s
        } = n.getDsn() || {}, a = this.metadata.sampleRate, o = a !== void 0 ? a.toString() : void 0, {
          segment: c
        } = e.getScope().getUser() || {}, u = this.metadata.source, d = u && u !== "url" ? this.name : void 0, l =
        ut({
          environment: r || En,
          release: i,
          transaction: d,
          user_segment: c,
          public_key: s,
          trace_id: this.traceId,
          sample_rate: o
        });
      return n.emit && n.emit("createDsc", l), l
    }
    setHub(e) {
      this._hub = e
    }
  }
  const Qe = {
      idleTimeout: 1e3,
      finalTimeout: 3e4,
      heartbeatInterval: 5e3
    },
    Qo = "finishReason",
    qt = ["heartbeatFailed", "idleTimeout", "documentHidden", "finalTimeout", "externalFinish", "cancelled"];
  class tc extends Sn {
    constructor(e, n, r, i) {
      super(i), this._pushActivity = e, this._popActivity = n, this.transactionSpanId = r
    }
    add(e) {
      e.spanId !== this.transactionSpanId && (e.finish = n => {
        e.endTimestamp = typeof n == "number" ? n : Yt(), this._popActivity(e.spanId)
      }, e.endTimestamp === void 0 && this._pushActivity(e.spanId)), super.add(e)
    }
  }
  class Tt extends Jt {
    __init() {
      this.activities = {}
    }
    __init2() {
      this._heartbeatCounter = 0
    }
    __init3() {
      this._finished = !1
    }
    __init4() {
      this._idleTimeoutCanceledPermanently = !1
    }
    __init5() {
      this._beforeFinishCallbacks = []
    }
    __init6() {
      this._finishReason = qt[4]
    }
    constructor(e, n, r = Qe.idleTimeout, i = Qe.finalTimeout, s = Qe.heartbeatInterval, a = !1) {
      super(e, n), this._idleHub = n, this._idleTimeout = r, this._finalTimeout = i, this._heartbeatInterval = s, this
        ._onScope = a, Tt.prototype.__init.call(this), Tt.prototype.__init2.call(this), Tt.prototype.__init3.call(
          this), Tt.prototype.__init4.call(this), Tt.prototype.__init5.call(this), Tt.prototype.__init6.call(this),
        a && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
          `Setting idle transaction on scope. Span ID: ${this.spanId}`), n.configureScope(o => o.setSpan(this))), this
        ._restartIdleTimeout(), setTimeout(() => {
          this._finished || (this.setStatus("deadline_exceeded"), this._finishReason = qt[3], this.finish())
        }, this._finalTimeout)
    }
    finish(e = Yt()) {
      if (this._finished = !0, this.activities = {}, this.op === "ui.action.click" && this.setTag(Qo, this
          ._finishReason), this.spanRecorder) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Tracing] finishing IdleTransaction", new Date(
          e * 1e3).toISOString(), this.op);
        for (const n of this._beforeFinishCallbacks) n(this, e);
        this.spanRecorder.spans = this.spanRecorder.spans.filter(n => {
          if (n.spanId === this.spanId) return !0;
          n.endTimestamp || (n.endTimestamp = e, n.setStatus("cancelled"), (typeof __SENTRY_DEBUG__ > "u" ||
            __SENTRY_DEBUG__) && f.log("[Tracing] cancelling span since transaction ended early", JSON
            .stringify(n, void 0, 2)));
          const r = n.startTimestamp < e;
          return r || (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
            "[Tracing] discarding Span since it happened after Transaction was finished", JSON.stringify(n,
              void 0, 2)), r
        }), (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Tracing] flushing IdleTransaction")
      } else(typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Tracing] No active IdleTransaction");
      if (this._onScope) {
        const n = this._idleHub.getScope();
        n.getTransaction() === this && n.setSpan(void 0)
      }
      return super.finish(e)
    }
    registerBeforeFinishCallback(e) {
      this._beforeFinishCallbacks.push(e)
    }
    initSpanRecorder(e) {
      if (!this.spanRecorder) {
        const n = i => {
            this._finished || this._pushActivity(i)
          },
          r = i => {
            this._finished || this._popActivity(i)
          };
        this.spanRecorder = new tc(n, r, this.spanId, e), (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f
          .log("Starting heartbeat"), this._pingHeartbeat()
      }
      this.spanRecorder.add(this)
    }
    cancelIdleTimeout(e, {
      restartOnChildSpanChange: n
    } = {
      restartOnChildSpanChange: !0
    }) {
      this._idleTimeoutCanceledPermanently = n === !1, this._idleTimeoutID && (clearTimeout(this._idleTimeoutID), this
        ._idleTimeoutID = void 0, Object.keys(this.activities).length === 0 && this
        ._idleTimeoutCanceledPermanently && (this._finishReason = qt[5], this.finish(e)))
    }
    setFinishReason(e) {
      this._finishReason = e
    }
    _restartIdleTimeout(e) {
      this.cancelIdleTimeout(), this._idleTimeoutID = setTimeout(() => {
        !this._finished && Object.keys(this.activities).length === 0 && (this._finishReason = qt[1], this.finish(
          e))
      }, this._idleTimeout)
    }
    _pushActivity(e) {
      this.cancelIdleTimeout(void 0, {
          restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently
        }), (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(`[Tracing] pushActivity: ${e}`), this
        .activities[e] = !0, (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
          "[Tracing] new activities count", Object.keys(this.activities).length)
    }
    _popActivity(e) {
      if (this.activities[e] && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
          `[Tracing] popActivity ${e}`), delete this.activities[e], (typeof __SENTRY_DEBUG__ > "u" ||
          __SENTRY_DEBUG__) && f.log("[Tracing] new activities count", Object.keys(this.activities).length)), Object
        .keys(this.activities).length === 0) {
        const n = Yt();
        this._idleTimeoutCanceledPermanently ? (this._finishReason = qt[5], this.finish(n)) : this
          ._restartIdleTimeout(n + this._idleTimeout / 1e3)
      }
    }
    _beat() {
      if (this._finished) return;
      const e = Object.keys(this.activities).join("");
      e === this._prevHeartbeatString ? this._heartbeatCounter++ : this._heartbeatCounter = 1, this
        ._prevHeartbeatString = e, this._heartbeatCounter >= 3 ? ((typeof __SENTRY_DEBUG__ > "u" ||
            __SENTRY_DEBUG__) && f.log("[Tracing] Transaction finished because of no change for 3 heart beats"), this
          .setStatus("deadline_exceeded"), this._finishReason = qt[0], this.finish()) : this._pingHeartbeat()
    }
    _pingHeartbeat() {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        `pinging Heartbeat -> current counter: ${this._heartbeatCounter}`), setTimeout(() => {
        this._beat()
      }, this._heartbeatInterval)
    }
  }

  function ec() {
    const e = this.getScope().getSpan();
    return e ? {
      "sentry-trace": e.toTraceparent()
    } : {}
  }

  function fs(t, e, n) {
    if (!Er(e)) return t.sampled = !1, t;
    if (t.sampled !== void 0) return t.setMetadata({
      sampleRate: Number(t.sampled)
    }), t;
    let r;
    return typeof e.tracesSampler == "function" ? (r = e.tracesSampler(n), t.setMetadata({
      sampleRate: Number(r)
    })) : n.parentSampled !== void 0 ? r = n.parentSampled : typeof e.tracesSampleRate < "u" ? (r = e
      .tracesSampleRate, t.setMetadata({
        sampleRate: Number(r)
      })) : (r = 1, t.setMetadata({
      sampleRate: r
    })), nc(r) ? r ? (t.sampled = Math.random() < r, t.sampled ? ((typeof __SENTRY_DEBUG__ > "u" ||
      __SENTRY_DEBUG__) && f.log(`[Tracing] starting ${t.op} transaction - ${t.name}`), t) : ((
      typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(r)})`
    ), t)) : ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      `[Tracing] Discarding transaction because ${typeof e.tracesSampler=="function"?"tracesSampler returned 0 or false":"a negative sampling decision was inherited or tracesSampleRate is set to 0"}`
    ), t.sampled = !1, t) : ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
      "[Tracing] Discarding transaction because of invalid sample rate."), t.sampled = !1, t)
  }

  function nc(t) {
    return Fi(t) || !(typeof t == "number" || typeof t == "boolean") ? ((typeof __SENTRY_DEBUG__ > "u" ||
      __SENTRY_DEBUG__) && f.warn(
      `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(t)} of type ${JSON.stringify(typeof t)}.`
    ), !1) : t < 0 || t > 1 ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
      `[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${t}.`), !1) : !0
  }

  function rc(t, e) {
    const n = this.getClient(),
      r = n && n.getOptions() || {},
      i = r.instrumenter || "sentry",
      s = t.instrumenter || "sentry";
    i !== s && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(`A transaction was started with instrumenter=\`${s}\`, but the SDK is configured with the \`${i}\` instrumenter.
The transaction will not be sampled. Please use the ${i} instrumentation to start transactions.`), t.sampled = !1);
    let a = new Jt(t, this);
    return a = fs(a, r, {
      parentSampled: t.parentSampled,
      transactionContext: t,
      ...e
    }), a.sampled && a.initSpanRecorder(r._experiments && r._experiments.maxSpans), n && n.emit && n.emit(
      "startTransaction", a), a
  }

  function Jr(t, e, n, r, i, s, a) {
    const o = t.getClient(),
      c = o && o.getOptions() || {};
    let u = new Tt(e, t, n, r, a, i);
    return u = fs(u, c, {
      parentSampled: e.parentSampled,
      transactionContext: e,
      ...s
    }), u.sampled && u.initSpanRecorder(c._experiments && c._experiments.maxSpans), o && o.emit && o.emit(
      "startTransaction", u), u
  }

  function _s() {
    const t = de();
    t.__SENTRY__ && (t.__SENTRY__.extensions = t.__SENTRY__.extensions || {}, t.__SENTRY__.extensions
      .startTransaction || (t.__SENTRY__.extensions.startTransaction = rc), t.__SENTRY__.extensions.traceHeaders || (t
        .__SENTRY__.extensions.traceHeaders = ec), Jo())
  }

  function ic(t, e, n = () => {}) {
    const r = {
      ...t
    };
    r.name !== void 0 && r.description === void 0 && (r.description = r.name);
    const i = g(),
      s = i.getScope(),
      a = s.getSpan(),
      o = a ? a.startChild(r) : i.startTransaction(r);
    s.setSpan(o);

    function c() {
      o && o.finish(), i.getScope().setSpan(a)
    }
    let u;
    try {
      u = e(o)
    } catch (d) {
      throw o && o.setStatus("internal_error"), n(d), c(), d
    }
    return gn(u) ? Promise.resolve(u).then(() => {
      c()
    }, d => {
      o && o.setStatus("internal_error"), n(d), c()
    }) : c(), u
  }

  function bn(t, e) {
    return g().captureException(t, {
      captureContext: e
    })
  }

  function sc(t, e) {
    const n = typeof e == "string" ? e : void 0,
      r = typeof e != "string" ? {
        captureContext: e
      } : void 0;
    return g().captureMessage(t, n, r)
  }

  function ac(t, e) {
    return g().captureEvent(t, e)
  }

  function oc(t) {
    g().configureScope(t)
  }

  function hs(t) {
    g().addBreadcrumb(t)
  }

  function ps(t, e) {
    g().setContext(t, e)
  }

  function cc(t) {
    g().setExtras(t)
  }

  function uc(t, e) {
    g().setExtra(t, e)
  }

  function dc(t) {
    g().setTags(t)
  }

  function lc(t, e) {
    g().setTag(t, e)
  }

  function fc(t) {
    g().setUser(t)
  }

  function ms(t) {
    g().withScope(t)
  }

  function _c(t, e) {
    return g().startTransaction({
      ...t
    }, e)
  }
  const hc = "7";

  function gs(t) {
    const e = t.protocol ? `${t.protocol}:` : "",
      n = t.port ? `:${t.port}` : "";
    return `${e}//${t.host}${n}${t.path?`/${t.path}`:""}/api/`
  }

  function pc(t) {
    return `${gs(t)}${t.projectId}/envelope/`
  }

  function mc(t, e) {
    return Ka({
      sentry_key: t.publicKey,
      sentry_version: hc,
      ...e && {
        sentry_client: `${e.name}/${e.version}`
      }
    })
  }

  function ys(t, e = {}) {
    const n = typeof e == "string" ? e : e.tunnel,
      r = typeof e == "string" || !e._metadata ? void 0 : e._metadata.sdk;
    return n || `${pc(t)}?${mc(t,r)}`
  }

  function gc(t, e) {
    const n = Hi(t),
      r = `${gs(n)}embed/error-page/`;
    let i = `dsn=${ce(n)}`;
    for (const s in e)
      if (s !== "dsn")
        if (s === "user") {
          const a = e.user;
          if (!a) continue;
          a.name && (i += `&name=${encodeURIComponent(a.name)}`), a.email && (i +=
            `&email=${encodeURIComponent(a.email)}`)
        } else i += `&${encodeURIComponent(s)}=${encodeURIComponent(e[s])}`;
    return `${r}?${i}`
  }

  function yc(t, e) {
    return e && (t.sdk = t.sdk || {}, t.sdk.name = t.sdk.name || e.name, t.sdk.version = t.sdk.version || e.version, t
      .sdk.integrations = [...t.sdk.integrations || [], ...e.integrations || []], t.sdk.packages = [...t.sdk
        .packages || [], ...e.packages || []
      ]), t
  }

  function Ec(t, e, n, r) {
    const i = gr(n),
      s = {
        sent_at: new Date().toISOString(),
        ...i && {
          sdk: i
        },
        ...!!r && {
          dsn: ce(e)
        }
      },
      a = "aggregates" in t ? [{
        type: "sessions"
      }, t] : [{
        type: "session"
      }, t];
    return Wt(s, [a])
  }

  function Sc(t, e, n, r) {
    const i = gr(n),
      s = t.type && t.type !== "replay_event" ? t.type : "event";
    yc(t, n && n.sdk);
    const a = is(t, i, r, e);
    return delete t.sdkProcessingMetadata, Wt(a, [
      [{
        type: s
      }, t]
    ])
  }
  const Qr = [];

  function bc(t) {
    const e = {};
    return t.forEach(n => {
      const {
        name: r
      } = n, i = e[r];
      i && !i.isDefaultInstance && n.isDefaultInstance || (e[r] = n)
    }), Object.keys(e).map(n => e[n])
  }

  function wc(t) {
    const e = t.defaultIntegrations || [],
      n = t.integrations;
    e.forEach(a => {
      a.isDefaultInstance = !0
    });
    let r;
    Array.isArray(n) ? r = [...e, ...n] : typeof n == "function" ? r = Ji(n(e)) : r = e;
    const i = bc(r),
      s = vc(i, a => a.name === "Debug");
    if (s !== -1) {
      const [a] = i.splice(s, 1);
      i.push(a)
    }
    return i
  }

  function Tc(t) {
    const e = {};
    return t.forEach(n => {
      n && Es(n, e)
    }), e
  }

  function Es(t, e) {
    e[t.name] = t, Qr.indexOf(t.name) === -1 && (t.setupOnce(Ae, g), Qr.push(t.name), (typeof __SENTRY_DEBUG__ > "u" ||
      __SENTRY_DEBUG__) && f.log(`Integration installed: ${t.name}`))
  }

  function vc(t, e) {
    for (let n = 0; n < t.length; n++)
      if (e(t[n]) === !0) return n;
    return -1
  }

  function Ss(t, e, n, r) {
    const {
      normalizeDepth: i = 3,
      normalizeMaxBreadth: s = 1e3
    } = t, a = {
      ...e,
      event_id: e.event_id || n.event_id || lt(),
      timestamp: e.timestamp || yn()
    }, o = n.integrations || t.integrations.map(d => d.name);
    Rc(a, t), Nc(a, o), e.type === void 0 && kc(a, t.stackParser);
    let c = r;
    n.captureContext && (c = Dt.clone(c).update(n.captureContext));
    let u = St(a);
    if (c) {
      if (c.getAttachments) {
        const d = [...n.attachments || [], ...c.getAttachments()];
        d.length && (n.attachments = d)
      }
      u = c.applyToEvent(a, n)
    }
    return u.then(d => typeof i == "number" && i > 0 ? Dc(d, i, s) : d)
  }

  function Rc(t, e) {
    const {
      environment: n,
      release: r,
      dist: i,
      maxValueLength: s = 250
    } = e;
    "environment" in t || (t.environment = "environment" in e ? n : En), t.release === void 0 && r !== void 0 && (t
      .release = r), t.dist === void 0 && i !== void 0 && (t.dist = i), t.message && (t.message = ye(t.message, s));
    const a = t.exception && t.exception.values && t.exception.values[0];
    a && a.value && (a.value = ye(a.value, s));
    const o = t.request;
    o && o.url && (o.url = ye(o.url, s))
  }
  const ti = new WeakMap;

  function kc(t, e) {
    const n = nt._sentryDebugIds;
    if (!n) return;
    let r;
    const i = ti.get(e);
    i ? r = i : (r = new Map, ti.set(e, r));
    const s = Object.keys(n).reduce((c, u) => {
        let d;
        const l = r.get(u);
        l ? d = l : (d = e(u), r.set(u, d));
        for (let h = d.length - 1; h >= 0; h--) {
          const _ = d[h];
          if (_.filename) {
            c[_.filename] = n[u];
            break
          }
        }
        return c
      }, {}),
      a = new Set;
    try {
      t.exception.values.forEach(c => {
        c.stacktrace.frames.forEach(u => {
          u.filename && a.add(u.filename)
        })
      })
    } catch (c) {}
    t.debug_meta = t.debug_meta || {}, t.debug_meta.images = t.debug_meta.images || [];
    const o = t.debug_meta.images;
    a.forEach(c => {
      s[c] && o.push({
        type: "sourcemap",
        code_file: c,
        debug_id: s[c]
      })
    })
  }

  function Nc(t, e) {
    e.length > 0 && (t.sdk = t.sdk || {}, t.sdk.integrations = [...t.sdk.integrations || [], ...e])
  }

  function Dc(t, e, n) {
    if (!t) return null;
    const r = {
      ...t,
      ...t.breadcrumbs && {
        breadcrumbs: t.breadcrumbs.map(i => ({
          ...i,
          ...i.data && {
            data: pt(i.data, e, n)
          }
        }))
      },
      ...t.user && {
        user: pt(t.user, e, n)
      },
      ...t.contexts && {
        contexts: pt(t.contexts, e, n)
      },
      ...t.extra && {
        extra: pt(t.extra, e, n)
      }
    };
    return t.contexts && t.contexts.trace && r.contexts && (r.contexts.trace = t.contexts.trace, t.contexts.trace
      .data && (r.contexts.trace.data = pt(t.contexts.trace.data, e, n))), t.spans && (r.spans = t.spans.map(i => (i
      .data && (i.data = pt(i.data, e, n)), i))), r
  }
  const ei = "Not capturing exception because it's already been captured.";
  class Lt {
    __init() {
      this._integrations = {}
    }
    __init2() {
      this._integrationsInitialized = !1
    }
    __init3() {
      this._numProcessing = 0
    }
    __init4() {
      this._outcomes = {}
    }
    __init5() {
      this._hooks = {}
    }
    constructor(e) {
      if (Lt.prototype.__init.call(this), Lt.prototype.__init2.call(this), Lt.prototype.__init3.call(this), Lt
        .prototype.__init4.call(this), Lt.prototype.__init5.call(this), this._options = e, e.dsn) {
        this._dsn = Hi(e.dsn);
        const n = ys(this._dsn, e);
        this._transport = e.transport({
          recordDroppedEvent: this.recordDroppedEvent.bind(this),
          ...e.transportOptions,
          url: n
        })
      } else(typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
        "No DSN provided, client will not do anything.")
    }
    captureException(e, n, r) {
      if (qr(e)) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(ei);
        return
      }
      let i = n && n.event_id;
      return this._process(this.eventFromException(e, n).then(s => this._captureEvent(s, n, r)).then(s => {
        i = s
      })), i
    }
    captureMessage(e, n, r, i) {
      let s = r && r.event_id;
      const a = Yi(e) ? this.eventFromMessage(String(e), n, r) : this.eventFromException(e, r);
      return this._process(a.then(o => this._captureEvent(o, r, i)).then(o => {
        s = o
      })), s
    }
    captureEvent(e, n, r) {
      if (n && n.originalException && qr(n.originalException)) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(ei);
        return
      }
      let i = n && n.event_id;
      return this._process(this._captureEvent(e, n, r).then(s => {
        i = s
      })), i
    }
    captureSession(e) {
      if (!this._isEnabled()) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn("SDK not enabled, will not capture session.");
        return
      }
      typeof e.release != "string" ? (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
        "Discarded session because of missing or non-string release") : (this.sendSession(e), te(e, {
        init: !1
      }))
    }
    getDsn() {
      return this._dsn
    }
    getOptions() {
      return this._options
    }
    getSdkMetadata() {
      return this._options._metadata
    }
    getTransport() {
      return this._transport
    }
    flush(e) {
      const n = this._transport;
      return n ? this._isClientDoneProcessing(e).then(r => n.flush(e).then(i => r && i)) : St(!0)
    }
    close(e) {
      return this.flush(e).then(n => (this.getOptions().enabled = !1, n))
    }
    setupIntegrations() {
      this._isEnabled() && !this._integrationsInitialized && (this._integrations = Tc(this._options.integrations),
        this._integrationsInitialized = !0)
    }
    getIntegrationById(e) {
      return this._integrations[e]
    }
    getIntegration(e) {
      try {
        return this._integrations[e.id] || null
      } catch (n) {
        return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
          `Cannot retrieve integration ${e.id} from the current Client`), null
      }
    }
    addIntegration(e) {
      Es(e, this._integrations)
    }
    sendEvent(e, n = {}) {
      if (this._dsn) {
        let r = Sc(e, this._dsn, this._options._metadata, this._options.tunnel);
        for (const s of n.attachments || []) r = Io(r, Uo(s, this._options.transportOptions && this._options
          .transportOptions.textEncoder));
        const i = this._sendEnvelope(r);
        i && i.then(s => this.emit("afterSendEvent", e, s), null)
      }
    }
    sendSession(e) {
      if (this._dsn) {
        const n = Ec(e, this._dsn, this._options._metadata, this._options.tunnel);
        this._sendEnvelope(n)
      }
    }
    recordDroppedEvent(e, n, r) {
      if (this._options.sendClientReports) {
        const i = `${e}:${n}`;
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(`Adding outcome: "${i}"`), this._outcomes[i] =
          this._outcomes[i] + 1 || 1
      }
    }
    on(e, n) {
      this._hooks[e] || (this._hooks[e] = []), this._hooks[e].push(n)
    }
    emit(e, ...n) {
      this._hooks[e] && this._hooks[e].forEach(r => r(...n))
    }
    _updateSessionFromEvent(e, n) {
      let r = !1,
        i = !1;
      const s = n.exception && n.exception.values;
      if (s) {
        i = !0;
        for (const c of s) {
          const u = c.mechanism;
          if (u && u.handled === !1) {
            r = !0;
            break
          }
        }
      }
      const a = e.status === "ok";
      (a && e.errors === 0 || a && r) && (te(e, {
        ...r && {
          status: "crashed"
        },
        errors: e.errors || Number(i || r)
      }), this.captureSession(e))
    }
    _isClientDoneProcessing(e) {
      return new tt(n => {
        let r = 0;
        const i = 1,
          s = setInterval(() => {
            this._numProcessing == 0 ? (clearInterval(s), n(!0)) : (r += i, e && r >= e && (clearInterval(s), n(
              !1)))
          }, i)
      })
    }
    _isEnabled() {
      return this.getOptions().enabled !== !1 && this._dsn !== void 0
    }
    _prepareEvent(e, n, r) {
      const i = this.getOptions(),
        s = Object.keys(this._integrations);
      return !n.integrations && s.length > 0 && (n.integrations = s), Ss(i, e, n, r)
    }
    _captureEvent(e, n = {}, r) {
      return this._processEvent(e, n, r).then(i => i.event_id, i => {
        if (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) {
          const s = i;
          s.logLevel === "log" ? f.log(s.message) : f.warn(s)
        }
      })
    }
    _processEvent(e, n, r) {
      const i = this.getOptions(),
        {
          sampleRate: s
        } = i;
      if (!this._isEnabled()) return an(new J("SDK not enabled, will not capture event.", "log"));
      const a = ws(e),
        o = bs(e),
        c = e.type || "error",
        u = `before send for type \`${c}\``;
      if (o && typeof s == "number" && Math.random() > s) return this.recordDroppedEvent("sample_rate", "error", e),
        an(new J(`Discarding event because it's not included in the random sample (sampling rate = ${s})`, "log"));
      const d = c === "replay_event" ? "replay" : c;
      return this._prepareEvent(e, n, r).then(l => {
        if (l === null) throw this.recordDroppedEvent("event_processor", d, e), new J(
          "An event processor returned `null`, will not send event.", "log");
        if (n.data && n.data.__sentry__ === !0) return l;
        const _ = Ic(i, l, n);
        return xc(_, u)
      }).then(l => {
        if (l === null) throw this.recordDroppedEvent("before_send", d, e), new J(
          `${u} returned \`null\`, will not send event.`, "log");
        const h = r && r.getSession();
        !a && h && this._updateSessionFromEvent(h, l);
        const _ = l.transaction_info;
        if (a && _ && l.transaction !== e.transaction) {
          const p = "custom";
          l.transaction_info = {
            ..._,
            source: p
          }
        }
        return this.sendEvent(l, n), l
      }).then(null, l => {
        throw l instanceof J ? l : (this.captureException(l, {
          data: {
            __sentry__: !0
          },
          originalException: l
        }), new J(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${l}`))
      })
    }
    _process(e) {
      this._numProcessing++, e.then(n => (this._numProcessing--, n), n => (this._numProcessing--, n))
    }
    _sendEnvelope(e) {
      if (this._transport && this._dsn) return this.emit("beforeEnvelope", e), this._transport.send(e).then(null,
        n => {
          (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error("Error while sending event:", n)
        });
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error("Transport disabled")
    }
    _clearOutcomes() {
      const e = this._outcomes;
      return this._outcomes = {}, Object.keys(e).map(n => {
        const [r, i] = n.split(":");
        return {
          reason: r,
          category: i,
          quantity: e[n]
        }
      })
    }
  }

  function xc(t, e) {
    const n = `${e} must return \`null\` or a valid event.`;
    if (gn(t)) return t.then(r => {
      if (!Qt(r) && r !== null) throw new J(n);
      return r
    }, r => {
      throw new J(`${e} rejected with ${r}`)
    });
    if (!Qt(t) && t !== null) throw new J(n);
    return t
  }

  function Ic(t, e, n) {
    const {
      beforeSend: r,
      beforeSendTransaction: i
    } = t;
    return bs(e) && r ? r(e, n) : ws(e) && i ? i(e, n) : e
  }

  function bs(t) {
    return t.type === void 0
  }

  function ws(t) {
    return t.type === "transaction"
  }

  function Oc(t, e) {
    e.debug === !0 && (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__ ? f.enable() : console.warn(
      "[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle."));
    const n = g();
    n.getScope().update(e.initialScope);
    const i = new t(e);
    n.bindClient(i)
  }
  const Ac = 30;

  function Sr(t, e, n = vo(t.bufferSize || Ac)) {
    let r = {};
    const i = a => n.drain(a);

    function s(a) {
      const o = [];
      if (on(a, (l, h) => {
          const _ = Vr(h);
          if (Po(r, _)) {
            const p = ni(l, h);
            t.recordDroppedEvent("ratelimit_backoff", _, p)
          } else o.push(l)
        }), o.length === 0) return St();
      const c = Wt(a[0], o),
        u = l => {
          on(c, (h, _) => {
            const p = ni(h, _);
            t.recordDroppedEvent(l, Vr(_), p)
          })
        },
        d = () => e({
          body: rs(c, t.textEncoder)
        }).then(l => (l.statusCode !== void 0 && (l.statusCode < 200 || l.statusCode >= 300) && (
          typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
          `Sentry responded with status code ${l.statusCode} to sent event.`), r = Yo(r, l), l), l => {
          throw u("network_error"), l
        });
      return n.add(d).then(l => l, l => {
        if (l instanceof J) return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(
          "Skipped sending event because buffer is full."), u("queue_overflow"), St();
        throw l
      })
    }
    return s.__sentry__baseTransport__ = !0, {
      send: s,
      flush: i
    }
  }

  function ni(t, e) {
    if (!(e !== "event" && e !== "transaction")) return Array.isArray(t) ? t[1] : void 0
  }
  const Cc = 100,
    ri = 5e3,
    Uc = 36e5;

  function An(t, e) {
    (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.info(`[Offline]: ${t}`, e)
  }

  function Bc(t) {
    return e => {
      const n = t(e),
        r = e.createStore ? e.createStore(e) : void 0;
      let i = ri,
        s;

      function a(d, l, h) {
        return Oo(d, ["replay_event", "replay_recording", "client_report"]) ? !1 : e.shouldStore ? e.shouldStore(d, l,
          h) : !0
      }

      function o(d) {
        r && (s && clearTimeout(s), s = setTimeout(async () => {
          s = void 0;
          const l = await r.pop();
          l && (An("Attempting to send previously queued event"), u(l).catch(h => {
            An("Failed to retry sending", h)
          }))
        }, d), typeof s != "number" && s.unref && s.unref())
      }

      function c() {
        s || (o(i), i = Math.min(i * 2, Uc))
      }
      async function u(d) {
        try {
          const l = await n.send(d);
          let h = Cc;
          if (l) {
            if (l.headers && l.headers["retry-after"]) h = ss(l.headers["retry-after"]);
            else if ((l.statusCode || 0) >= 400) return l
          }
          return o(h), i = ri, l
        } catch (l) {
          if (r && await a(d, l, i)) return await r.insert(d), c(), An("Error sending. Event queued", l), {};
          throw l
        }
      }
      return e.flushAtStartup && c(), {
        send: u,
        flush: d => n.flush(d)
      }
    }
  }

  function Lc(t, e) {
    let n;
    return on(t, (r, i) => (e.includes(i) && (n = Array.isArray(r) ? r[1] : void 0), !!n)), n
  }

  function Mc(t, e) {
    return n => {
      const r = t(n),
        i = {};

      function s(c) {
        if (!i[c]) {
          const u = ys(zi(c));
          i[c] = t({
            ...n,
            url: u
          })
        }
        return i[c]
      }
      async function a(c) {
        function u(h) {
          const _ = h && h.length ? h : ["event"];
          return Lc(c, _)
        }
        const d = e({
          envelope: c,
          getEvent: u
        }).map(h => s(h));
        return d.length === 0 && d.push(r), (await Promise.all(d.map(h => h.send(c))))[0]
      }
      async function o(c) {
        const u = [...Object.keys(i).map(l => i[l]), r];
        return (await Promise.all(u.map(l => l.flush(c)))).every(l => l)
      }
      return {
        send: a,
        flush: o
      }
    }
  }
  const Zn = "7.51.2";
  let ii;
  class Ft {
    constructor() {
      Ft.prototype.__init.call(this)
    }
    static __initStatic() {
      this.id = "FunctionToString"
    }
    __init() {
      this.name = Ft.id
    }
    setupOnce() {
      ii = Function.prototype.toString;
      try {
        Function.prototype.toString = function(...e) {
          const n = mr(this) || this;
          return ii.apply(n, e)
        }
      } catch (e) {}
    }
  }
  Ft.__initStatic();
  const Gc = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/];
  class xt {
    static __initStatic() {
      this.id = "InboundFilters"
    }
    __init() {
      this.name = xt.id
    }
    constructor(e = {}) {
      this._options = e, xt.prototype.__init.call(this)
    }
    setupOnce(e, n) {
      const r = i => {
        const s = n();
        if (s) {
          const a = s.getIntegration(xt);
          if (a) {
            const o = s.getClient(),
              c = o ? o.getOptions() : {},
              u = Pc(a._options, c);
            return Yc(i, u) ? null : i
          }
        }
        return i
      };
      r.id = this.name, e(r)
    }
  }
  xt.__initStatic();

  function Pc(t = {}, e = {}) {
    return {
      allowUrls: [...t.allowUrls || [], ...e.allowUrls || []],
      denyUrls: [...t.denyUrls || [], ...e.denyUrls || []],
      ignoreErrors: [...t.ignoreErrors || [], ...e.ignoreErrors || [], ...Gc],
      ignoreTransactions: [...t.ignoreTransactions || [], ...e.ignoreTransactions || []],
      ignoreInternal: t.ignoreInternal !== void 0 ? t.ignoreInternal : !0
    }
  }

  function Yc(t, e) {
    return e.ignoreInternal && Wc(t) ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(`Event dropped due to being internal Sentry Error.
Event: ${vt(t)}`), !0) : Fc(t, e.ignoreErrors) ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${vt(t)}`), !0) : zc(t, e.ignoreTransactions) ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${vt(t)}`), !0) : $c(t, e.denyUrls) ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${vt(t)}.
Url: ${un(t)}`), !0) : Hc(t, e.allowUrls) ? !1 : ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${vt(t)}.
Url: ${un(t)}`), !0)
  }

  function Fc(t, e) {
    return t.type || !e || !e.length ? !1 : jc(t).some(n => ue(n, e))
  }

  function zc(t, e) {
    if (t.type !== "transaction" || !e || !e.length) return !1;
    const n = t.transaction;
    return n ? ue(n, e) : !1
  }

  function $c(t, e) {
    if (!e || !e.length) return !1;
    const n = un(t);
    return n ? ue(n, e) : !1
  }

  function Hc(t, e) {
    if (!e || !e.length) return !0;
    const n = un(t);
    return n ? ue(n, e) : !0
  }

  function jc(t) {
    if (t.message) return [t.message];
    if (t.exception) try {
      const {
        type: e = "",
        value: n = ""
      } = t.exception.values && t.exception.values[0] || {};
      return [`${n}`, `${e}: ${n}`]
    } catch (e) {
      return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(
        `Cannot extract message for event ${vt(t)}`), []
    }
    return []
  }

  function Wc(t) {
    try {
      return t.exception.values[0].type === "SentryError"
    } catch (e) {}
    return !1
  }

  function qc(t = []) {
    for (let e = t.length - 1; e >= 0; e--) {
      const n = t[e];
      if (n && n.filename !== "<anonymous>" && n.filename !== "[native code]") return n.filename || null
    }
    return null
  }

  function un(t) {
    try {
      let e;
      try {
        e = t.exception.values[0].stacktrace.frames
      } catch (n) {}
      return e ? qc(e) : null
    } catch (e) {
      return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(`Cannot extract url for event ${vt(t)}`),
        null
    }
  }
  const Zc = Object.freeze(Object.defineProperty({
      __proto__: null,
      FunctionToString: Ft,
      InboundFilters: xt
    }, Symbol.toStringTag, {
      value: "Module"
    })),
    y = nt;
  let Vn = 0;

  function Ts() {
    return Vn > 0
  }

  function Vc() {
    Vn++, setTimeout(() => {
      Vn--
    })
  }

  function zt(t, e = {}, n) {
    if (typeof t != "function") return t;
    try {
      const i = t.__sentry_wrapped__;
      if (i) return i;
      if (mr(t)) return t
    } catch (i) {
      return t
    }
    const r = function() {
      const i = Array.prototype.slice.call(arguments);
      try {
        n && typeof n == "function" && n.apply(this, arguments);
        const s = i.map(a => zt(a, e));
        return t.apply(this, s)
      } catch (s) {
        throw Vc(), ms(a => {
          a.addEventProcessor(o => (e.mechanism && (Fn(o, void 0, void 0), ve(o, e.mechanism)), o.extra = {
            ...o.extra,
            arguments: i
          }, o)), bn(s)
        }), s
      }
    };
    try {
      for (const i in t) Object.prototype.hasOwnProperty.call(t, i) && (r[i] = t[i])
    } catch (i) {}
    Wi(r, t), pr(t, "__sentry_wrapped__", r);
    try {
      Object.getOwnPropertyDescriptor(r, "name").configurable && Object.defineProperty(r, "name", {
        get() {
          return t.name
        }
      })
    } catch (i) {}
    return r
  }

  function vs(t, e) {
    const n = br(t, e),
      r = {
        type: e && e.name,
        value: Qc(e)
      };
    return n.length && (r.stacktrace = {
      frames: n
    }), r.type === void 0 && r.value === "" && (r.value = "Unrecoverable error caught"), r
  }

  function Xc(t, e, n, r) {
    const s = g().getClient(),
      a = s && s.getOptions().normalizeDepth,
      o = {
        exception: {
          values: [{
            type: _r(e) ? e.constructor.name : r ? "UnhandledRejection" : "Error",
            value: `Non-Error ${r?"promise rejection":"exception"} captured with keys: ${Ja(e)}`
          }]
        },
        extra: {
          __serialized__: ts(e, a)
        }
      };
    if (n) {
      const c = br(t, n);
      c.length && (o.exception.values[0].stacktrace = {
        frames: c
      })
    }
    return o
  }

  function Cn(t, e) {
    return {
      exception: {
        values: [vs(t, e)]
      }
    }
  }

  function br(t, e) {
    const n = e.stacktrace || e.stack || "",
      r = Jc(e);
    try {
      return t(n, r)
    } catch (i) {}
    return []
  }
  const Kc = /Minified React error #\d+;/i;

  function Jc(t) {
    if (t) {
      if (typeof t.framesToPop == "number") return t.framesToPop;
      if (Kc.test(t.message)) return 1
    }
    return 0
  }

  function Qc(t) {
    const e = t && t.message;
    return e ? e.error && typeof e.error.message == "string" ? e.error.message : e : "No error message"
  }

  function Rs(t, e, n, r) {
    const i = n && n.syntheticException || void 0,
      s = wr(t, e, i, r);
    return ve(s), s.level = "error", n && n.event_id && (s.event_id = n.event_id), St(s)
  }

  function ks(t, e, n = "info", r, i) {
    const s = r && r.syntheticException || void 0,
      a = Xn(t, e, s, i);
    return a.level = n, r && r.event_id && (a.event_id = r.event_id), St(a)
  }

  function wr(t, e, n, r, i) {
    let s;
    if (Pi(e) && e.error) return Cn(t, e.error);
    if (Gr(e) || Ga(e)) {
      const a = e;
      if ("stack" in e) s = Cn(t, e);
      else {
        const o = a.name || (Gr(a) ? "DOMError" : "DOMException"),
          c = a.message ? `${o}: ${a.message}` : o;
        s = Xn(t, c, n, r), Fn(s, c)
      }
      return "code" in a && (s.tags = {
        ...s.tags,
        "DOMException.code": `${a.code}`
      }), s
    }
    return Gi(e) ? Cn(t, e) : Qt(e) || _r(e) ? (s = Xc(t, e, n, i), ve(s, {
      synthetic: !0
    }), s) : (s = Xn(t, e, n, r), Fn(s, `${e}`, void 0), ve(s, {
      synthetic: !0
    }), s)
  }

  function Xn(t, e, n, r) {
    const i = {
      message: e
    };
    if (r && n) {
      const s = br(t, n);
      s.length && (i.exception = {
        values: [{
          value: e,
          stacktrace: {
            frames: s
          }
        }]
      })
    }
    return i
  }
  const He = 1024,
    Ns = "Breadcrumbs";
  class $t {
    static __initStatic() {
      this.id = Ns
    }
    __init() {
      this.name = $t.id
    }
    constructor(e) {
      $t.prototype.__init.call(this), this.options = {
        console: !0,
        dom: !0,
        fetch: !0,
        history: !0,
        sentry: !0,
        xhr: !0,
        ...e
      }
    }
    setupOnce() {
      this.options.console && V("console", eu), this.options.dom && V("dom", tu(this.options.dom)), this.options
        .xhr && V("xhr", nu), this.options.fetch && V("fetch", ru), this.options.history && V("history", iu)
    }
    addSentryBreadcrumb(e) {
      this.options.sentry && g().addBreadcrumb({
        category: `sentry.${e.type==="transaction"?"transaction":"event"}`,
        event_id: e.event_id,
        level: e.level,
        message: vt(e)
      }, {
        event: e
      })
    }
  }
  $t.__initStatic();

  function tu(t) {
    function e(n) {
      let r, i = typeof t == "object" ? t.serializeAttribute : void 0,
        s = typeof t == "object" && typeof t.maxStringLength == "number" ? t.maxStringLength : void 0;
      s && s > He && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
        `\`dom.maxStringLength\` cannot exceed ${He}, but a value of ${s} was configured. Sentry will use ${He} instead.`
      ), s = He), typeof i == "string" && (i = [i]);
      try {
        const a = n.event;
        r = su(a) ? Pt(a.target, {
          keyAttrs: i,
          maxStringLength: s
        }) : Pt(a, {
          keyAttrs: i,
          maxStringLength: s
        })
      } catch (a) {
        r = "<unknown>"
      }
      r.length !== 0 && g().addBreadcrumb({
        category: `ui.${n.name}`,
        message: r
      }, {
        event: n.event,
        name: n.name,
        global: n.global
      })
    }
    return e
  }

  function eu(t) {
    for (let n = 0; n < t.args.length; n++)
      if (t.args[n] === "ref=Ref<") {
        t.args[n + 1] = "viewRef";
        break
      } const e = {
      category: "console",
      data: {
        arguments: t.args,
        logger: "console"
      },
      level: ko(t.level),
      message: Yr(t.args, " ")
    };
    if (t.level === "assert")
      if (t.args[0] === !1) e.message = `Assertion failed: ${Yr(t.args.slice(1)," ")||"console.assert"}`, e.data
        .arguments = t.args.slice(1);
      else return;
    g().addBreadcrumb(e, {
      input: t.args,
      level: t.level
    })
  }

  function nu(t) {
    const {
      startTimestamp: e,
      endTimestamp: n
    } = t, r = t.xhr[Rt];
    if (!e || !n || !r) return;
    const {
      method: i,
      url: s,
      status_code: a,
      body: o
    } = r, c = {
      method: i,
      url: s,
      status_code: a
    }, u = {
      xhr: t.xhr,
      input: o,
      startTimestamp: e,
      endTimestamp: n
    };
    g().addBreadcrumb({
      category: "xhr",
      data: c,
      type: "http"
    }, u)
  }

  function ru(t) {
    const {
      startTimestamp: e,
      endTimestamp: n
    } = t;
    if (n && !(t.fetchData.url.match(/sentry_key/) && t.fetchData.method === "POST"))
      if (t.error) {
        const r = t.fetchData,
          i = {
            data: t.error,
            input: t.args,
            startTimestamp: e,
            endTimestamp: n
          };
        g().addBreadcrumb({
          category: "fetch",
          data: r,
          level: "error",
          type: "http"
        }, i)
      } else {
        const r = {
            ...t.fetchData,
            status_code: t.response && t.response.status
          },
          i = {
            input: t.args,
            response: t.response,
            startTimestamp: e,
            endTimestamp: n
          };
        g().addBreadcrumb({
          category: "fetch",
          data: r,
          type: "http"
        }, i)
      }
  }

  function iu(t) {
    let e = t.from,
      n = t.to;
    const r = In(y.location.href);
    let i = In(e);
    const s = In(n);
    i.path || (i = r), r.protocol === s.protocol && r.host === s.host && (n = s.relative), r.protocol === i.protocol &&
      r.host === i.host && (e = i.relative), g().addBreadcrumb({
        category: "navigation",
        data: {
          from: e,
          to: n
        }
      })
  }

  function su(t) {
    return t && !!t.target
  }

  function Ds(t, {
    metadata: e,
    tunnel: n,
    dsn: r
  }) {
    const i = {
        event_id: t.event_id,
        sent_at: new Date().toISOString(),
        ...e && e.sdk && {
          sdk: {
            name: e.sdk.name,
            version: e.sdk.version
          }
        },
        ...!!n && !!r && {
          dsn: ce(r)
        }
      },
      s = au(t);
    return Wt(i, [s])
  }

  function au(t) {
    return [{
      type: "user_report"
    }, t]
  }
  class xs extends Lt {
    constructor(e) {
      const n = y.SENTRY_SDK_SOURCE || yo();
      e._metadata = e._metadata || {}, e._metadata.sdk = e._metadata.sdk || {
        name: "sentry.javascript.browser",
        packages: [{
          name: `${n}:@sentry/browser`,
          version: Zn
        }],
        version: Zn
      }, super(e), e.sendClientReports && y.document && y.document.addEventListener("visibilitychange", () => {
        y.document.visibilityState === "hidden" && this._flushOutcomes()
      })
    }
    eventFromException(e, n) {
      return Rs(this._options.stackParser, e, n, this._options.attachStacktrace)
    }
    eventFromMessage(e, n = "info", r) {
      return ks(this._options.stackParser, e, n, r, this._options.attachStacktrace)
    }
    sendEvent(e, n) {
      const r = this.getIntegrationById(Ns);
      r && r.addSentryBreadcrumb && r.addSentryBreadcrumb(e), super.sendEvent(e, n)
    }
    captureUserFeedback(e) {
      if (!this._isEnabled()) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
          "SDK not enabled, will not capture user feedback.");
        return
      }
      const n = Ds(e, {
        metadata: this.getSdkMetadata(),
        dsn: this.getDsn(),
        tunnel: this.getOptions().tunnel
      });
      this._sendEnvelope(n)
    }
    _prepareEvent(e, n, r) {
      return e.platform = e.platform || "javascript", super._prepareEvent(e, n, r)
    }
    _flushOutcomes() {
      const e = this._clearOutcomes();
      if (e.length === 0) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("No outcomes to send");
        return
      }
      if (!this._dsn) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("No dsn provided, will not send outcomes");
        return
      }(typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("Sending outcomes:", e);
      const n = Lo(e, this._options.tunnel && ce(this._dsn));
      this._sendEnvelope(n)
    }
  }
  let me;

  function ou() {
    if (me) return me;
    if (Pn(y.fetch)) return me = y.fetch.bind(y);
    const t = y.document;
    let e = y.fetch;
    if (t && typeof t.createElement == "function") try {
      const n = t.createElement("iframe");
      n.hidden = !0, t.head.appendChild(n);
      const r = n.contentWindow;
      r && r.fetch && (e = r.fetch), t.head.removeChild(n)
    } catch (n) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
        "Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", n)
    }
    return me = e.bind(y)
  }

  function cu() {
    me = void 0
  }

  function Is(t, e = ou()) {
    let n = 0,
      r = 0;

    function i(s) {
      const a = s.body.length;
      n += a, r++;
      const o = {
        body: s.body,
        method: "POST",
        referrerPolicy: "origin",
        headers: t.headers,
        keepalive: n <= 6e4 && r < 15,
        ...t.fetchOptions
      };
      try {
        return e(t.url, o).then(c => (n -= a, r--, {
          statusCode: c.status,
          headers: {
            "x-sentry-rate-limits": c.headers.get("X-Sentry-Rate-Limits"),
            "retry-after": c.headers.get("Retry-After")
          }
        }))
      } catch (c) {
        return cu(), n -= a, r--, an(c)
      }
    }
    return Sr(t, i)
  }
  const uu = 4;

  function Os(t) {
    function e(n) {
      return new tt((r, i) => {
        const s = new XMLHttpRequest;
        s.onerror = i, s.onreadystatechange = () => {
          s.readyState === uu && r({
            statusCode: s.status,
            headers: {
              "x-sentry-rate-limits": s.getResponseHeader("X-Sentry-Rate-Limits"),
              "retry-after": s.getResponseHeader("Retry-After")
            }
          })
        }, s.open("POST", t.url);
        for (const a in t.headers) Object.prototype.hasOwnProperty.call(t.headers, a) && s.setRequestHeader(a, t
          .headers[a]);
        s.send(n.body)
      })
    }
    return Sr(t, e)
  }
  const fe = "?",
    du = 10,
    lu = 20,
    fu = 30,
    _u = 40,
    hu = 50;

  function Ce(t, e, n, r) {
    const i = {
      filename: t,
      function: e,
      in_app: !0
    };
    return n !== void 0 && (i.lineno = n), r !== void 0 && (i.colno = r), i
  }
  const pu =
    /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,
    mu = /\((\S*)(?::(\d+))(?::(\d+))\)/,
    gu = t => {
      const e = pu.exec(t);
      if (e) {
        if (e[2] && e[2].indexOf("eval") === 0) {
          const s = mu.exec(e[2]);
          s && (e[2] = s[1], e[3] = s[2], e[4] = s[3])
        }
        const [r, i] = Ms(e[1] || fe, e[2]);
        return Ce(i, r, e[3] ? +e[3] : void 0, e[4] ? +e[4] : void 0)
      }
    },
    As = [fu, gu],
    yu =
    /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i,
    Eu = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i,
    Su = t => {
      const e = yu.exec(t);
      if (e) {
        if (e[3] && e[3].indexOf(" > eval") > -1) {
          const s = Eu.exec(e[3]);
          s && (e[1] = e[1] || "eval", e[3] = s[1], e[4] = s[2], e[5] = "")
        }
        let r = e[3],
          i = e[1] || fe;
        return [i, r] = Ms(i, r), Ce(r, i, e[4] ? +e[4] : void 0, e[5] ? +e[5] : void 0)
      }
    },
    Cs = [hu, Su],
    bu = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
    wu = t => {
      const e = bu.exec(t);
      return e ? Ce(e[2], e[1] || fe, +e[3], e[4] ? +e[4] : void 0) : void 0
    },
    Us = [_u, wu],
    Tu = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i,
    vu = t => {
      const e = Tu.exec(t);
      return e ? Ce(e[2], e[3] || fe, +e[1]) : void 0
    },
    Ru = [du, vu],
    ku = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\(.*\))? in (.*):\s*$/i,
    Nu = t => {
      const e = ku.exec(t);
      return e ? Ce(e[5], e[3] || e[4] || fe, +e[1], +e[2]) : void 0
    },
    Du = [lu, Nu],
    Bs = [As, Cs, Us],
    Ls = Vi(...Bs),
    Ms = (t, e) => {
      const n = t.indexOf("safari-extension") !== -1,
        r = t.indexOf("safari-web-extension") !== -1;
      return n || r ? [t.indexOf("@") !== -1 ? t.split("@")[0] : fe, n ? `safari-extension:${e}` :
        `safari-web-extension:${e}`
      ] : [t, e]
    };
  class mt {
    static __initStatic() {
      this.id = "GlobalHandlers"
    }
    __init() {
      this.name = mt.id
    }
    __init2() {
      this._installFunc = {
        onerror: xu,
        onunhandledrejection: Iu
      }
    }
    constructor(e) {
      mt.prototype.__init.call(this), mt.prototype.__init2.call(this), this._options = {
        onerror: !0,
        onunhandledrejection: !0,
        ...e
      }
    }
    setupOnce() {
      Error.stackTraceLimit = 50;
      const e = this._options;
      for (const n in e) {
        const r = this._installFunc[n];
        r && e[n] && (Cu(n), r(), this._installFunc[n] = void 0)
      }
    }
  }
  mt.__initStatic();

  function xu() {
    V("error", t => {
      const [e, n, r] = Ys();
      if (!e.getIntegration(mt)) return;
      const {
        msg: i,
        url: s,
        line: a,
        column: o,
        error: c
      } = t;
      if (Ts() || c && c.__sentry_own_request__) return;
      const u = c === void 0 && Ct(i) ? Au(i, s, a, o) : Gs(wr(n, c || i, void 0, r, !1), s, a, o);
      u.level = "error", Ps(e, c, u, "onerror")
    })
  }

  function Iu() {
    V("unhandledrejection", t => {
      const [e, n, r] = Ys();
      if (!e.getIntegration(mt)) return;
      let i = t;
      try {
        "reason" in t ? i = t.reason : "detail" in t && "reason" in t.detail && (i = t.detail.reason)
      } catch (a) {}
      if (Ts() || i && i.__sentry_own_request__) return !0;
      const s = Yi(i) ? Ou(i) : wr(n, i, void 0, r, !0);
      s.level = "error", Ps(e, i, s, "onunhandledrejection")
    })
  }

  function Ou(t) {
    return {
      exception: {
        values: [{
          type: "UnhandledRejection",
          value: `Non-Error promise rejection captured with value: ${String(t)}`
        }]
      }
    }
  }

  function Au(t, e, n, r) {
    const i =
      /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;
    let s = Pi(t) ? t.message : t,
      a = "Error";
    const o = s.match(i);
    return o && (a = o[1], s = o[2]), Gs({
      exception: {
        values: [{
          type: a,
          value: s
        }]
      }
    }, e, n, r)
  }

  function Gs(t, e, n, r) {
    const i = t.exception = t.exception || {},
      s = i.values = i.values || [],
      a = s[0] = s[0] || {},
      o = a.stacktrace = a.stacktrace || {},
      c = o.frames = o.frames || [],
      u = isNaN(parseInt(r, 10)) ? void 0 : r,
      d = isNaN(parseInt(n, 10)) ? void 0 : n,
      l = Ct(e) && e.length > 0 ? e : Ha();
    return c.length === 0 && c.push({
      colno: u,
      filename: l,
      function: "?",
      in_app: !0,
      lineno: d
    }), t
  }

  function Cu(t) {
    (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(`Global Handler attached: ${t}`)
  }

  function Ps(t, e, n, r) {
    ve(n, {
      handled: !1,
      type: r
    }), t.captureEvent(n, {
      originalException: e
    })
  }

  function Ys() {
    const t = g(),
      e = t.getClient(),
      n = e && e.getOptions() || {
        stackParser: () => [],
        attachStacktrace: !1
      };
    return [t, n.stackParser, n.attachStacktrace]
  }
  const Uu = ["EventTarget", "Window", "Node", "ApplicationCache", "AudioTrackList", "ChannelMergerNode",
    "CryptoOperation", "EventSource", "FileReader", "HTMLUnknownElement", "IDBDatabase", "IDBRequest",
    "IDBTransaction", "KeyOperation", "MediaController", "MessagePort", "ModalWindow", "Notification",
    "SVGElementInstance", "Screen", "TextTrack", "TextTrackCue", "TextTrackList", "WebSocket", "WebSocketWorker",
    "Worker", "XMLHttpRequest", "XMLHttpRequestEventTarget", "XMLHttpRequestUpload"
  ];
  class Ht {
    static __initStatic() {
      this.id = "TryCatch"
    }
    __init() {
      this.name = Ht.id
    }
    constructor(e) {
      Ht.prototype.__init.call(this), this._options = {
        XMLHttpRequest: !0,
        eventTarget: !0,
        requestAnimationFrame: !0,
        setInterval: !0,
        setTimeout: !0,
        ...e
      }
    }
    setupOnce() {
      this._options.setTimeout && X(y, "setTimeout", si), this._options.setInterval && X(y, "setInterval", si), this
        ._options.requestAnimationFrame && X(y, "requestAnimationFrame", Bu), this._options.XMLHttpRequest &&
        "XMLHttpRequest" in y && X(XMLHttpRequest.prototype, "send", Lu);
      const e = this._options.eventTarget;
      e && (Array.isArray(e) ? e : Uu).forEach(Mu)
    }
  }
  Ht.__initStatic();

  function si(t) {
    return function(...e) {
      const n = e[0];
      return e[0] = zt(n, {
        mechanism: {
          data: {
            function: Bt(t)
          },
          handled: !0,
          type: "instrument"
        }
      }), t.apply(this, e)
    }
  }

  function Bu(t) {
    return function(e) {
      return t.apply(this, [zt(e, {
        mechanism: {
          data: {
            function: "requestAnimationFrame",
            handler: Bt(t)
          },
          handled: !0,
          type: "instrument"
        }
      })])
    }
  }

  function Lu(t) {
    return function(...e) {
      const n = this;
      return ["onload", "onerror", "onprogress", "onreadystatechange"].forEach(i => {
        i in n && typeof n[i] == "function" && X(n, i, function(s) {
          const a = {
              mechanism: {
                data: {
                  function: i,
                  handler: Bt(s)
                },
                handled: !0,
                type: "instrument"
              }
            },
            o = mr(s);
          return o && (a.mechanism.data.handler = Bt(o)), zt(s, a)
        })
      }), t.apply(this, e)
    }
  }

  function Mu(t) {
    const e = y,
      n = e[t] && e[t].prototype;
    !n || !n.hasOwnProperty || !n.hasOwnProperty("addEventListener") || (X(n, "addEventListener", function(r) {
      return function(i, s, a) {
        try {
          typeof s.handleEvent == "function" && (s.handleEvent = zt(s.handleEvent, {
            mechanism: {
              data: {
                function: "handleEvent",
                handler: Bt(s),
                target: t
              },
              handled: !0,
              type: "instrument"
            }
          }))
        } catch (o) {}
        return r.apply(this, [i, zt(s, {
          mechanism: {
            data: {
              function: "addEventListener",
              handler: Bt(s),
              target: t
            },
            handled: !0,
            type: "instrument"
          }
        }), a])
      }
    }), X(n, "removeEventListener", function(r) {
      return function(i, s, a) {
        const o = s;
        try {
          const c = o && o.__sentry_wrapped__;
          c && r.call(this, i, c, a)
        } catch (c) {}
        return r.call(this, i, o, a)
      }
    }))
  }
  const Gu = "cause",
    Pu = 5;
  class It {
    static __initStatic() {
      this.id = "LinkedErrors"
    }
    __init() {
      this.name = It.id
    }
    constructor(e = {}) {
      It.prototype.__init.call(this), this._key = e.key || Gu, this._limit = e.limit || Pu
    }
    setupOnce() {
      const e = g().getClient();
      e && Ae((n, r) => {
        const i = g().getIntegration(It);
        return i ? Yu(e.getOptions().stackParser, i._key, i._limit, n, r) : n
      })
    }
  }
  It.__initStatic();

  function Yu(t, e, n, r, i) {
    if (!r.exception || !r.exception.values || !i || !Ut(i.originalException, Error)) return r;
    const s = Fs(t, n, i.originalException, e);
    return r.exception.values = [...s, ...r.exception.values], r
  }

  function Fs(t, e, n, r, i = []) {
    if (!Ut(n[r], Error) || i.length + 1 >= e) return i;
    const s = vs(t, n[r]);
    return Fs(t, e, n[r], r, [s, ...i])
  }
  class Ot {
    constructor() {
      Ot.prototype.__init.call(this)
    }
    static __initStatic() {
      this.id = "HttpContext"
    }
    __init() {
      this.name = Ot.id
    }
    setupOnce() {
      Ae(e => {
        if (g().getIntegration(Ot)) {
          if (!y.navigator && !y.location && !y.document) return e;
          const n = e.request && e.request.url || y.location && y.location.href,
            {
              referrer: r
            } = y.document || {},
            {
              userAgent: i
            } = y.navigator || {},
            s = {
              ...e.request && e.request.headers,
              ...r && {
                Referer: r
              },
              ...i && {
                "User-Agent": i
              }
            },
            a = {
              ...e.request,
              ...n && {
                url: n
              },
              headers: s
            };
          return {
            ...e,
            request: a
          }
        }
        return e
      })
    }
  }
  Ot.__initStatic();
  class At {
    constructor() {
      At.prototype.__init.call(this)
    }
    static __initStatic() {
      this.id = "Dedupe"
    }
    __init() {
      this.name = At.id
    }
    setupOnce(e, n) {
      const r = i => {
        if (i.type) return i;
        const s = n().getIntegration(At);
        if (s) {
          try {
            if (Fu(i, s._previousEvent)) return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
              "Event dropped due to being a duplicate of previously captured event."), null
          } catch (a) {
            return s._previousEvent = i
          }
          return s._previousEvent = i
        }
        return i
      };
      r.id = this.name, e(r)
    }
  }
  At.__initStatic();

  function Fu(t, e) {
    return e ? !!(zu(t, e) || $u(t, e)) : !1
  }

  function zu(t, e) {
    const n = t.message,
      r = e.message;
    return !(!n && !r || n && !r || !n && r || n !== r || !$s(t, e) || !zs(t, e))
  }

  function $u(t, e) {
    const n = ai(e),
      r = ai(t);
    return !(!n || !r || n.type !== r.type || n.value !== r.value || !$s(t, e) || !zs(t, e))
  }

  function zs(t, e) {
    let n = oi(t),
      r = oi(e);
    if (!n && !r) return !0;
    if (n && !r || !n && r || (n = n, r = r, r.length !== n.length)) return !1;
    for (let i = 0; i < r.length; i++) {
      const s = r[i],
        a = n[i];
      if (s.filename !== a.filename || s.lineno !== a.lineno || s.colno !== a.colno || s.function !== a.function)
        return !1
    }
    return !0
  }

  function $s(t, e) {
    let n = t.fingerprint,
      r = e.fingerprint;
    if (!n && !r) return !0;
    if (n && !r || !n && r) return !1;
    n = n, r = r;
    try {
      return n.join("") === r.join("")
    } catch (i) {
      return !1
    }
  }

  function ai(t) {
    return t.exception && t.exception.values && t.exception.values[0]
  }

  function oi(t) {
    const e = t.exception;
    if (e) try {
      return e.values[0].stacktrace.frames
    } catch (n) {
      return
    }
  }
  const Hs = [new xt, new Ft, new Ht, new $t, new mt, new It, new At, new Ot];

  function js(t = {}) {
    t.defaultIntegrations === void 0 && (t.defaultIntegrations = Hs), t.release === void 0 && (
        typeof __SENTRY_RELEASE__ == "string" && (t.release = __SENTRY_RELEASE__), y.SENTRY_RELEASE && y.SENTRY_RELEASE
        .id && (t.release = y.SENTRY_RELEASE.id)), t.autoSessionTracking === void 0 && (t.autoSessionTracking = !0), t
      .sendClientReports === void 0 && (t.sendClientReports = !0);
    const e = {
      ...t,
      stackParser: Qa(t.stackParser || Ls),
      integrations: wc(t),
      transport: t.transport || (Xi() ? Is : Os)
    };
    Oc(xs, e), t.autoSessionTracking && Ku()
  }

  function Hu(t = {}, e = g()) {
    if (!y.document) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(
        "Global document not defined in showReportDialog call");
      return
    }
    const {
      client: n,
      scope: r
    } = e.getStackTop(), i = t.dsn || n && n.getDsn();
    if (!i) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error("DSN not configured for showReportDialog call");
      return
    }
    r && (t.user = {
      ...r.getUser(),
      ...t.user
    }), t.eventId || (t.eventId = e.lastEventId());
    const s = y.document.createElement("script");
    s.async = !0, s.src = gc(i, t), t.onLoad && (s.onload = t.onLoad);
    const a = y.document.head || y.document.body;
    a ? a.appendChild(s) : (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(
      "Not injecting report dialog. No injection point found in HTML")
  }

  function ju() {
    return g().lastEventId()
  }

  function Wu() {}

  function qu(t) {
    t()
  }

  function Zu(t) {
    const e = g().getClient();
    return e ? e.flush(t) : ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
      "Cannot flush events. No client defined."), St(!1))
  }

  function Vu(t) {
    const e = g().getClient();
    return e ? e.close(t) : ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
      "Cannot flush events and disable SDK. No client defined."), St(!1))
  }

  function Xu(t) {
    return zt(t)()
  }

  function ci(t) {
    t.startSession({
      ignoreDuration: !0
    }), t.captureSession()
  }

  function Ku() {
    if (typeof y.document > "u") {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
        "Session tracking in non-browser environment with @sentry/browser is not supported.");
      return
    }
    const t = g();
    t.captureSession && (ci(t), V("history", ({
      from: e,
      to: n
    }) => {
      e === void 0 || e === n || ci(g())
    }))
  }

  function Ju(t) {
    const e = g().getClient();
    e && e.captureUserFeedback(t)
  }
  const Qu = Object.freeze(Object.defineProperty({
      __proto__: null,
      Breadcrumbs: $t,
      Dedupe: At,
      GlobalHandlers: mt,
      HttpContext: Ot,
      LinkedErrors: It,
      TryCatch: Ht
    }, Symbol.toStringTag, {
      value: "Module"
    })),
    G = nt,
    Tr = "sentryReplaySession",
    td = "replay_event",
    vr = "Unable to send Replay",
    ed = 3e5,
    nd = 9e5,
    rd = 36e5,
    id = 5e3,
    sd = 5500,
    ad = 6e4,
    od = 5e3,
    cd = 3,
    je = 15e4,
    We = 5e3;
  var W;
  (function(t) {
    t[t.Document = 0] = "Document", t[t.DocumentType = 1] = "DocumentType", t[t.Element = 2] = "Element", t[t.Text =
      3] = "Text", t[t.CDATA = 4] = "CDATA", t[t.Comment = 5] = "Comment"
  })(W || (W = {}));

  function ud(t) {
    return t.nodeType === t.ELEMENT_NODE
  }

  function Se(t) {
    const e = t == null ? void 0 : t.host;
    return !!(e && e.shadowRoot && e.shadowRoot === t)
  }

  function Ws({
    maskInputOptions: t,
    tagName: e,
    type: n
  }) {
    e.toLowerCase() === "option" && (e = "select");
    const r = typeof n == "string" ? n.toLowerCase() : void 0;
    return t[e.toLowerCase()] || r && t[r] || r === "password" || e === "input" && !n && t.text
  }

  function dd({
    tagName: t,
    type: e,
    maskInputOptions: n,
    maskInputSelector: r
  }) {
    return r || Ws({
      maskInputOptions: n,
      tagName: t,
      type: e
    })
  }

  function Re({
    input: t,
    maskInputSelector: e,
    unmaskInputSelector: n,
    maskInputOptions: r,
    tagName: i,
    type: s,
    value: a,
    maskInputFn: o
  }) {
    let c = a || "";
    return n && t.matches(n) || (t.hasAttribute("data-rr-is-password") && (s = "password"), (Ws({
      maskInputOptions: r,
      tagName: i,
      type: s
    }) || e && t.matches(e)) && (o ? c = o(c) : c = "*".repeat(c.length))), c
  }
  const ui = "__rrweb_original__";

  function ld(t) {
    const e = t.getContext("2d");
    if (!e) return !0;
    const n = 50;
    for (let r = 0; r < t.width; r += n)
      for (let i = 0; i < t.height; i += n) {
        const s = e.getImageData,
          a = ui in s ? s[ui] : s;
        if (new Uint32Array(a.call(e, r, i, Math.min(n, t.width - r), Math.min(n, t.height - i)).data.buffer).some(c =>
            c !== 0)) return !1
      }
    return !0
  }

  function qs(t) {
    const e = t.type;
    return t.hasAttribute("data-rr-is-password") ? "password" : e ? e.toLowerCase() : null
  }

  function Kn(t, e, n) {
    return typeof n == "string" && n.toLowerCase(), e === "INPUT" && (n === "radio" || n === "checkbox") ? t
      .getAttribute("value") || "" : t.value
  }
  let fd = 1;
  const _d = new RegExp("[^a-z0-9-_:]"),
    ke = -2;

  function Zs(t) {
    return t ? t.replace(/[\S]/g, "*") : ""
  }

  function hd() {
    return fd++
  }

  function pd(t) {
    if (t instanceof HTMLFormElement) return "form";
    const e = t.tagName.toLowerCase().trim();
    return _d.test(e) ? "div" : e
  }

  function Jn(t) {
    try {
      const e = t.rules || t.cssRules;
      return e ? Array.from(e).map(md).join("") : null
    } catch (e) {
      return null
    }
  }

  function md(t) {
    let e = t.cssText;
    if (gd(t)) try {
      e = Jn(t.styleSheet) || e
    } catch (n) {}
    return Vs(e)
  }

  function Vs(t) {
    if (t.indexOf(":") > -1) {
      const e = /(\[(?:[\w-]+)[^\\])(:(?:[\w-]+)\])/gm;
      return t.replace(e, "$1\\$2")
    }
    return t
  }

  function gd(t) {
    return "styleSheet" in t
  }

  function yd(t) {
    return t.cssRules ? Array.from(t.cssRules).map(e => e.cssText ? Vs(e.cssText) : "").join("") : ""
  }

  function Ed(t) {
    let e = "";
    return t.indexOf("//") > -1 ? e = t.split("/").slice(0, 3).join("/") : e = t.split("/")[0], e = e.split("?")[0], e
  }
  let Zt, di;
  const Sd = /url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm,
    bd = /^(?!www\.|(?:http|ftp)s?:\/\/|[A-Za-z]:\\|\/\/|#).*/,
    wd = /^(data:)([^,]*),(.*)/i;

  function tn(t, e) {
    return (t || "").replace(Sd, (n, r, i, s, a, o) => {
      const c = i || a || o,
        u = r || s || "";
      if (!c) return n;
      if (!bd.test(c)) return `url(${u}${c}${u})`;
      if (wd.test(c)) return `url(${u}${c}${u})`;
      if (c[0] === "/") return `url(${u}${Ed(e)+c}${u})`;
      const d = e.split("/"),
        l = c.split("/");
      d.pop();
      for (const h of l) h !== "." && (h === ".." ? d.pop() : d.push(h));
      return `url(${u}${d.join("/")}${u})`
    })
  }
  const Td = /^[^ \t\n\r\u000c]+/,
    vd = /^[, \t\n\r\u000c]+/;

  function Rd(t, e) {
    if (e.trim() === "") return e;
    let n = 0;

    function r(s) {
      let a, o = s.exec(e.substring(n));
      return o ? (a = o[0], n += a.length, a) : ""
    }
    let i = [];
    for (; r(vd), !(n >= e.length);) {
      let s = r(Td);
      if (s.slice(-1) === ",") s = Xt(t, s.substring(0, s.length - 1)), i.push(s);
      else {
        let a = "";
        s = Xt(t, s);
        let o = !1;
        for (;;) {
          let c = e.charAt(n);
          if (c === "") {
            i.push((s + a).trim());
            break
          } else if (o) c === ")" && (o = !1);
          else if (c === ",") {
            n += 1, i.push((s + a).trim());
            break
          } else c === "(" && (o = !0);
          a += c, n += 1
        }
      }
    }
    return i.join(", ")
  }

  function Xt(t, e) {
    if (!e || e.trim() === "") return e;
    const n = t.createElement("a");
    return n.href = e, n.href
  }

  function kd(t) {
    return !!(t.tagName === "svg" || t.ownerSVGElement)
  }

  function Qn() {
    const t = document.createElement("a");
    return t.href = "", t.href
  }

  function Xs(t, e, n, r, i, s, a, o) {
    if (!i) return i;
    const c = r.toLowerCase(),
      u = n.toLowerCase();
    return c === "src" || c === "href" || c === "xlink:href" && i[0] !== "#" || c === "background" && (u === "table" ||
        u === "td" || u === "th") ? Xt(t, i) : c === "srcset" ? Rd(t, i) : c === "style" ? tn(i, Qn()) : u ===
      "object" && c === "data" ? Xt(t, i) : s && Nd(e, c, u, a) ? o ? o(i) : Zs(i) : i
  }

  function Nd(t, e, n, r) {
    return r && t.matches(r) ? !1 : ["placeholder", "title", "aria-label"].indexOf(e) > -1 || n === "input" && e ===
      "value" && t.hasAttribute("type") && ["submit", "button"].indexOf(t.getAttribute("type").toLowerCase()) > -1
  }

  function Dd(t, e, n, r) {
    if (r && t.matches(r)) return !1;
    if (typeof e == "string") {
      if (t.classList.contains(e)) return !0
    } else
      for (let i = 0; i < t.classList.length; i++) {
        const s = t.classList[i];
        if (e.test(s)) return !0
      }
    return n ? t.matches(n) : !1
  }

  function dn(t, e, n, r, i) {
    if (!t) return !1;
    if (t.nodeType !== t.ELEMENT_NODE) return dn(t.parentNode, e, n, r, i);
    if (r && (t.matches(r) || t.closest(r))) return !1;
    if (i) return !0;
    if (typeof e == "string") {
      if (t.classList.contains(e)) return !0
    } else
      for (let s = 0; s < t.classList.length; s++) {
        const a = t.classList[s];
        if (e.test(a)) return !0
      }
    return n && t.matches(n) ? !0 : dn(t.parentNode, e, n, r, i)
  }

  function xd(t, e, n) {
    const r = t.contentWindow;
    if (!r) return;
    let i = !1,
      s;
    try {
      s = r.document.readyState
    } catch (o) {
      return
    }
    if (s !== "complete") {
      const o = setTimeout(() => {
        i || (e(), i = !0)
      }, n);
      t.addEventListener("load", () => {
        clearTimeout(o), i = !0, e()
      });
      return
    }
    const a = "about:blank";
    if (r.location.href !== a || t.src === a || t.src === "") {
      setTimeout(e, 0);
      return
    }
    t.addEventListener("load", e)
  }

  function Id(t, e) {
    var n;
    const {
      doc: r,
      blockClass: i,
      blockSelector: s,
      unblockSelector: a,
      maskTextClass: o,
      maskTextSelector: c,
      unmaskTextSelector: u,
      inlineStylesheet: d,
      maskInputSelector: l,
      unmaskInputSelector: h,
      maskAllText: _,
      maskInputOptions: p = {},
      maskTextFn: w,
      maskInputFn: D,
      dataURLOptions: S = {},
      inlineImages: O,
      recordCanvas: x,
      keepIframeSrcFn: v
    } = e;
    let b;
    if (r.__sn) {
      const N = r.__sn.id;
      b = N === 1 ? void 0 : N
    }
    switch (t.nodeType) {
      case t.DOCUMENT_NODE:
        return t.compatMode !== "CSS1Compat" ? {
          type: W.Document,
          childNodes: [],
          compatMode: t.compatMode,
          rootId: b
        } : {
          type: W.Document,
          childNodes: [],
          rootId: b
        };
      case t.DOCUMENT_TYPE_NODE:
        return {
          type: W.DocumentType, name: t.name, publicId: t.publicId, systemId: t.systemId, rootId: b
        };
      case t.ELEMENT_NODE:
        const N = Dd(t, i, s, a),
          T = pd(t);
        let E = {};
        for (const {
            name: m,
            value: A
          } of Array.from(t.attributes)) Cd(T, m) || (E[m] = Xs(r, t, T, m, A, _, u, w));
        if (T === "link" && d) {
          const m = Array.from(r.styleSheets).find($ => $.href === t.href);
          let A = null;
          m && (A = Jn(m)), A && (delete E.rel, delete E.href, E._cssText = tn(A, m.href))
        }
        if (T === "style" && t.sheet && !(t.innerText || t.textContent || "").trim().length) {
          const m = Jn(t.sheet);
          m && (E._cssText = tn(m, Qn()))
        }
        if (T === "input" || T === "textarea" || T === "select" || T === "option") {
          const m = t,
            A = qs(m),
            $ = Kn(m, T.toUpperCase(), A),
            Q = t.checked;
          A !== "submit" && A !== "button" && $ && (E.value = Re({
            input: m,
            type: A,
            tagName: T,
            value: $,
            maskInputSelector: l,
            unmaskInputSelector: h,
            maskInputOptions: p,
            maskInputFn: D
          })), Q && (E.checked = Q)
        }
        if (T === "option" && (t.selected && !p.select ? E.selected = !0 : delete E.selected), T === "canvas" && x) {
          if (t.__context === "2d") ld(t) || (E.rr_dataURL = t.toDataURL(S.type, S.quality));
          else if (!("__context" in t)) {
            const m = t.toDataURL(S.type, S.quality),
              A = document.createElement("canvas");
            A.width = t.width, A.height = t.height;
            const $ = A.toDataURL(S.type, S.quality);
            m !== $ && (E.rr_dataURL = m)
          }
        }
        if (T === "img" && O) {
          Zt || (Zt = r.createElement("canvas"), di = Zt.getContext("2d"));
          const m = t,
            A = m.crossOrigin;
          m.crossOrigin = "anonymous";
          const $ = () => {
            try {
              Zt.width = m.naturalWidth, Zt.height = m.naturalHeight, di.drawImage(m, 0, 0), E.rr_dataURL = Zt
                .toDataURL(S.type, S.quality)
            } catch (Q) {
              console.warn(`Cannot inline img src=${m.currentSrc}! Error: ${Q}`)
            }
            A ? E.crossOrigin = A : delete E.crossOrigin
          };
          m.complete && m.naturalWidth !== 0 ? $() : m.onload = $
        }
        if ((T === "audio" || T === "video") && (E.rr_mediaState = t.paused ? "paused" : "played", E
            .rr_mediaCurrentTime = t.currentTime), t.scrollLeft && (E.rr_scrollLeft = t.scrollLeft), t.scrollTop && (E
            .rr_scrollTop = t.scrollTop), N) {
          const {
            width: m,
            height: A
          } = t.getBoundingClientRect();
          E = {
            class: E.class,
            rr_width: `${m}px`,
            rr_height: `${A}px`
          }
        }
        return T === "iframe" && !v(E.src) && (t.contentDocument || (E.rr_src = E.src), delete E.src), {
          type: W.Element,
          tagName: T,
          attributes: E,
          childNodes: [],
          isSVG: kd(t) || void 0,
          needBlock: N,
          rootId: b
        };
      case t.TEXT_NODE:
        const U = t.parentNode && t.parentNode.tagName;
        let I = t.textContent;
        const z = U === "STYLE" ? !0 : void 0,
          K = U === "SCRIPT" ? !0 : void 0;
        if (z && I) {
          try {
            t.nextSibling || t.previousSibling || !((n = t.parentNode.sheet) === null || n === void 0) && n.cssRules &&
              (I = yd(t.parentNode.sheet))
          } catch (m) {
            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${m}`, t)
          }
          I = tn(I, Qn())
        }
        if (K && (I = "SCRIPT_PLACEHOLDER"), U === "TEXTAREA" && I) I = "";
        else if (U === "OPTION" && I) {
          const m = t.parentNode;
          I = Re({
            input: m,
            type: null,
            tagName: U,
            value: I,
            maskInputSelector: l,
            unmaskInputSelector: h,
            maskInputOptions: p,
            maskInputFn: D
          })
        } else !z && !K && dn(t, o, c, u, _) && I && (I = w ? w(I) : Zs(I));
        return {
          type: W.Text, textContent: I || "", isStyle: z, rootId: b
        };
      case t.CDATA_SECTION_NODE:
        return {
          type: W.CDATA, textContent: "", rootId: b
        };
      case t.COMMENT_NODE:
        return {
          type: W.Comment, textContent: t.textContent || "", rootId: b
        };
      default:
        return !1
    }
  }

  function B(t) {
    return t == null ? "" : t.toLowerCase()
  }

  function Od(t, e) {
    if (e.comment && t.type === W.Comment) return !0;
    if (t.type === W.Element) {
      if (e.script && (t.tagName === "script" || t.tagName === "link" && (t.attributes.rel === "preload" || t.attributes
            .rel === "modulepreload") && t.attributes.as === "script" || t.tagName === "link" && t.attributes.rel ===
          "prefetch" && typeof t.attributes.href == "string" && t.attributes.href.endsWith(".js"))) return !0;
      if (e.headFavicon && (t.tagName === "link" && t.attributes.rel === "shortcut icon" || t.tagName === "meta" && (B(t
            .attributes.name).match(/^msapplication-tile(image|color)$/) || B(t.attributes.name) ===
          "application-name" || B(t.attributes.rel) === "icon" || B(t.attributes.rel) === "apple-touch-icon" || B(t
            .attributes.rel) === "shortcut icon"))) return !0;
      if (t.tagName === "meta") {
        if (e.headMetaDescKeywords && B(t.attributes.name).match(/^description|keywords$/)) return !0;
        if (e.headMetaSocial && (B(t.attributes.property).match(/^(og|twitter|fb):/) || B(t.attributes.name).match(
            /^(og|twitter):/) || B(t.attributes.name) === "pinterest")) return !0;
        if (e.headMetaRobots && (B(t.attributes.name) === "robots" || B(t.attributes.name) === "googlebot" || B(t
            .attributes.name) === "bingbot")) return !0;
        if (e.headMetaHttpEquiv && t.attributes["http-equiv"] !== void 0) return !0;
        if (e.headMetaAuthorship && (B(t.attributes.name) === "author" || B(t.attributes.name) === "generator" || B(t
              .attributes.name) === "framework" || B(t.attributes.name) === "publisher" || B(t.attributes.name) ===
            "progid" || B(t.attributes.property).match(/^article:/) || B(t.attributes.property).match(/^product:/)))
          return !0;
        if (e.headMetaVerification && (B(t.attributes.name) === "google-site-verification" || B(t.attributes.name) ===
            "yandex-verification" || B(t.attributes.name) === "csrf-token" || B(t.attributes.name) ===
            "p:domain_verify" || B(t.attributes.name) === "verify-v1" || B(t.attributes.name) === "verification" || B(t
              .attributes.name) === "shopify-checkout-api-token")) return !0
      }
    }
    return !1
  }

  function be(t, e) {
    const {
      doc: n,
      map: r,
      blockClass: i,
      blockSelector: s,
      unblockSelector: a,
      maskTextClass: o,
      maskTextSelector: c,
      unmaskTextSelector: u,
      skipChild: d = !1,
      inlineStylesheet: l = !0,
      maskInputSelector: h,
      unmaskInputSelector: _,
      maskAllText: p,
      maskInputOptions: w = {},
      maskTextFn: D,
      maskInputFn: S,
      slimDOMOptions: O,
      dataURLOptions: x = {},
      inlineImages: v = !1,
      recordCanvas: b = !1,
      onSerialize: N,
      onIframeLoad: T,
      iframeLoadTimeout: E = 5e3,
      keepIframeSrcFn: U = () => !1
    } = e;
    let {
      preserveWhiteSpace: I = !0
    } = e;
    const z = Id(t, {
      doc: n,
      blockClass: i,
      blockSelector: s,
      unblockSelector: a,
      maskTextClass: o,
      maskTextSelector: c,
      unmaskTextSelector: u,
      inlineStylesheet: l,
      maskInputSelector: h,
      unmaskInputSelector: _,
      maskAllText: p,
      maskInputOptions: w,
      maskTextFn: D,
      maskInputFn: S,
      dataURLOptions: x,
      inlineImages: v,
      recordCanvas: b,
      keepIframeSrcFn: U
    });
    if (!z) return console.warn(t, "not serialized"), null;
    let K;
    "__sn" in t ? K = t.__sn.id : Od(z, O) || !I && z.type === W.Text && !z.isStyle && !z.textContent.replace(
      /^\s+|\s+$/gm, "").length ? K = ke : K = hd();
    const m = Object.assign(z, {
      id: K
    });
    if (t.__sn = m, K === ke) return null;
    r[K] = t, N && N(t);
    let A = !d;
    if (m.type === W.Element && (A = A && !m.needBlock, delete m.needBlock, t.shadowRoot && (m.isShadowHost = !0)), (m
        .type === W.Document || m.type === W.Element) && A) {
      O.headWhitespace && z.type === W.Element && z.tagName === "head" && (I = !1);
      const $ = {
        doc: n,
        map: r,
        blockClass: i,
        blockSelector: s,
        unblockSelector: a,
        maskTextClass: o,
        maskTextSelector: c,
        unmaskTextSelector: u,
        skipChild: d,
        inlineStylesheet: l,
        maskInputSelector: h,
        unmaskInputSelector: _,
        maskAllText: p,
        maskInputOptions: w,
        maskTextFn: D,
        maskInputFn: S,
        slimDOMOptions: O,
        dataURLOptions: x,
        inlineImages: v,
        recordCanvas: b,
        preserveWhiteSpace: I,
        onSerialize: N,
        onIframeLoad: T,
        iframeLoadTimeout: E,
        keepIframeSrcFn: U
      };
      for (const Q of Array.from(t.childNodes)) {
        const ft = be(Q, $);
        ft && m.childNodes.push(ft)
      }
      if (ud(t) && t.shadowRoot)
        for (const Q of Array.from(t.shadowRoot.childNodes)) {
          const ft = be(Q, $);
          ft && (ft.isShadow = !0, m.childNodes.push(ft))
        }
    }
    return t.parentNode && Se(t.parentNode) && (m.isShadow = !0), m.type === W.Element && m.tagName === "iframe" && xd(
      t, () => {
        const $ = t.contentDocument;
        if ($ && T) {
          const Q = be($, {
            doc: $,
            map: r,
            blockClass: i,
            blockSelector: s,
            unblockSelector: a,
            maskTextClass: o,
            maskTextSelector: c,
            unmaskTextSelector: u,
            skipChild: !1,
            inlineStylesheet: l,
            maskInputSelector: h,
            unmaskInputSelector: _,
            maskAllText: p,
            maskInputOptions: w,
            maskTextFn: D,
            maskInputFn: S,
            slimDOMOptions: O,
            dataURLOptions: x,
            inlineImages: v,
            recordCanvas: b,
            preserveWhiteSpace: I,
            onSerialize: N,
            onIframeLoad: T,
            iframeLoadTimeout: E,
            keepIframeSrcFn: U
          });
          Q && T(t, Q)
        }
      }, E), m
  }

  function Ad(t, e) {
    const {
      blockClass: n = "rr-block",
      blockSelector: r = null,
      unblockSelector: i = null,
      maskTextClass: s = "rr-mask",
      maskTextSelector: a = null,
      unmaskTextSelector: o = null,
      inlineStylesheet: c = !0,
      inlineImages: u = !1,
      recordCanvas: d = !1,
      maskInputSelector: l = null,
      unmaskInputSelector: h = null,
      maskAllText: _ = !1,
      maskAllInputs: p = !1,
      maskTextFn: w,
      maskInputFn: D,
      slimDOM: S = !1,
      dataURLOptions: O,
      preserveWhiteSpace: x,
      onSerialize: v,
      onIframeLoad: b,
      iframeLoadTimeout: N,
      keepIframeSrcFn: T = () => !1
    } = e || {}, E = {};
    return [be(t, {
      doc: t,
      map: E,
      blockClass: n,
      blockSelector: r,
      unblockSelector: i,
      maskTextClass: s,
      maskTextSelector: a,
      unmaskTextSelector: o,
      skipChild: !1,
      inlineStylesheet: c,
      maskInputSelector: l,
      unmaskInputSelector: h,
      maskAllText: _,
      maskInputOptions: p === !0 ? {
        color: !0,
        date: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0,
        textarea: !0,
        select: !0
      } : p === !1 ? {} : p,
      maskTextFn: w,
      maskInputFn: D,
      slimDOMOptions: S === !0 || S === "all" ? {
        script: !0,
        comment: !0,
        headFavicon: !0,
        headWhitespace: !0,
        headMetaDescKeywords: S === "all",
        headMetaSocial: !0,
        headMetaRobots: !0,
        headMetaHttpEquiv: !0,
        headMetaAuthorship: !0,
        headMetaVerification: !0
      } : S === !1 ? {} : S,
      dataURLOptions: O,
      inlineImages: u,
      recordCanvas: d,
      preserveWhiteSpace: x,
      onSerialize: v,
      onIframeLoad: b,
      iframeLoadTimeout: N,
      keepIframeSrcFn: T
    }), E]
  }

  function Cd(t, e, n) {
    return (t === "video" || t === "audio") && e === "autoplay"
  }
  var L;
  (function(t) {
    t[t.DomContentLoaded = 0] = "DomContentLoaded", t[t.Load = 1] = "Load", t[t.FullSnapshot = 2] = "FullSnapshot", t[
      t.IncrementalSnapshot = 3] = "IncrementalSnapshot", t[t.Meta = 4] = "Meta", t[t.Custom = 5] = "Custom", t[t
      .Plugin = 6] = "Plugin"
  })(L || (L = {}));
  var Z;
  (function(t) {
    t[t.Mutation = 0] = "Mutation", t[t.MouseMove = 1] = "MouseMove", t[t.MouseInteraction = 2] = "MouseInteraction",
      t[t.Scroll = 3] = "Scroll", t[t.ViewportResize = 4] = "ViewportResize", t[t.Input = 5] = "Input", t[t
        .TouchMove = 6] = "TouchMove", t[t.MediaInteraction = 7] = "MediaInteraction", t[t.StyleSheetRule = 8] =
      "StyleSheetRule", t[t.CanvasMutation = 9] = "CanvasMutation", t[t.Font = 10] = "Font", t[t.Log = 11] = "Log", t[
        t.Drag = 12] = "Drag", t[t.StyleDeclaration = 13] = "StyleDeclaration"
  })(Z || (Z = {}));
  var ln;
  (function(t) {
    t[t.MouseUp = 0] = "MouseUp", t[t.MouseDown = 1] = "MouseDown", t[t.Click = 2] = "Click", t[t.ContextMenu = 3] =
      "ContextMenu", t[t.DblClick = 4] = "DblClick", t[t.Focus = 5] = "Focus", t[t.Blur = 6] = "Blur", t[t
        .TouchStart = 7] = "TouchStart", t[t.TouchMove_Departed = 8] = "TouchMove_Departed", t[t.TouchEnd = 9] =
      "TouchEnd", t[t.TouchCancel = 10] = "TouchCancel"
  })(ln || (ln = {}));
  var ee;
  (function(t) {
    t[t["2D"] = 0] = "2D", t[t.WebGL = 1] = "WebGL", t[t.WebGL2 = 2] = "WebGL2"
  })(ee || (ee = {}));
  var li;
  (function(t) {
    t[t.Play = 0] = "Play", t[t.Pause = 1] = "Pause", t[t.Seeked = 2] = "Seeked", t[t.VolumeChange = 3] =
      "VolumeChange"
  })(li || (li = {}));
  var fi;
  (function(t) {
    t.Start = "start", t.Pause = "pause", t.Resume = "resume", t.Resize = "resize", t.Finish = "finish", t
      .FullsnapshotRebuilded = "fullsnapshot-rebuilded", t.LoadStylesheetStart = "load-stylesheet-start", t
      .LoadStylesheetEnd = "load-stylesheet-end", t.SkipStart = "skip-start", t.SkipEnd = "skip-end", t
      .MouseInteraction = "mouse-interaction", t.EventCast = "event-cast", t.CustomEvent = "custom-event", t.Flush =
      "flush", t.StateChange = "state-change", t.PlayBack = "play-back"
  })(fi || (fi = {}));

  function it(t, e, n = document) {
    const r = {
      capture: !0,
      passive: !0
    };
    return n.addEventListener(t, e, r), () => n.removeEventListener(t, e, r)
  }

  function Ud() {
    return {
      map: {},
      getId(t) {
        return !t || !t.__sn ? -1 : t.__sn.id
      },
      getNode(t) {
        return this.map[t] || null
      },
      removeNodeFromMap(t) {
        const e = t.__sn && t.__sn.id;
        delete this.map[e], t.childNodes && t.childNodes.forEach(n => this.removeNodeFromMap(n))
      },
      has(t) {
        return this.map.hasOwnProperty(t)
      },
      reset() {
        this.map = {}
      }
    }
  }
  const Vt = `Please stop import mirror directly. Instead of that,\r
now you can use replayer.getMirror() to access the mirror instance of a replayer,\r
or you can use record.mirror to access the mirror instance during recording.`;
  let _i = {
    map: {},
    getId() {
      return console.error(Vt), -1
    },
    getNode() {
      return console.error(Vt), null
    },
    removeNodeFromMap() {
      console.error(Vt)
    },
    has() {
      return console.error(Vt), !1
    },
    reset() {
      console.error(Vt)
    }
  };
  typeof window < "u" && window.Proxy && window.Reflect && (_i = new Proxy(_i, {
    get(t, e, n) {
      return e === "map" && console.error(Vt), Reflect.get(t, e, n)
    }
  }));

  function Ne(t, e, n = {}) {
    let r = null,
      i = 0;
    return function(s) {
      let a = Date.now();
      !i && n.leading === !1 && (i = a);
      let o = e - (a - i),
        c = this,
        u = arguments;
      o <= 0 || o > e ? (r && (clearTimeout(r), r = null), i = a, t.apply(c, u)) : !r && n.trailing !== !1 && (r =
        setTimeout(() => {
          i = n.leading === !1 ? 0 : Date.now(), r = null, t.apply(c, u)
        }, o))
    }
  }

  function wn(t, e, n, r, i = window) {
    const s = i.Object.getOwnPropertyDescriptor(t, e);
    return i.Object.defineProperty(t, e, r ? n : {
      set(a) {
        setTimeout(() => {
          n.set.call(this, a)
        }, 0), s && s.set && s.set.call(this, a)
      }
    }), () => wn(t, e, s || {}, !0)
  }

  function ne(t, e, n) {
    try {
      if (!(e in t)) return () => {};
      const r = t[e],
        i = n(r);
      return typeof i == "function" && (i.prototype = i.prototype || {}, Object.defineProperties(i, {
        __rrweb_original__: {
          enumerable: !1,
          value: r
        }
      })), t[e] = i, () => {
        t[e] = r
      }
    } catch (r) {
      return () => {}
    }
  }

  function Ks() {
    return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body &&
      document.body.clientHeight
  }

  function Js() {
    return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body &&
      document.body.clientWidth
  }

  function et(t, e, n, r) {
    if (!t) return !1;
    if (t.nodeType === t.ELEMENT_NODE) {
      let i = !1;
      const s = r && t.matches(r);
      return typeof e == "string" ? t.closest !== void 0 ? i = !s && t.closest("." + e) !== null : i = !s && t.classList
        .contains(e) : !s && t.classList.forEach(a => {
          e.test(a) && (i = !0)
        }), !i && n && (i = t.matches(n)), !s && i || et(t.parentNode, e, n, r)
    }
    return t.nodeType === t.TEXT_NODE, et(t.parentNode, e, n, r)
  }

  function Un(t) {
    return "__sn" in t ? t.__sn.id === ke : !1
  }

  function Qs(t, e) {
    if (Se(t)) return !1;
    const n = e.getId(t);
    return e.has(n) ? t.parentNode && t.parentNode.nodeType === t.DOCUMENT_NODE ? !1 : t.parentNode ? Qs(t.parentNode,
      e) : !0 : !0
  }

  function ta(t) {
    return !!t.changedTouches
  }

  function Bd(t = window) {
    "NodeList" in t && !t.NodeList.prototype.forEach && (t.NodeList.prototype.forEach = Array.prototype.forEach),
      "DOMTokenList" in t && !t.DOMTokenList.prototype.forEach && (t.DOMTokenList.prototype.forEach = Array.prototype
        .forEach), Node.prototype.contains || (Node.prototype.contains = function(n) {
        if (!(0 in arguments)) throw new TypeError("1 argument is required");
        do
          if (this === n) return !0; while (n = n && n.parentNode);
        return !1
      })
  }

  function ea(t) {
    return "__sn" in t ? t.__sn.type === W.Element && t.__sn.tagName === "iframe" : !1
  }

  function na(t) {
    return !!(t != null && t.shadowRoot)
  }

  function hi(t) {
    return "__ln" in t
  }
  class Ld {
    constructor() {
      this.length = 0, this.head = null
    }
    get(e) {
      if (e >= this.length) throw new Error("Position outside of list range");
      let n = this.head;
      for (let r = 0; r < e; r++) n = (n == null ? void 0 : n.next) || null;
      return n
    }
    addNode(e) {
      const n = {
        value: e,
        previous: null,
        next: null
      };
      if (e.__ln = n, e.previousSibling && hi(e.previousSibling)) {
        const r = e.previousSibling.__ln.next;
        n.next = r, n.previous = e.previousSibling.__ln, e.previousSibling.__ln.next = n, r && (r.previous = n)
      } else if (e.nextSibling && hi(e.nextSibling) && e.nextSibling.__ln.previous) {
        const r = e.nextSibling.__ln.previous;
        n.previous = r, n.next = e.nextSibling.__ln, e.nextSibling.__ln.previous = n, r && (r.next = n)
      } else this.head && (this.head.previous = n), n.next = this.head, this.head = n;
      this.length++
    }
    removeNode(e) {
      const n = e.__ln;
      this.head && (n.previous ? (n.previous.next = n.next, n.next && (n.next.previous = n.previous)) : (this.head = n
        .next, this.head && (this.head.previous = null)), e.__ln && delete e.__ln, this.length--)
    }
  }
  const pi = (t, e) => `${t}@${e}`;

  function mi(t) {
    return "__sn" in t
  }
  class Md {
    constructor() {
      this.frozen = !1, this.locked = !1, this.texts = [], this.attributes = [], this.removes = [], this
        .mapRemoves = [], this.movedMap = {}, this.addedSet = new Set, this.movedSet = new Set, this.droppedSet =
        new Set, this.processMutations = e => {
          e.forEach(this.processMutation), this.emit()
        }, this.emit = () => {
          if (this.frozen || this.locked) return;
          const e = [],
            n = new Ld,
            r = o => {
              let c = o,
                u = ke;
              for (; u === ke;) c = c && c.nextSibling, u = c && this.mirror.getId(c);
              return u
            },
            i = o => {
              var c, u, d, l, h;
              const _ = o.getRootNode ? (c = o.getRootNode()) === null || c === void 0 ? void 0 : c.host : null;
              let p = _;
              for (; !((d = (u = p == null ? void 0 : p.getRootNode) === null || u === void 0 ? void 0 : u.call(
                  p)) === null || d === void 0) && d.host;) p = ((h = (l = p == null ? void 0 : p.getRootNode) ===
                null || l === void 0 ? void 0 : l.call(p)) === null || h === void 0 ? void 0 : h.host) || null;
              const w = !this.doc.contains(o) && (!p || !this.doc.contains(p));
              if (!o.parentNode || w) return;
              const D = Se(o.parentNode) ? this.mirror.getId(_) : this.mirror.getId(o.parentNode),
                S = r(o);
              if (D === -1 || S === -1) return n.addNode(o);
              let O = be(o, {
                doc: this.doc,
                map: this.mirror.map,
                blockClass: this.blockClass,
                blockSelector: this.blockSelector,
                unblockSelector: this.unblockSelector,
                maskTextClass: this.maskTextClass,
                maskTextSelector: this.maskTextSelector,
                unmaskTextSelector: this.unmaskTextSelector,
                maskInputSelector: this.maskInputSelector,
                unmaskInputSelector: this.unmaskInputSelector,
                skipChild: !0,
                inlineStylesheet: this.inlineStylesheet,
                maskAllText: this.maskAllText,
                maskInputOptions: this.maskInputOptions,
                maskTextFn: this.maskTextFn,
                maskInputFn: this.maskInputFn,
                slimDOMOptions: this.slimDOMOptions,
                recordCanvas: this.recordCanvas,
                inlineImages: this.inlineImages,
                onSerialize: x => {
                  ea(x) && this.iframeManager.addIframe(x), na(o) && this.shadowDomManager.addShadowRoot(o
                    .shadowRoot, document)
                },
                onIframeLoad: (x, v) => {
                  this.iframeManager.attachIframe(x, v), this.shadowDomManager.observeAttachShadow(x)
                }
              });
              O && e.push({
                parentId: D,
                nextId: S,
                node: O
              })
            };
          for (; this.mapRemoves.length;) this.mirror.removeNodeFromMap(this.mapRemoves.shift());
          for (const o of this.movedSet) er(this.removes, o, this.mirror) && !this.movedSet.has(o.parentNode) || i(o);
          for (const o of this.addedSet) !nr(this.droppedSet, o) && !er(this.removes, o, this.mirror) || nr(this
            .movedSet, o) ? i(o) : this.droppedSet.add(o);
          let s = null;
          for (; n.length;) {
            let o = null;
            if (s) {
              const c = this.mirror.getId(s.value.parentNode),
                u = r(s.value);
              c !== -1 && u !== -1 && (o = s)
            }
            if (!o)
              for (let c = n.length - 1; c >= 0; c--) {
                const u = n.get(c);
                if (u) {
                  const d = this.mirror.getId(u.value.parentNode),
                    l = r(u.value);
                  if (d !== -1 && l !== -1) {
                    o = u;
                    break
                  }
                }
              }
            if (!o) {
              for (; n.head;) n.removeNode(n.head.value);
              break
            }
            s = o.previous, n.removeNode(o.value), i(o.value)
          }
          const a = {
            texts: this.texts.map(o => ({
              id: this.mirror.getId(o.node),
              value: o.value
            })).filter(o => this.mirror.has(o.id)),
            attributes: this.attributes.map(o => ({
              id: this.mirror.getId(o.node),
              attributes: o.attributes
            })).filter(o => this.mirror.has(o.id)),
            removes: this.removes,
            adds: e
          };
          !a.texts.length && !a.attributes.length && !a.removes.length && !a.adds.length || (this.texts = [], this
            .attributes = [], this.removes = [], this.addedSet = new Set, this.movedSet = new Set, this.droppedSet =
            new Set, this.movedMap = {}, this.mutationCb(a))
        }, this.processMutation = e => {
          if (!Un(e.target)) switch (e.type) {
            case "characterData": {
              const n = e.target.textContent;
              !et(e.target, this.blockClass, this.blockSelector, this.unblockSelector) && n !== e.oldValue && this
                .texts.push({
                  value: dn(e.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextSelector, this
                    .maskAllText) && n ? this.maskTextFn ? this.maskTextFn(n) : n.replace(/[\S]/g, "*") : n,
                  node: e.target
                });
              break
            }
            case "attributes": {
              const n = e.target;
              let r = n.getAttribute(e.attributeName);
              if (e.attributeName === "value" && (r = Re({
                  input: n,
                  maskInputSelector: this.maskInputSelector,
                  unmaskInputSelector: this.unmaskInputSelector,
                  maskInputOptions: this.maskInputOptions,
                  tagName: n.tagName,
                  type: n.getAttribute("type"),
                  value: r,
                  maskInputFn: this.maskInputFn
                })), et(e.target, this.blockClass, this.blockSelector, this.unblockSelector) || r === e.oldValue)
                return;
              let i = this.attributes.find(s => s.node === e.target);
              if (i || (i = {
                  node: e.target,
                  attributes: {}
                }, this.attributes.push(i)), e.attributeName === "type" && n.tagName === "INPUT" && (e.oldValue ||
                  "").toLowerCase() === "password" && n.setAttribute("data-rr-is-password", "true"), e
                .attributeName === "style") {
                const s = this.doc.createElement("span");
                e.oldValue && s.setAttribute("style", e.oldValue), (i.attributes.style === void 0 || i.attributes
                  .style === null) && (i.attributes.style = {});
                try {
                  const a = i.attributes.style;
                  for (const o of Array.from(n.style)) {
                    const c = n.style.getPropertyValue(o),
                      u = n.style.getPropertyPriority(o);
                    (c !== s.style.getPropertyValue(o) || u !== s.style.getPropertyPriority(o)) && (u === "" ? a[
                      o] = c : a[o] = [c, u])
                  }
                  for (const o of Array.from(s.style)) n.style.getPropertyValue(o) === "" && (a[o] = !1)
                } catch (a) {
                  console.warn("[rrweb] Error when parsing update to style attribute:", a)
                }
              } else {
                const s = e.target;
                i.attributes[e.attributeName] = Xs(this.doc, s, s.tagName, e.attributeName, r, this.maskAllText,
                  this.unmaskTextSelector, this.maskTextFn)
              }
              break
            }
            case "childList": {
              e.addedNodes.forEach(n => this.genAdds(n, e.target)), e.removedNodes.forEach(n => {
                const r = this.mirror.getId(n),
                  i = Se(e.target) ? this.mirror.getId(e.target.host) : this.mirror.getId(e.target);
                et(e.target, this.blockClass, this.blockSelector, this.unblockSelector) || Un(n) || (this
                  .addedSet.has(n) ? (tr(this.addedSet, n), this.droppedSet.add(n)) : this.addedSet.has(e
                    .target) && r === -1 || Qs(e.target, this.mirror) || (this.movedSet.has(n) && this
                    .movedMap[pi(r, i)] ? tr(this.movedSet, n) : this.removes.push({
                      parentId: i,
                      id: r,
                      isShadow: Se(e.target) ? !0 : void 0
                    })), this.mapRemoves.push(n))
              });
              break
            }
          }
        }, this.genAdds = (e, n) => {
          if (!(n && et(n, this.blockClass, this.blockSelector, this.unblockSelector))) {
            if (mi(e)) {
              if (Un(e)) return;
              this.movedSet.add(e);
              let r = null;
              n && mi(n) && (r = n.__sn.id), r && (this.movedMap[pi(e.__sn.id, r)] = !0)
            } else this.addedSet.add(e), this.droppedSet.delete(e);
            et(e, this.blockClass, this.blockSelector, this.unblockSelector) || e.childNodes.forEach(r => this
              .genAdds(r))
          }
        }
    }
    init(e) {
      ["mutationCb", "blockClass", "blockSelector", "unblockSelector", "maskTextClass", "maskTextSelector",
        "unmaskTextSelector", "maskInputSelector", "unmaskInputSelector", "inlineStylesheet", "maskAllText",
        "maskInputOptions", "maskTextFn", "maskInputFn", "recordCanvas", "inlineImages", "slimDOMOptions", "doc",
        "mirror", "iframeManager", "shadowDomManager", "canvasManager"
      ].forEach(n => {
        this[n] = e[n]
      })
    }
    freeze() {
      this.frozen = !0, this.canvasManager.freeze()
    }
    unfreeze() {
      this.frozen = !1, this.canvasManager.unfreeze(), this.emit()
    }
    isFrozen() {
      return this.frozen
    }
    lock() {
      this.locked = !0, this.canvasManager.lock()
    }
    unlock() {
      this.locked = !1, this.canvasManager.unlock(), this.emit()
    }
    reset() {
      this.shadowDomManager.reset(), this.canvasManager.reset()
    }
  }

  function tr(t, e) {
    t.delete(e), e.childNodes.forEach(n => tr(t, n))
  }

  function er(t, e, n) {
    const {
      parentNode: r
    } = e;
    if (!r) return !1;
    const i = n.getId(r);
    return t.some(s => s.id === i) ? !0 : er(t, r, n)
  }

  function nr(t, e) {
    const {
      parentNode: n
    } = e;
    return n ? t.has(n) ? !0 : nr(t, n) : !1
  }
  const k = t => (...n) => {
      try {
        return t(...n)
      } catch (r) {
        try {
          r.__rrweb__ = !0
        } catch (i) {}
        throw r
      }
    },
    Mt = [];

  function Ue(t) {
    try {
      if ("composedPath" in t) {
        const e = t.composedPath();
        if (e.length) return e[0]
      } else if ("path" in t && t.path.length) return t.path[0]
    } catch (e) {}
    return t && t.target
  }

  function ra(t, e) {
    var n, r;
    const i = new Md;
    Mt.push(i), i.init(t);
    let s = window.MutationObserver || window.__rrMutationObserver;
    const a = (r = (n = window == null ? void 0 : window.Zone) === null || n === void 0 ? void 0 : n.__symbol__) ===
      null || r === void 0 ? void 0 : r.call(n, "MutationObserver");
    a && window[a] && (s = window[a]);
    const o = new s(k(c => {
      t.onMutation && t.onMutation(c) === !1 || i.processMutations(c)
    }));
    return o.observe(e, {
      attributes: !0,
      attributeOldValue: !0,
      characterData: !0,
      characterDataOldValue: !0,
      childList: !0,
      subtree: !0
    }), o
  }

  function Gd({
    mousemoveCb: t,
    sampling: e,
    doc: n,
    mirror: r
  }) {
    if (e.mousemove === !1) return () => {};
    const i = typeof e.mousemove == "number" ? e.mousemove : 50,
      s = typeof e.mousemoveCallback == "number" ? e.mousemoveCallback : 500;
    let a = [],
      o;
    const c = Ne(l => {
        const h = Date.now() - o;
        k(t)(a.map(_ => (_.timeOffset -= h, _)), l), a = [], o = null
      }, s),
      u = Ne(l => {
        const h = Ue(l),
          {
            clientX: _,
            clientY: p
          } = ta(l) ? l.changedTouches[0] : l;
        o || (o = Date.now()), a.push({
          x: _,
          y: p,
          id: r.getId(h),
          timeOffset: Date.now() - o
        }), c(typeof DragEvent < "u" && l instanceof DragEvent ? Z.Drag : l instanceof MouseEvent ? Z.MouseMove : Z
          .TouchMove)
      }, i, {
        trailing: !1
      }),
      d = [it("mousemove", k(u), n), it("touchmove", k(u), n), it("drag", k(u), n)];
    return k(() => {
      d.forEach(l => l())
    })
  }

  function Pd({
    mouseInteractionCb: t,
    doc: e,
    mirror: n,
    blockClass: r,
    blockSelector: i,
    unblockSelector: s,
    sampling: a
  }) {
    if (a.mouseInteraction === !1) return () => {};
    const o = a.mouseInteraction === !0 || a.mouseInteraction === void 0 ? {} : a.mouseInteraction,
      c = [],
      u = d => l => {
        const h = Ue(l);
        if (et(h, r, i, s)) return;
        const _ = ta(l) ? l.changedTouches[0] : l;
        if (!_) return;
        const p = n.getId(h),
          {
            clientX: w,
            clientY: D
          } = _;
        k(t)({
          type: ln[d],
          id: p,
          x: w,
          y: D
        })
      };
    return Object.keys(ln).filter(d => Number.isNaN(Number(d)) && !d.endsWith("_Departed") && o[d] !== !1).forEach(
      d => {
        const l = d.toLowerCase(),
          h = k(u(d));
        c.push(it(l, h, e))
      }), k(() => {
      c.forEach(d => d())
    })
  }

  function ia({
    scrollCb: t,
    doc: e,
    mirror: n,
    blockClass: r,
    blockSelector: i,
    unblockSelector: s,
    sampling: a
  }) {
    const o = Ne(c => {
      const u = Ue(c);
      if (!u || et(u, r, i, s)) return;
      const d = n.getId(u);
      if (u === e) {
        const l = e.scrollingElement || e.documentElement;
        k(t)({
          id: d,
          x: l.scrollLeft,
          y: l.scrollTop
        })
      } else k(t)({
        id: d,
        x: u.scrollLeft,
        y: u.scrollTop
      })
    }, a.scroll || 100);
    return it("scroll", k(o), e)
  }

  function Yd({
    viewportResizeCb: t
  }) {
    let e = -1,
      n = -1;
    const r = Ne(() => {
      const i = Ks(),
        s = Js();
      (e !== i || n !== s) && (k(t)({
        width: Number(s),
        height: Number(i)
      }), e = i, n = s)
    }, 200);
    return it("resize", k(r), window)
  }

  function gi(t, e) {
    const n = Object.assign({}, t);
    return e || delete n.userTriggered, n
  }
  const Fd = ["INPUT", "TEXTAREA", "SELECT"],
    yi = new WeakMap;

  function zd({
    inputCb: t,
    doc: e,
    mirror: n,
    blockClass: r,
    blockSelector: i,
    unblockSelector: s,
    ignoreClass: a,
    ignoreSelector: o,
    maskInputSelector: c,
    unmaskInputSelector: u,
    maskInputOptions: d,
    maskInputFn: l,
    sampling: h,
    userTriggeredOnInput: _
  }) {
    function p(v) {
      let b = Ue(v);
      const N = b && b.tagName,
        T = v.isTrusted;
      if (N === "OPTION" && (b = b.parentElement), !b || !N || Fd.indexOf(N) < 0 || et(b, r, i, s)) return;
      const E = b,
        U = qs(E);
      if (E.classList.contains(a) || o && E.matches(o)) return;
      let I = Kn(E, N, U),
        z = !1;
      (U === "radio" || U === "checkbox") && (z = b.checked), dd({
        maskInputOptions: d,
        maskInputSelector: c,
        tagName: N,
        type: U
      }) && (I = Re({
        input: E,
        maskInputOptions: d,
        maskInputSelector: c,
        unmaskInputSelector: u,
        tagName: N,
        type: U,
        value: I,
        maskInputFn: l
      })), w(b, k(gi)({
        text: I,
        isChecked: z,
        userTriggered: T
      }, _));
      const K = b.name;
      U === "radio" && K && z && e.querySelectorAll(`input[type="radio"][name="${K}"]`).forEach(m => {
        if (m !== b) {
          const A = Re({
            input: m,
            maskInputOptions: d,
            maskInputSelector: c,
            unmaskInputSelector: u,
            tagName: N,
            type: U,
            value: Kn(m, N, U),
            maskInputFn: l
          });
          w(m, k(gi)({
            text: A,
            isChecked: !z,
            userTriggered: !1
          }, _))
        }
      })
    }

    function w(v, b) {
      const N = yi.get(v);
      if (!N || N.text !== b.text || N.isChecked !== b.isChecked) {
        yi.set(v, b);
        const T = n.getId(v);
        t(Object.assign(Object.assign({}, b), {
          id: T
        }))
      }
    }
    const S = (h.input === "last" ? ["change"] : ["input", "change"]).map(v => it(v, k(p), e)),
      O = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, "value"),
      x = [
        [HTMLInputElement.prototype, "value"],
        [HTMLInputElement.prototype, "checked"],
        [HTMLSelectElement.prototype, "value"],
        [HTMLTextAreaElement.prototype, "value"],
        [HTMLSelectElement.prototype, "selectedIndex"],
        [HTMLOptionElement.prototype, "selected"]
      ];
    return O && O.set && S.push(...x.map(v => wn(v[0], v[1], {
      set() {
        k(p)({
          target: this
        })
      }
    }))), k(() => {
      S.forEach(v => v())
    })
  }

  function fn(t) {
    const e = [];

    function n(r, i) {
      if (qe("CSSGroupingRule") && r.parentRule instanceof CSSGroupingRule || qe("CSSMediaRule") && r
        .parentRule instanceof CSSMediaRule || qe("CSSSupportsRule") && r.parentRule instanceof CSSSupportsRule || qe(
          "CSSConditionRule") && r.parentRule instanceof CSSConditionRule) {
        const a = Array.from(r.parentRule.cssRules).indexOf(r);
        i.unshift(a)
      } else {
        const a = Array.from(r.parentStyleSheet.cssRules).indexOf(r);
        i.unshift(a)
      }
      return i
    }
    return n(t, e)
  }

  function $d({
    styleSheetRuleCb: t,
    mirror: e
  }, {
    win: n
  }) {
    if (!n.CSSStyleSheet || !n.CSSStyleSheet.prototype) return () => {};
    const r = n.CSSStyleSheet.prototype.insertRule;
    n.CSSStyleSheet.prototype.insertRule = new Proxy(r, {
      apply: k((o, c, u) => {
        const [d, l] = u, h = e.getId(c.ownerNode);
        return h !== -1 && t({
          id: h,
          adds: [{
            rule: d,
            index: l
          }]
        }), o.apply(c, u)
      })
    });
    const i = n.CSSStyleSheet.prototype.deleteRule;
    n.CSSStyleSheet.prototype.deleteRule = new Proxy(i, {
      apply: k((o, c, u) => {
        const [d] = u, l = e.getId(c.ownerNode);
        return l !== -1 && t({
          id: l,
          removes: [{
            index: d
          }]
        }), o.apply(c, u)
      })
    });
    const s = {};
    Ze("CSSGroupingRule") ? s.CSSGroupingRule = n.CSSGroupingRule : (Ze("CSSMediaRule") && (s.CSSMediaRule = n
        .CSSMediaRule), Ze("CSSConditionRule") && (s.CSSConditionRule = n.CSSConditionRule), Ze("CSSSupportsRule") &&
      (s.CSSSupportsRule = n.CSSSupportsRule));
    const a = {};
    return Object.entries(s).forEach(([o, c]) => {
      a[o] = {
        insertRule: c.prototype.insertRule,
        deleteRule: c.prototype.deleteRule
      }, c.prototype.insertRule = new Proxy(a[o].insertRule, {
        apply: k((u, d, l) => {
          const [h, _] = l, p = e.getId(d.parentStyleSheet.ownerNode);
          return p !== -1 && t({
            id: p,
            adds: [{
              rule: h,
              index: [...fn(d), _ || 0]
            }]
          }), u.apply(d, l)
        })
      }), c.prototype.deleteRule = new Proxy(a[o].deleteRule, {
        apply: k((u, d, l) => {
          const [h] = l, _ = e.getId(d.parentStyleSheet.ownerNode);
          return _ !== -1 && t({
            id: _,
            removes: [{
              index: [...fn(d), h]
            }]
          }), u.apply(d, l)
        })
      })
    }), k(() => {
      n.CSSStyleSheet.prototype.insertRule = r, n.CSSStyleSheet.prototype.deleteRule = i, Object.entries(s).forEach(
        ([o, c]) => {
          c.prototype.insertRule = a[o].insertRule, c.prototype.deleteRule = a[o].deleteRule
        })
    })
  }

  function Hd({
    styleDeclarationCb: t,
    mirror: e
  }, {
    win: n
  }) {
    const r = n.CSSStyleDeclaration.prototype.setProperty;
    n.CSSStyleDeclaration.prototype.setProperty = new Proxy(r, {
      apply: k((s, a, o) => {
        var c, u;
        const [d, l, h] = o, _ = e.getId((u = (c = a.parentRule) === null || c === void 0 ? void 0 : c
          .parentStyleSheet) === null || u === void 0 ? void 0 : u.ownerNode);
        return _ !== -1 && t({
          id: _,
          set: {
            property: d,
            value: l,
            priority: h
          },
          index: fn(a.parentRule)
        }), s.apply(a, o)
      })
    });
    const i = n.CSSStyleDeclaration.prototype.removeProperty;
    return n.CSSStyleDeclaration.prototype.removeProperty = new Proxy(i, {
      apply: k((s, a, o) => {
        var c, u;
        const [d] = o, l = e.getId((u = (c = a.parentRule) === null || c === void 0 ? void 0 : c
          .parentStyleSheet) === null || u === void 0 ? void 0 : u.ownerNode);
        return l !== -1 && t({
          id: l,
          remove: {
            property: d
          },
          index: fn(a.parentRule)
        }), s.apply(a, o)
      })
    }), k(() => {
      n.CSSStyleDeclaration.prototype.setProperty = r, n.CSSStyleDeclaration.prototype.removeProperty = i
    })
  }

  function jd({
    mediaInteractionCb: t,
    blockClass: e,
    blockSelector: n,
    unblockSelector: r,
    mirror: i,
    sampling: s
  }) {
    const a = c => Ne(k(u => {
        const d = Ue(u);
        if (!d || et(d, e, n, r)) return;
        const {
          currentTime: l,
          volume: h,
          muted: _
        } = d;
        t({
          type: c,
          id: i.getId(d),
          currentTime: l,
          volume: h,
          muted: _
        })
      }), s.media || 500),
      o = [it("play", a(0)), it("pause", a(1)), it("seeked", a(2)), it("volumechange", a(3))];
    return k(() => {
      o.forEach(c => c())
    })
  }

  function Wd({
    fontCb: t,
    doc: e
  }) {
    const n = e.defaultView;
    if (!n) return () => {};
    const r = [],
      i = new WeakMap,
      s = n.FontFace;
    n.FontFace = function(c, u, d) {
      const l = new s(c, u, d);
      return i.set(l, {
        family: c,
        buffer: typeof u != "string",
        descriptors: d,
        fontSource: typeof u == "string" ? u : JSON.stringify(Array.from(new Uint8Array(u)))
      }), l
    };
    const a = ne(e.fonts, "add", function(o) {
      return function(c) {
        return setTimeout(() => {
          const u = i.get(c);
          u && (t(u), i.delete(c))
        }, 0), o.apply(this, [c])
      }
    });
    return r.push(() => {
      n.FontFace = s
    }), r.push(a), k(() => {
      r.forEach(o => o())
    })
  }

  function qd(t, e) {
    const {
      mutationCb: n,
      mousemoveCb: r,
      mouseInteractionCb: i,
      scrollCb: s,
      viewportResizeCb: a,
      inputCb: o,
      mediaInteractionCb: c,
      styleSheetRuleCb: u,
      styleDeclarationCb: d,
      canvasMutationCb: l,
      fontCb: h
    } = t;
    t.mutationCb = (..._) => {
      e.mutation && e.mutation(..._), n(..._)
    }, t.mousemoveCb = (..._) => {
      e.mousemove && e.mousemove(..._), r(..._)
    }, t.mouseInteractionCb = (..._) => {
      e.mouseInteraction && e.mouseInteraction(..._), i(..._)
    }, t.scrollCb = (..._) => {
      e.scroll && e.scroll(..._), s(..._)
    }, t.viewportResizeCb = (..._) => {
      e.viewportResize && e.viewportResize(..._), a(..._)
    }, t.inputCb = (..._) => {
      e.input && e.input(..._), o(..._)
    }, t.mediaInteractionCb = (..._) => {
      e.mediaInteaction && e.mediaInteaction(..._), c(..._)
    }, t.styleSheetRuleCb = (..._) => {
      e.styleSheetRule && e.styleSheetRule(..._), u(..._)
    }, t.styleDeclarationCb = (..._) => {
      e.styleDeclaration && e.styleDeclaration(..._), d(..._)
    }, t.canvasMutationCb = (..._) => {
      e.canvasMutation && e.canvasMutation(..._), l(..._)
    }, t.fontCb = (..._) => {
      e.font && e.font(..._), h(..._)
    }
  }

  function Zd(t, e = {}) {
    const n = t.doc.defaultView;
    if (!n) return () => {};
    qd(t, e);
    const r = ra(t, t.doc),
      i = Gd(t),
      s = Pd(t),
      a = ia(t),
      o = Yd(t),
      c = zd(t),
      u = jd(t),
      d = $d(t, {
        win: n
      }),
      l = Hd(t, {
        win: n
      }),
      h = t.collectFonts ? Wd(t) : () => {},
      _ = [];
    for (const p of t.plugins) _.push(p.observer(p.callback, n, p.options));
    return k(() => {
      Mt.forEach(p => p.reset()), r.disconnect(), i(), s(), a(), o(), c(), u();
      try {
        d(), l()
      } catch (p) {}
      h(), _.forEach(p => p())
    })
  }

  function qe(t) {
    return typeof window[t] < "u"
  }

  function Ze(t) {
    return !!(typeof window[t] < "u" && window[t].prototype && "insertRule" in window[t].prototype && "deleteRule" in
      window[t].prototype)
  }
  class Vd {
    constructor(e) {
      this.iframes = new WeakMap, this.mutationCb = e.mutationCb
    }
    addIframe(e) {
      this.iframes.set(e, !0)
    }
    addLoadListener(e) {
      this.loadListener = e
    }
    attachIframe(e, n) {
      var r;
      this.mutationCb({
        adds: [{
          parentId: e.__sn.id,
          nextId: null,
          node: n
        }],
        removes: [],
        texts: [],
        attributes: [],
        isAttachIframe: !0
      }), (r = this.loadListener) === null || r === void 0 || r.call(this, e)
    }
  }
  class Xd {
    constructor(e) {
      this.restorePatches = [], this.mutationCb = e.mutationCb, this.scrollCb = e.scrollCb, this.bypassOptions = e
        .bypassOptions, this.mirror = e.mirror;
      const n = this;
      this.restorePatches.push(ne(HTMLElement.prototype, "attachShadow", function(r) {
        return function() {
          const i = r.apply(this, arguments);
          return this.shadowRoot && n.addShadowRoot(this.shadowRoot, this.ownerDocument), i
        }
      }))
    }
    addShadowRoot(e, n) {
      ra(Object.assign(Object.assign({}, this.bypassOptions), {
        doc: n,
        mutationCb: this.mutationCb,
        mirror: this.mirror,
        shadowDomManager: this
      }), e), ia(Object.assign(Object.assign({}, this.bypassOptions), {
        scrollCb: this.scrollCb,
        doc: e,
        mirror: this.mirror
      }))
    }
    observeAttachShadow(e) {
      if (e.contentWindow) {
        const n = this;
        this.restorePatches.push(ne(e.contentWindow.HTMLElement.prototype, "attachShadow", function(r) {
          return function() {
            const i = r.apply(this, arguments);
            return this.shadowRoot && n.addShadowRoot(this.shadowRoot, e.contentDocument), i
          }
        }))
      }
    }
    reset() {
      this.restorePatches.forEach(e => e())
    }
  }

  function Kd(t, e) {
    var n = {};
    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
    if (t != null && typeof Object.getOwnPropertySymbols == "function")
      for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++) e.indexOf(r[i]) < 0 && Object.prototype
        .propertyIsEnumerable.call(t, r[i]) && (n[r[i]] = t[r[i]]);
    return n
  }

  function Jd(t, e, n, r, i, s) {
    const a = [],
      o = Object.getOwnPropertyNames(e.CanvasRenderingContext2D.prototype);
    for (const c of o) try {
      if (typeof e.CanvasRenderingContext2D.prototype[c] != "function") continue;
      const u = ne(e.CanvasRenderingContext2D.prototype, c, function(d) {
        return function(...l) {
          return et(this.canvas, n, i, r) || setTimeout(() => {
            const h = [...l];
            if (c === "drawImage" && h[0] && h[0] instanceof HTMLCanvasElement) {
              const _ = h[0],
                p = _.getContext("2d");
              let w = p == null ? void 0 : p.getImageData(0, 0, _.width, _.height),
                D = w == null ? void 0 : w.data;
              h[0] = JSON.stringify(D)
            }
            t(this.canvas, {
              type: ee["2D"],
              property: c,
              args: h
            })
          }, 0), d.apply(this, l)
        }
      });
      a.push(u)
    } catch (u) {
      const d = wn(e.CanvasRenderingContext2D.prototype, c, {
        set(l) {
          t(this.canvas, {
            type: ee["2D"],
            property: c,
            args: [l],
            setter: !0
          })
        }
      });
      a.push(d)
    }
    return () => {
      a.forEach(c => c())
    }
  }

  function Qd(t, e, n, r) {
    const i = [];
    try {
      const s = ne(t.HTMLCanvasElement.prototype, "getContext", function(a) {
        return function(o, ...c) {
          return et(this, e, n, r) || "__context" in this || (this.__context = o), a.apply(this, [o, ...c])
        }
      });
      i.push(s)
    } catch (s) {
      console.error("failed to patch HTMLCanvasElement.prototype.getContext")
    }
    return () => {
      i.forEach(s => s())
    }
  }
  var Kt = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    tl = typeof Uint8Array > "u" ? [] : new Uint8Array(256);
  for (var Ve = 0; Ve < Kt.length; Ve++) tl[Kt.charCodeAt(Ve)] = Ve;
  var el = function(t) {
    var e = new Uint8Array(t),
      n, r = e.length,
      i = "";
    for (n = 0; n < r; n += 3) i += Kt[e[n] >> 2], i += Kt[(e[n] & 3) << 4 | e[n + 1] >> 4], i += Kt[(e[n + 1] &
      15) << 2 | e[n + 2] >> 6], i += Kt[e[n + 2] & 63];
    return r % 3 === 2 ? i = i.substring(0, i.length - 1) + "=" : r % 3 === 1 && (i = i.substring(0, i.length - 2) +
      "=="), i
  };
  const Ei = new Map;

  function nl(t, e) {
    let n = Ei.get(t);
    return n || (n = new Map, Ei.set(t, n)), n.has(e) || n.set(e, []), n.get(e)
  }
  const sa = (t, e, n) => {
    if (!t || !(aa(t, e) || typeof t == "object")) return;
    const r = t.constructor.name,
      i = nl(n, r);
    let s = i.indexOf(t);
    return s === -1 && (s = i.length, i.push(t)), s
  };

  function en(t, e, n) {
    if (t instanceof Array) return t.map(r => en(r, e, n));
    if (t === null) return t;
    if (t instanceof Float32Array || t instanceof Float64Array || t instanceof Int32Array || t instanceof Uint32Array ||
      t instanceof Uint8Array || t instanceof Uint16Array || t instanceof Int16Array || t instanceof Int8Array ||
      t instanceof Uint8ClampedArray) return {
      rr_type: t.constructor.name,
      args: [Object.values(t)]
    };
    if (t instanceof ArrayBuffer) {
      const r = t.constructor.name,
        i = el(t);
      return {
        rr_type: r,
        base64: i
      }
    } else {
      if (t instanceof DataView) return {
        rr_type: t.constructor.name,
        args: [en(t.buffer, e, n), t.byteOffset, t.byteLength]
      };
      if (t instanceof HTMLImageElement) {
        const r = t.constructor.name,
          {
            src: i
          } = t;
        return {
          rr_type: r,
          src: i
        }
      } else {
        if (t instanceof ImageData) return {
          rr_type: t.constructor.name,
          args: [en(t.data, e, n), t.width, t.height]
        };
        if (aa(t, e) || typeof t == "object") {
          const r = t.constructor.name,
            i = sa(t, e, n);
          return {
            rr_type: r,
            index: i
          }
        }
      }
    }
    return t
  }
  const rl = (t, e, n) => [...t].map(r => en(r, e, n)),
    aa = (t, e) => !!["WebGLActiveInfo", "WebGLBuffer", "WebGLFramebuffer", "WebGLProgram", "WebGLRenderbuffer",
      "WebGLShader", "WebGLShaderPrecisionFormat", "WebGLTexture", "WebGLUniformLocation", "WebGLVertexArrayObject",
      "WebGLVertexArrayObjectOES"
    ].filter(i => typeof e[i] == "function").find(i => t instanceof e[i]);

  function Si(t, e, n, r, i, s, a, o) {
    const c = [],
      u = Object.getOwnPropertyNames(t);
    for (const d of u) try {
      if (typeof t[d] != "function") continue;
      const l = ne(t, d, function(h) {
        return function(..._) {
          const p = h.apply(this, _);
          if (sa(p, o, t), !et(this.canvas, r, s, i)) {
            const w = a.getId(this.canvas),
              D = rl([..._], o, t),
              S = {
                type: e,
                property: d,
                args: D
              };
            n(this.canvas, S)
          }
          return p
        }
      });
      c.push(l)
    } catch (l) {
      const h = wn(t, d, {
        set(_) {
          n(this.canvas, {
            type: e,
            property: d,
            args: [_],
            setter: !0
          })
        }
      });
      c.push(h)
    }
    return c
  }

  function il(t, e, n, r, i, s) {
    const a = [];
    return a.push(...Si(e.WebGLRenderingContext.prototype, ee.WebGL, t, n, r, i, s, e)), typeof e
      .WebGL2RenderingContext < "u" && a.push(...Si(e.WebGL2RenderingContext.prototype, ee.WebGL2, t, n, r, i, s, e)),
      () => {
        a.forEach(o => o())
      }
  }
  class sl {
    reset() {
      this.pendingCanvasMutations.clear(), this.resetObservers && this.resetObservers()
    }
    freeze() {
      this.frozen = !0
    }
    unfreeze() {
      this.frozen = !1
    }
    lock() {
      this.locked = !0
    }
    unlock() {
      this.locked = !1
    }
    constructor(e) {
      this.pendingCanvasMutations = new Map, this.rafStamps = {
          latestId: 0,
          invokeId: null
        }, this.frozen = !1, this.locked = !1, this.processMutation = function(n, r) {
          (this.rafStamps.invokeId && this.rafStamps.latestId !== this.rafStamps.invokeId || !this.rafStamps
            .invokeId) && (this.rafStamps.invokeId = this.rafStamps.latestId), this.pendingCanvasMutations.has(n) ||
            this.pendingCanvasMutations.set(n, []), this.pendingCanvasMutations.get(n).push(r)
        }, this.mutationCb = e.mutationCb, this.mirror = e.mirror, e.recordCanvas === !0 && this
        .initCanvasMutationObserver(e.win, e.blockClass, e.blockSelector, e.unblockSelector)
    }
    initCanvasMutationObserver(e, n, r, i) {
      this.startRAFTimestamping(), this.startPendingCanvasMutationFlusher();
      const s = Qd(e, n, i, r),
        a = Jd(this.processMutation.bind(this), e, n, i, r, this.mirror),
        o = il(this.processMutation.bind(this), e, n, i, r, this.mirror);
      this.resetObservers = () => {
        s(), a(), o()
      }
    }
    startPendingCanvasMutationFlusher() {
      requestAnimationFrame(() => this.flushPendingCanvasMutations())
    }
    startRAFTimestamping() {
      const e = n => {
        this.rafStamps.latestId = n, requestAnimationFrame(e)
      };
      requestAnimationFrame(e)
    }
    flushPendingCanvasMutations() {
      this.pendingCanvasMutations.forEach((e, n) => {
        const r = this.mirror.getId(n);
        this.flushPendingCanvasMutationFor(n, r)
      }), requestAnimationFrame(() => this.flushPendingCanvasMutations())
    }
    flushPendingCanvasMutationFor(e, n) {
      if (this.frozen || this.locked) return;
      const r = this.pendingCanvasMutations.get(e);
      if (!r || n === -1) return;
      const i = r.map(a => Kd(a, ["type"])),
        {
          type: s
        } = r[0];
      this.mutationCb({
        id: n,
        type: s,
        commands: i
      }), this.pendingCanvasMutations.delete(e)
    }
  }

  function q(t) {
    return Object.assign(Object.assign({}, t), {
      timestamp: Date.now()
    })
  }
  let H, we;
  const ge = Ud();

  function jt(t = {}) {
    const {
      emit: e,
      checkoutEveryNms: n,
      checkoutEveryNth: r,
      blockClass: i = "rr-block",
      blockSelector: s = null,
      unblockSelector: a = null,
      ignoreClass: o = "rr-ignore",
      ignoreSelector: c = null,
      maskTextClass: u = "rr-mask",
      maskTextSelector: d = null,
      maskInputSelector: l = null,
      unmaskTextSelector: h = null,
      unmaskInputSelector: _ = null,
      inlineStylesheet: p = !0,
      maskAllText: w = !1,
      maskAllInputs: D,
      maskInputOptions: S,
      slimDOMOptions: O,
      maskInputFn: x,
      maskTextFn: v,
      hooks: b,
      packFn: N,
      sampling: T = {},
      mousemoveWait: E,
      recordCanvas: U = !1,
      userTriggeredOnInput: I = !1,
      collectFonts: z = !1,
      inlineImages: K = !1,
      plugins: m,
      keepIframeSrcFn: A = () => !1,
      onMutation: $
    } = t;
    if (!e) throw new Error("emit function is required");
    E !== void 0 && T.mousemove === void 0 && (T.mousemove = E);
    const Q = D === !0 ? {
        color: !0,
        date: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0,
        textarea: !0,
        select: !0,
        radio: !0,
        checkbox: !0
      } : S !== void 0 ? S : {},
      ft = O === !0 || O === "all" ? {
        script: !0,
        comment: !0,
        headFavicon: !0,
        headWhitespace: !0,
        headMetaSocial: !0,
        headMetaRobots: !0,
        headMetaHttpEquiv: !0,
        headMetaVerification: !0,
        headMetaAuthorship: O === "all",
        headMetaDescKeywords: O === "all"
      } : O || {};
    Bd();
    let Ur, kn = 0;
    const La = R => {
      for (const at of m || []) at.eventProcessor && (R = at.eventProcessor(R));
      return N && (R = N(R)), R
    };
    H = (R, at) => {
      var _t;
      if (!((_t = Mt[0]) === null || _t === void 0) && _t.isFrozen() && R.type !== L.FullSnapshot && !(R.type === L
          .IncrementalSnapshot && R.data.source === Z.Mutation) && Mt.forEach(rt => rt.unfreeze()), e(La(R), at), R
        .type === L.FullSnapshot) Ur = R, kn = 0;
      else if (R.type === L.IncrementalSnapshot) {
        if (R.data.source === Z.Mutation && R.data.isAttachIframe) return;
        kn++;
        const rt = r && kn >= r,
          ot = n && R.timestamp - Ur.timestamp > n;
        (rt || ot) && we(!0)
      }
    };
    const Nn = R => {
        H(q({
          type: L.IncrementalSnapshot,
          data: Object.assign({
            source: Z.Mutation
          }, R)
        }))
      },
      Br = R => H(q({
        type: L.IncrementalSnapshot,
        data: Object.assign({
          source: Z.Scroll
        }, R)
      })),
      Lr = R => H(q({
        type: L.IncrementalSnapshot,
        data: Object.assign({
          source: Z.CanvasMutation
        }, R)
      })),
      _e = new Vd({
        mutationCb: Nn
      }),
      Mr = new sl({
        recordCanvas: U,
        mutationCb: Lr,
        win: window,
        blockClass: i,
        blockSelector: s,
        unblockSelector: a,
        mirror: ge
      }),
      Dn = new Xd({
        mutationCb: Nn,
        scrollCb: Br,
        bypassOptions: {
          onMutation: $,
          blockClass: i,
          blockSelector: s,
          unblockSelector: a,
          maskTextClass: u,
          maskTextSelector: d,
          unmaskTextSelector: h,
          maskInputSelector: l,
          unmaskInputSelector: _,
          inlineStylesheet: p,
          maskAllText: w,
          maskInputOptions: Q,
          maskTextFn: v,
          maskInputFn: x,
          recordCanvas: U,
          inlineImages: K,
          sampling: T,
          slimDOMOptions: ft,
          iframeManager: _e,
          canvasManager: Mr
        },
        mirror: ge
      });
    we = (R = !1) => {
      var at, _t, rt, ot;
      H(q({
        type: L.Meta,
        data: {
          href: window.location.href,
          width: Js(),
          height: Ks()
        }
      }), R), Mt.forEach(ct => ct.lock());
      const [M, he] = Ad(document, {
        blockClass: i,
        blockSelector: s,
        unblockSelector: a,
        maskTextClass: u,
        maskTextSelector: d,
        unmaskTextSelector: h,
        maskInputSelector: l,
        unmaskInputSelector: _,
        inlineStylesheet: p,
        maskAllText: w,
        maskAllInputs: Q,
        maskTextFn: v,
        slimDOM: ft,
        recordCanvas: U,
        inlineImages: K,
        onSerialize: ct => {
          ea(ct) && _e.addIframe(ct), na(ct) && Dn.addShadowRoot(ct.shadowRoot, document)
        },
        onIframeLoad: (ct, Ma) => {
          _e.attachIframe(ct, Ma), Dn.observeAttachShadow(ct)
        },
        keepIframeSrcFn: A
      });
      if (!M) return console.warn("Failed to snapshot the document");
      ge.map = he, H(q({
        type: L.FullSnapshot,
        data: {
          node: M,
          initialOffset: {
            left: window.pageXOffset !== void 0 ? window.pageXOffset : (document == null ? void 0 : document
              .documentElement.scrollLeft) || ((_t = (at = document == null ? void 0 : document.body) ===
                null || at === void 0 ? void 0 : at.parentElement) === null || _t === void 0 ? void 0 : _t
              .scrollLeft) || (document == null ? void 0 : document.body.scrollLeft) || 0,
            top: window.pageYOffset !== void 0 ? window.pageYOffset : (document == null ? void 0 : document
              .documentElement.scrollTop) || ((ot = (rt = document == null ? void 0 : document.body) ===
                null || rt === void 0 ? void 0 : rt.parentElement) === null || ot === void 0 ? void 0 : ot
              .scrollTop) || (document == null ? void 0 : document.body.scrollTop) || 0
          }
        }
      })), Mt.forEach(ct => ct.unlock())
    };
    try {
      const R = [];
      R.push(it("DOMContentLoaded", () => {
        H(q({
          type: L.DomContentLoaded,
          data: {}
        }))
      }));
      const at = rt => {
        var ot;
        return k(Zd)({
          onMutation: $,
          mutationCb: Nn,
          mousemoveCb: (M, he) => H(q({
            type: L.IncrementalSnapshot,
            data: {
              source: he,
              positions: M
            }
          })),
          mouseInteractionCb: M => H(q({
            type: L.IncrementalSnapshot,
            data: Object.assign({
              source: Z.MouseInteraction
            }, M)
          })),
          scrollCb: Br,
          viewportResizeCb: M => H(q({
            type: L.IncrementalSnapshot,
            data: Object.assign({
              source: Z.ViewportResize
            }, M)
          })),
          inputCb: M => H(q({
            type: L.IncrementalSnapshot,
            data: Object.assign({
              source: Z.Input
            }, M)
          })),
          mediaInteractionCb: M => H(q({
            type: L.IncrementalSnapshot,
            data: Object.assign({
              source: Z.MediaInteraction
            }, M)
          })),
          styleSheetRuleCb: M => H(q({
            type: L.IncrementalSnapshot,
            data: Object.assign({
              source: Z.StyleSheetRule
            }, M)
          })),
          styleDeclarationCb: M => H(q({
            type: L.IncrementalSnapshot,
            data: Object.assign({
              source: Z.StyleDeclaration
            }, M)
          })),
          canvasMutationCb: Lr,
          fontCb: M => H(q({
            type: L.IncrementalSnapshot,
            data: Object.assign({
              source: Z.Font
            }, M)
          })),
          blockClass: i,
          ignoreClass: o,
          ignoreSelector: c,
          maskTextClass: u,
          maskTextSelector: d,
          unmaskTextSelector: h,
          maskInputSelector: l,
          unmaskInputSelector: _,
          maskInputOptions: Q,
          inlineStylesheet: p,
          sampling: T,
          recordCanvas: U,
          inlineImages: K,
          userTriggeredOnInput: I,
          collectFonts: z,
          doc: rt,
          maskAllText: w,
          maskInputFn: x,
          maskTextFn: v,
          blockSelector: s,
          unblockSelector: a,
          slimDOMOptions: ft,
          mirror: ge,
          iframeManager: _e,
          shadowDomManager: Dn,
          canvasManager: Mr,
          plugins: ((ot = m == null ? void 0 : m.filter(M => M.observer)) === null || ot === void 0 ? void 0 : ot
            .map(M => ({
              observer: M.observer,
              options: M.options,
              callback: he => H(q({
                type: L.Plugin,
                data: {
                  plugin: M.name,
                  payload: he
                }
              }))
            }))) || []
        }, b)
      };
      _e.addLoadListener(rt => {
        try {
          R.push(at(rt.contentDocument))
        } catch (ot) {
          console.warn(ot)
        }
      });
      const _t = () => {
        we(), R.push(at(document))
      };
      return document.readyState === "interactive" || document.readyState === "complete" ? _t() : R.push(it("load",
        () => {
          H(q({
            type: L.Load,
            data: {}
          })), _t()
        }, window)), () => {
        R.forEach(rt => rt())
      }
    } catch (R) {
      console.warn(R)
    }
  }
  jt.addCustomEvent = (t, e) => {
    if (!H) throw new Error("please add custom event after start recording");
    H(q({
      type: L.Custom,
      data: {
        tag: t,
        payload: e
      }
    }))
  };
  jt.freezePage = () => {
    Mt.forEach(t => t.freeze())
  };
  jt.takeFullSnapshot = t => {
    if (!we) throw new Error("please take full snapshot after start recording");
    we(t)
  };
  jt.mirror = ge;
  const al = ["name", "type", "startTime", "transferSize", "duration"];

  function bi(t) {
    return function(e) {
      return al.every(n => t[n] === e[n])
    }
  }

  function ol(t, e) {
    const [n, r, i] = t.reduce((c, u) => (u.entryType === "navigation" ? c[0].push(u) : u.entryType ===
      "largest-contentful-paint" ? c[1].push(u) : c[2].push(u), c), [
      [],
      [],
      []
    ]), s = [], a = [];
    let o = r.length ? r[r.length - 1] : void 0;
    return e.forEach(c => {
      if (c.entryType === "largest-contentful-paint") {
        (!o || o.startTime < c.startTime) && (o = c);
        return
      }
      if (c.entryType === "navigation") {
        const u = c;
        c.duration > 0 && !n.find(bi(u)) && !a.find(bi(u)) && a.push(u);
        return
      }
      s.push(c)
    }), [...o ? [o] : [], ...n, ...i, ...s, ...a].sort((c, u) => c.startTime - u.startTime)
  }

  function cl(t) {
    const e = r => {
        const i = ol(t.performanceEvents, r.getEntries());
        t.performanceEvents = i
      },
      n = new PerformanceObserver(e);
    return ["element", "event", "first-input", "largest-contentful-paint", "layout-shift", "longtask", "navigation",
      "paint", "resource"
    ].forEach(r => {
      try {
        n.observe({
          type: r,
          buffered: !0
        })
      } catch (i) {}
    }), n
  }
  const ul =
    `/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */
function t(t){let e=t.length;for(;--e>=0;)t[e]=0}const e=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),a=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),n=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=new Array(576);t(s);const r=new Array(60);t(r);const o=new Array(512);t(o);const l=new Array(256);t(l);const h=new Array(29);t(h);const d=new Array(30);function _(t,e,a,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}let f,c,u;function w(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}t(d);const m=t=>t<256?o[t]:o[256+(t>>>7)],b=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},g=(t,e,a)=>{t.bi_valid>16-a?(t.bi_buf|=e<<t.bi_valid&65535,b(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=a-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)},p=(t,e,a)=>{g(t,a[2*e],a[2*e+1])},k=(t,e)=>{let a=0;do{a|=1&t,t>>>=1,a<<=1}while(--e>0);return a>>>1},v=(t,e,a)=>{const i=new Array(16);let n,s,r=0;for(n=1;n<=15;n++)r=r+a[n-1]<<1,i[n]=r;for(s=0;s<=e;s++){let e=t[2*s+1];0!==e&&(t[2*s]=k(i[e]++,e))}},y=t=>{let e;for(e=0;e<286;e++)t.dyn_ltree[2*e]=0;for(e=0;e<30;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},x=t=>{t.bi_valid>8?b(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},z=(t,e,a,i)=>{const n=2*e,s=2*a;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[a]},A=(t,e,a)=>{const i=t.heap[a];let n=a<<1;for(;n<=t.heap_len&&(n<t.heap_len&&z(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!z(e,i,t.heap[n],t.depth));)t.heap[a]=t.heap[n],a=n,n<<=1;t.heap[a]=i},E=(t,i,n)=>{let s,r,o,_,f=0;if(0!==t.sym_next)do{s=255&t.pending_buf[t.sym_buf+f++],s+=(255&t.pending_buf[t.sym_buf+f++])<<8,r=t.pending_buf[t.sym_buf+f++],0===s?p(t,r,i):(o=l[r],p(t,o+256+1,i),_=e[o],0!==_&&(r-=h[o],g(t,r,_)),s--,o=m(s),p(t,o,n),_=a[o],0!==_&&(s-=d[o],g(t,s,_)))}while(f<t.sym_next);p(t,256,i)},R=(t,e)=>{const a=e.dyn_tree,i=e.stat_desc.static_tree,n=e.stat_desc.has_stree,s=e.stat_desc.elems;let r,o,l,h=-1;for(t.heap_len=0,t.heap_max=573,r=0;r<s;r++)0!==a[2*r]?(t.heap[++t.heap_len]=h=r,t.depth[r]=0):a[2*r+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=h<2?++h:0,a[2*l]=1,t.depth[l]=0,t.opt_len--,n&&(t.static_len-=i[2*l+1]);for(e.max_code=h,r=t.heap_len>>1;r>=1;r--)A(t,a,r);l=s;do{r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],A(t,a,1),o=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=o,a[2*l]=a[2*r]+a[2*o],t.depth[l]=(t.depth[r]>=t.depth[o]?t.depth[r]:t.depth[o])+1,a[2*r+1]=a[2*o+1]=l,t.heap[1]=l++,A(t,a,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],((t,e)=>{const a=e.dyn_tree,i=e.max_code,n=e.stat_desc.static_tree,s=e.stat_desc.has_stree,r=e.stat_desc.extra_bits,o=e.stat_desc.extra_base,l=e.stat_desc.max_length;let h,d,_,f,c,u,w=0;for(f=0;f<=15;f++)t.bl_count[f]=0;for(a[2*t.heap[t.heap_max]+1]=0,h=t.heap_max+1;h<573;h++)d=t.heap[h],f=a[2*a[2*d+1]+1]+1,f>l&&(f=l,w++),a[2*d+1]=f,d>i||(t.bl_count[f]++,c=0,d>=o&&(c=r[d-o]),u=a[2*d],t.opt_len+=u*(f+c),s&&(t.static_len+=u*(n[2*d+1]+c)));if(0!==w){do{for(f=l-1;0===t.bl_count[f];)f--;t.bl_count[f]--,t.bl_count[f+1]+=2,t.bl_count[l]--,w-=2}while(w>0);for(f=l;0!==f;f--)for(d=t.bl_count[f];0!==d;)_=t.heap[--h],_>i||(a[2*_+1]!==f&&(t.opt_len+=(f-a[2*_+1])*a[2*_],a[2*_+1]=f),d--)}})(t,e),v(a,h,t.bl_count)},Z=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)n=r,r=e[2*(i+1)+1],++o<l&&n===r||(o<h?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4))},U=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),i=0;i<=a;i++)if(n=r,r=e[2*(i+1)+1],!(++o<l&&n===r)){if(o<h)do{p(t,n,t.bl_tree)}while(0!=--o);else 0!==n?(n!==s&&(p(t,n,t.bl_tree),o--),p(t,16,t.bl_tree),g(t,o-3,2)):o<=10?(p(t,17,t.bl_tree),g(t,o-3,3)):(p(t,18,t.bl_tree),g(t,o-11,7));o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4)}};let S=!1;const D=(t,e,a,i)=>{g(t,0+(i?1:0),3),x(t),b(t,a),b(t,~a),a&&t.pending_buf.set(t.window.subarray(e,e+a),t.pending),t.pending+=a};var T=(t,e,a,i)=>{let o,l,h=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=(t=>{let e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<256;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0})(t)),R(t,t.l_desc),R(t,t.d_desc),h=(t=>{let e;for(Z(t,t.dyn_ltree,t.l_desc.max_code),Z(t,t.dyn_dtree,t.d_desc.max_code),R(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*n[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(t),o=t.opt_len+3+7>>>3,l=t.static_len+3+7>>>3,l<=o&&(o=l)):o=l=a+5,a+4<=o&&-1!==e?D(t,e,a,i):4===t.strategy||l===o?(g(t,2+(i?1:0),3),E(t,s,r)):(g(t,4+(i?1:0),3),((t,e,a,i)=>{let s;for(g(t,e-257,5),g(t,a-1,5),g(t,i-4,4),s=0;s<i;s++)g(t,t.bl_tree[2*n[s]+1],3);U(t,t.dyn_ltree,e-1),U(t,t.dyn_dtree,a-1)})(t,t.l_desc.max_code+1,t.d_desc.max_code+1,h+1),E(t,t.dyn_ltree,t.dyn_dtree)),y(t),i&&x(t)},O={_tr_init:t=>{S||((()=>{let t,n,w,m,b;const g=new Array(16);for(w=0,m=0;m<28;m++)for(h[m]=w,t=0;t<1<<e[m];t++)l[w++]=m;for(l[w-1]=m,b=0,m=0;m<16;m++)for(d[m]=b,t=0;t<1<<a[m];t++)o[b++]=m;for(b>>=7;m<30;m++)for(d[m]=b<<7,t=0;t<1<<a[m]-7;t++)o[256+b++]=m;for(n=0;n<=15;n++)g[n]=0;for(t=0;t<=143;)s[2*t+1]=8,t++,g[8]++;for(;t<=255;)s[2*t+1]=9,t++,g[9]++;for(;t<=279;)s[2*t+1]=7,t++,g[7]++;for(;t<=287;)s[2*t+1]=8,t++,g[8]++;for(v(s,287,g),t=0;t<30;t++)r[2*t+1]=5,r[2*t]=k(t,5);f=new _(s,e,257,286,15),c=new _(r,a,0,30,15),u=new _(new Array(0),i,0,19,7)})(),S=!0),t.l_desc=new w(t.dyn_ltree,f),t.d_desc=new w(t.dyn_dtree,c),t.bl_desc=new w(t.bl_tree,u),t.bi_buf=0,t.bi_valid=0,y(t)},_tr_stored_block:D,_tr_flush_block:T,_tr_tally:(t,e,a)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=a,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(l[a]+256+1)]++,t.dyn_dtree[2*m(e)]++),t.sym_next===t.sym_end),_tr_align:t=>{g(t,2,3),p(t,256,s),(t=>{16===t.bi_valid?(b(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)})(t)}};var F=(t,e,a,i)=>{let n=65535&t|0,s=t>>>16&65535|0,r=0;for(;0!==a;){r=a>2e3?2e3:a,a-=r;do{n=n+e[i++]|0,s=s+n|0}while(--r);n%=65521,s%=65521}return n|s<<16|0};const L=new Uint32Array((()=>{let t,e=[];for(var a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e})());var N=(t,e,a,i)=>{const n=L,s=i+a;t^=-1;for(let a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t},I={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},B={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:C,_tr_stored_block:H,_tr_flush_block:M,_tr_tally:j,_tr_align:K}=O,{Z_NO_FLUSH:P,Z_PARTIAL_FLUSH:Y,Z_FULL_FLUSH:G,Z_FINISH:X,Z_BLOCK:W,Z_OK:q,Z_STREAM_END:J,Z_STREAM_ERROR:Q,Z_DATA_ERROR:V,Z_BUF_ERROR:$,Z_DEFAULT_COMPRESSION:tt,Z_FILTERED:et,Z_HUFFMAN_ONLY:at,Z_RLE:it,Z_FIXED:nt,Z_DEFAULT_STRATEGY:st,Z_UNKNOWN:rt,Z_DEFLATED:ot}=B,lt=(t,e)=>(t.msg=I[e],e),ht=t=>2*t-(t>4?9:0),dt=t=>{let e=t.length;for(;--e>=0;)t[e]=0},_t=t=>{let e,a,i,n=t.w_size;e=t.hash_size,i=e;do{a=t.head[--i],t.head[i]=a>=n?a-n:0}while(--e);e=n,i=e;do{a=t.prev[--i],t.prev[i]=a>=n?a-n:0}while(--e)};let ft=(t,e,a)=>(e<<t.hash_shift^a)&t.hash_mask;const ct=t=>{const e=t.state;let a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+a),t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))},ut=(t,e)=>{M(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,ct(t.strm)},wt=(t,e)=>{t.pending_buf[t.pending++]=e},mt=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},bt=(t,e,a,i)=>{let n=t.avail_in;return n>i&&(n=i),0===n?0:(t.avail_in-=n,e.set(t.input.subarray(t.next_in,t.next_in+n),a),1===t.state.wrap?t.adler=F(t.adler,e,n,a):2===t.state.wrap&&(t.adler=N(t.adler,e,n,a)),t.next_in+=n,t.total_in+=n,n)},gt=(t,e)=>{let a,i,n=t.max_chain_length,s=t.strstart,r=t.prev_length,o=t.nice_match;const l=t.strstart>t.w_size-262?t.strstart-(t.w_size-262):0,h=t.window,d=t.w_mask,_=t.prev,f=t.strstart+258;let c=h[s+r-1],u=h[s+r];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(a=e,h[a+r]===u&&h[a+r-1]===c&&h[a]===h[s]&&h[++a]===h[s+1]){s+=2,a++;do{}while(h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&s<f);if(i=258-(f-s),s=f-258,i>r){if(t.match_start=e,r=i,i>=o)break;c=h[s+r-1],u=h[s+r]}}}while((e=_[e&d])>l&&0!=--n);return r<=t.lookahead?r:t.lookahead},pt=t=>{const e=t.w_size;let a,i,n;do{if(i=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-262)&&(t.window.set(t.window.subarray(e,e+e-i),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),_t(t),i+=e),0===t.strm.avail_in)break;if(a=bt(t.strm,t.window,t.strstart+t.lookahead,i),t.lookahead+=a,t.lookahead+t.insert>=3)for(n=t.strstart-t.insert,t.ins_h=t.window[n],t.ins_h=ft(t,t.ins_h,t.window[n+1]);t.insert&&(t.ins_h=ft(t,t.ins_h,t.window[n+3-1]),t.prev[n&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=n,n++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<262&&0!==t.strm.avail_in)},kt=(t,e)=>{let a,i,n,s=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,r=0,o=t.strm.avail_in;do{if(a=65535,n=t.bi_valid+42>>3,t.strm.avail_out<n)break;if(n=t.strm.avail_out-n,i=t.strstart-t.block_start,a>i+t.strm.avail_in&&(a=i+t.strm.avail_in),a>n&&(a=n),a<s&&(0===a&&e!==X||e===P||a!==i+t.strm.avail_in))break;r=e===X&&a===i+t.strm.avail_in?1:0,H(t,0,0,r),t.pending_buf[t.pending-4]=a,t.pending_buf[t.pending-3]=a>>8,t.pending_buf[t.pending-2]=~a,t.pending_buf[t.pending-1]=~a>>8,ct(t.strm),i&&(i>a&&(i=a),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+i),t.strm.next_out),t.strm.next_out+=i,t.strm.avail_out-=i,t.strm.total_out+=i,t.block_start+=i,a-=i),a&&(bt(t.strm,t.strm.output,t.strm.next_out,a),t.strm.next_out+=a,t.strm.avail_out-=a,t.strm.total_out+=a)}while(0===r);return o-=t.strm.avail_in,o&&(o>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=o&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-o,t.strm.next_in),t.strstart),t.strstart+=o,t.insert+=o>t.w_size-t.insert?t.w_size-t.insert:o),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),r?4:e!==P&&e!==X&&0===t.strm.avail_in&&t.strstart===t.block_start?2:(n=t.window_size-t.strstart,t.strm.avail_in>n&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,n+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),n>t.strm.avail_in&&(n=t.strm.avail_in),n&&(bt(t.strm,t.window,t.strstart,n),t.strstart+=n,t.insert+=n>t.w_size-t.insert?t.w_size-t.insert:n),t.high_water<t.strstart&&(t.high_water=t.strstart),n=t.bi_valid+42>>3,n=t.pending_buf_size-n>65535?65535:t.pending_buf_size-n,s=n>t.w_size?t.w_size:n,i=t.strstart-t.block_start,(i>=s||(i||e===X)&&e!==P&&0===t.strm.avail_in&&i<=n)&&(a=i>n?n:i,r=e===X&&0===t.strm.avail_in&&a===i?1:0,H(t,t.block_start,a,r),t.block_start+=a,ct(t.strm)),r?3:1)},vt=(t,e)=>{let a,i;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a)),t.match_length>=3)if(i=j(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=ft(t,t.ins_h,t.window[t.strstart+1]);else i=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2},yt=(t,e)=>{let a,i,n;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a),t.match_length<=5&&(t.strategy===et||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){n=t.strstart+t.lookahead-3,i=j(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=n&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,i&&(ut(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if(i=j(t,0,t.window[t.strstart-1]),i&&ut(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=j(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2};function xt(t,e,a,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=n}const zt=[new xt(0,0,0,0,kt),new xt(4,4,8,4,vt),new xt(4,5,16,8,vt),new xt(4,6,32,32,vt),new xt(4,4,16,16,yt),new xt(8,16,32,32,yt),new xt(8,16,128,128,yt),new xt(8,32,128,256,yt),new xt(32,128,258,1024,yt),new xt(32,258,258,4096,yt)];function At(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=ot,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),dt(this.dyn_ltree),dt(this.dyn_dtree),dt(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),dt(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),dt(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Et=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||42!==e.status&&57!==e.status&&69!==e.status&&73!==e.status&&91!==e.status&&103!==e.status&&113!==e.status&&666!==e.status?1:0},Rt=t=>{if(Et(t))return lt(t,Q);t.total_in=t.total_out=0,t.data_type=rt;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=2===e.wrap?57:e.wrap?42:113,t.adler=2===e.wrap?0:1,e.last_flush=-2,C(e),q},Zt=t=>{const e=Rt(t);var a;return e===q&&((a=t.state).window_size=2*a.w_size,dt(a.head),a.max_lazy_match=zt[a.level].max_lazy,a.good_match=zt[a.level].good_length,a.nice_match=zt[a.level].nice_length,a.max_chain_length=zt[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0),e},Ut=(t,e,a,i,n,s)=>{if(!t)return Q;let r=1;if(e===tt&&(e=6),i<0?(r=0,i=-i):i>15&&(r=2,i-=16),n<1||n>9||a!==ot||i<8||i>15||e<0||e>9||s<0||s>nt||8===i&&1!==r)return lt(t,Q);8===i&&(i=9);const o=new At;return t.state=o,o.strm=t,o.status=42,o.wrap=r,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=e,o.strategy=s,o.method=a,Zt(t)};var St={deflateInit:(t,e)=>Ut(t,e,ot,15,8,st),deflateInit2:Ut,deflateReset:Zt,deflateResetKeep:Rt,deflateSetHeader:(t,e)=>Et(t)||2!==t.state.wrap?Q:(t.state.gzhead=e,q),deflate:(t,e)=>{if(Et(t)||e>W||e<0)return t?lt(t,Q):Q;const a=t.state;if(!t.output||0!==t.avail_in&&!t.input||666===a.status&&e!==X)return lt(t,0===t.avail_out?$:Q);const i=a.last_flush;if(a.last_flush=e,0!==a.pending){if(ct(t),0===t.avail_out)return a.last_flush=-1,q}else if(0===t.avail_in&&ht(e)<=ht(i)&&e!==X)return lt(t,$);if(666===a.status&&0!==t.avail_in)return lt(t,$);if(42===a.status&&0===a.wrap&&(a.status=113),42===a.status){let e=ot+(a.w_bits-8<<4)<<8,i=-1;if(i=a.strategy>=at||a.level<2?0:a.level<6?1:6===a.level?2:3,e|=i<<6,0!==a.strstart&&(e|=32),e+=31-e%31,mt(a,e),0!==a.strstart&&(mt(a,t.adler>>>16),mt(a,65535&t.adler)),t.adler=1,a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(57===a.status)if(t.adler=0,wt(a,31),wt(a,139),wt(a,8),a.gzhead)wt(a,(a.gzhead.text?1:0)+(a.gzhead.hcrc?2:0)+(a.gzhead.extra?4:0)+(a.gzhead.name?8:0)+(a.gzhead.comment?16:0)),wt(a,255&a.gzhead.time),wt(a,a.gzhead.time>>8&255),wt(a,a.gzhead.time>>16&255),wt(a,a.gzhead.time>>24&255),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,255&a.gzhead.os),a.gzhead.extra&&a.gzhead.extra.length&&(wt(a,255&a.gzhead.extra.length),wt(a,a.gzhead.extra.length>>8&255)),a.gzhead.hcrc&&(t.adler=N(t.adler,a.pending_buf,a.pending,0)),a.gzindex=0,a.status=69;else if(wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,3),a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q;if(69===a.status){if(a.gzhead.extra){let e=a.pending,i=(65535&a.gzhead.extra.length)-a.gzindex;for(;a.pending+i>a.pending_buf_size;){let n=a.pending_buf_size-a.pending;if(a.pending_buf.set(a.gzhead.extra.subarray(a.gzindex,a.gzindex+n),a.pending),a.pending=a.pending_buf_size,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex+=n,ct(t),0!==a.pending)return a.last_flush=-1,q;e=0,i-=n}let n=new Uint8Array(a.gzhead.extra);a.pending_buf.set(n.subarray(a.gzindex,a.gzindex+i),a.pending),a.pending+=i,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex=0}a.status=73}if(73===a.status){if(a.gzhead.name){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.name.length?255&a.gzhead.name.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),a.gzindex=0}a.status=91}if(91===a.status){if(a.gzhead.comment){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.comment.length?255&a.gzhead.comment.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i))}a.status=103}if(103===a.status){if(a.gzhead.hcrc){if(a.pending+2>a.pending_buf_size&&(ct(t),0!==a.pending))return a.last_flush=-1,q;wt(a,255&t.adler),wt(a,t.adler>>8&255),t.adler=0}if(a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(0!==t.avail_in||0!==a.lookahead||e!==P&&666!==a.status){let i=0===a.level?kt(a,e):a.strategy===at?((t,e)=>{let a;for(;;){if(0===t.lookahead&&(pt(t),0===t.lookahead)){if(e===P)return 1;break}if(t.match_length=0,a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):a.strategy===it?((t,e)=>{let a,i,n,s;const r=t.window;for(;;){if(t.lookahead<=258){if(pt(t),t.lookahead<=258&&e===P)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(n=t.strstart-1,i=r[n],i===r[++n]&&i===r[++n]&&i===r[++n])){s=t.strstart+258;do{}while(i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&n<s);t.match_length=258-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(a=j(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):zt[a.level].func(a,e);if(3!==i&&4!==i||(a.status=666),1===i||3===i)return 0===t.avail_out&&(a.last_flush=-1),q;if(2===i&&(e===Y?K(a):e!==W&&(H(a,0,0,!1),e===G&&(dt(a.head),0===a.lookahead&&(a.strstart=0,a.block_start=0,a.insert=0))),ct(t),0===t.avail_out))return a.last_flush=-1,q}return e!==X?q:a.wrap<=0?J:(2===a.wrap?(wt(a,255&t.adler),wt(a,t.adler>>8&255),wt(a,t.adler>>16&255),wt(a,t.adler>>24&255),wt(a,255&t.total_in),wt(a,t.total_in>>8&255),wt(a,t.total_in>>16&255),wt(a,t.total_in>>24&255)):(mt(a,t.adler>>>16),mt(a,65535&t.adler)),ct(t),a.wrap>0&&(a.wrap=-a.wrap),0!==a.pending?q:J)},deflateEnd:t=>{if(Et(t))return Q;const e=t.state.status;return t.state=null,113===e?lt(t,V):q},deflateSetDictionary:(t,e)=>{let a=e.length;if(Et(t))return Q;const i=t.state,n=i.wrap;if(2===n||1===n&&42!==i.status||i.lookahead)return Q;if(1===n&&(t.adler=F(t.adler,e,a,0)),i.wrap=0,a>=i.w_size){0===n&&(dt(i.head),i.strstart=0,i.block_start=0,i.insert=0);let t=new Uint8Array(i.w_size);t.set(e.subarray(a-i.w_size,a),0),e=t,a=i.w_size}const s=t.avail_in,r=t.next_in,o=t.input;for(t.avail_in=a,t.next_in=0,t.input=e,pt(i);i.lookahead>=3;){let t=i.strstart,e=i.lookahead-2;do{i.ins_h=ft(i,i.ins_h,i.window[t+3-1]),i.prev[t&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=t,t++}while(--e);i.strstart=t,i.lookahead=2,pt(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=r,t.input=o,t.avail_in=s,i.wrap=n,q},deflateInfo:"pako deflate (from Nodeca project)"};const Dt=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var Tt=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const a=e.shift();if(a){if("object"!=typeof a)throw new TypeError(a+"must be non-object");for(const e in a)Dt(a,e)&&(t[e]=a[e])}}return t},Ot=t=>{let e=0;for(let a=0,i=t.length;a<i;a++)e+=t[a].length;const a=new Uint8Array(e);for(let e=0,i=0,n=t.length;e<n;e++){let n=t[e];a.set(n,i),i+=n.length}return a};let Ft=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){Ft=!1}const Lt=new Uint8Array(256);for(let t=0;t<256;t++)Lt[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;Lt[254]=Lt[254]=1;var Nt=t=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,a,i,n,s,r=t.length,o=0;for(n=0;n<r;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),o+=a<128?1:a<2048?2:a<65536?3:4;for(e=new Uint8Array(o),s=0,n=0;s<o;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),a<128?e[s++]=a:a<2048?(e[s++]=192|a>>>6,e[s++]=128|63&a):a<65536?(e[s++]=224|a>>>12,e[s++]=128|a>>>6&63,e[s++]=128|63&a):(e[s++]=240|a>>>18,e[s++]=128|a>>>12&63,e[s++]=128|a>>>6&63,e[s++]=128|63&a);return e},It=(t,e)=>{const a=e||t.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let i,n;const s=new Array(2*a);for(n=0,i=0;i<a;){let e=t[i++];if(e<128){s[n++]=e;continue}let r=Lt[e];if(r>4)s[n++]=65533,i+=r-1;else{for(e&=2===r?31:3===r?15:7;r>1&&i<a;)e=e<<6|63&t[i++],r--;r>1?s[n++]=65533:e<65536?s[n++]=e:(e-=65536,s[n++]=55296|e>>10&1023,s[n++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&Ft)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let a="";for(let i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a})(s,n)},Bt=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let a=e-1;for(;a>=0&&128==(192&t[a]);)a--;return a<0||0===a?e:a+Lt[t[a]]>e?a:e};var Ct=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const Ht=Object.prototype.toString,{Z_NO_FLUSH:Mt,Z_SYNC_FLUSH:jt,Z_FULL_FLUSH:Kt,Z_FINISH:Pt,Z_OK:Yt,Z_STREAM_END:Gt,Z_DEFAULT_COMPRESSION:Xt,Z_DEFAULT_STRATEGY:Wt,Z_DEFLATED:qt}=B;function Jt(t){this.options=Tt({level:Xt,method:qt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Wt},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=St.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==Yt)throw new Error(I[a]);if(e.header&&St.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t="string"==typeof e.dictionary?Nt(e.dictionary):"[object ArrayBuffer]"===Ht.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,a=St.deflateSetDictionary(this.strm,t),a!==Yt)throw new Error(I[a]);this._dict_set=!0}}function Qt(t,e){const a=new Jt(e);if(a.push(t,!0),a.err)throw a.msg||I[a.err];return a.result}Jt.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize;let n,s;if(this.ended)return!1;for(s=e===~~e?e:!0===e?Pt:Mt,"string"==typeof t?a.input=Nt(t):"[object ArrayBuffer]"===Ht.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(s===jt||s===Kt)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if(n=St.deflate(a,s),n===Gt)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),n=St.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===Yt;if(0!==a.avail_out){if(s>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},Jt.prototype.onData=function(t){this.chunks.push(t)},Jt.prototype.onEnd=function(t){t===Yt&&(this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Vt={Deflate:Jt,deflate:Qt,deflateRaw:function(t,e){return(e=e||{}).raw=!0,Qt(t,e)},gzip:function(t,e){return(e=e||{}).gzip=!0,Qt(t,e)},constants:B};var $t=function(t,e){let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z,A;const E=t.state;a=t.next_in,z=t.input,i=a+(t.avail_in-5),n=t.next_out,A=t.output,s=n-(e-t.avail_out),r=n+(t.avail_out-257),o=E.dmax,l=E.wsize,h=E.whave,d=E.wnext,_=E.window,f=E.hold,c=E.bits,u=E.lencode,w=E.distcode,m=(1<<E.lenbits)-1,b=(1<<E.distbits)-1;t:do{c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=u[f&m];e:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,0===p)A[n++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=u[(65535&g)+(f&(1<<p)-1)];continue e}if(32&p){E.mode=16191;break t}t.msg="invalid literal/length code",E.mode=16209;break t}k=65535&g,p&=15,p&&(c<p&&(f+=z[a++]<<c,c+=8),k+=f&(1<<p)-1,f>>>=p,c-=p),c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=w[f&b];a:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=w[(65535&g)+(f&(1<<p)-1)];continue a}t.msg="invalid distance code",E.mode=16209;break t}if(v=65535&g,p&=15,c<p&&(f+=z[a++]<<c,c+=8,c<p&&(f+=z[a++]<<c,c+=8)),v+=f&(1<<p)-1,v>o){t.msg="invalid distance too far back",E.mode=16209;break t}if(f>>>=p,c-=p,p=n-s,v>p){if(p=v-p,p>h&&E.sane){t.msg="invalid distance too far back",E.mode=16209;break t}if(y=0,x=_,0===d){if(y+=l-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}else if(d<p){if(y+=l+d-p,p-=d,p<k){k-=p;do{A[n++]=_[y++]}while(--p);if(y=0,d<k){p=d,k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}}else if(y+=d-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}for(;k>2;)A[n++]=x[y++],A[n++]=x[y++],A[n++]=x[y++],k-=3;k&&(A[n++]=x[y++],k>1&&(A[n++]=x[y++]))}else{y=n-v;do{A[n++]=A[y++],A[n++]=A[y++],A[n++]=A[y++],k-=3}while(k>2);k&&(A[n++]=A[y++],k>1&&(A[n++]=A[y++]))}break}}break}}while(a<i&&n<r);k=c>>3,a-=k,c-=k<<3,f&=(1<<c)-1,t.next_in=a,t.next_out=n,t.avail_in=a<i?i-a+5:5-(a-i),t.avail_out=n<r?r-n+257:257-(n-r),E.hold=f,E.bits=c};const te=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ee=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),ae=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ie=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ne=(t,e,a,i,n,s,r,o)=>{const l=o.bits;let h,d,_,f,c,u,w=0,m=0,b=0,g=0,p=0,k=0,v=0,y=0,x=0,z=0,A=null;const E=new Uint16Array(16),R=new Uint16Array(16);let Z,U,S,D=null;for(w=0;w<=15;w++)E[w]=0;for(m=0;m<i;m++)E[e[a+m]]++;for(p=l,g=15;g>=1&&0===E[g];g--);if(p>g&&(p=g),0===g)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(b=1;b<g&&0===E[b];b++);for(p<b&&(p=b),y=1,w=1;w<=15;w++)if(y<<=1,y-=E[w],y<0)return-1;if(y>0&&(0===t||1!==g))return-1;for(R[1]=0,w=1;w<15;w++)R[w+1]=R[w]+E[w];for(m=0;m<i;m++)0!==e[a+m]&&(r[R[e[a+m]]++]=m);if(0===t?(A=D=r,u=20):1===t?(A=te,D=ee,u=257):(A=ae,D=ie,u=0),z=0,m=0,w=b,c=s,k=p,v=0,_=-1,x=1<<p,f=x-1,1===t&&x>852||2===t&&x>592)return 1;for(;;){Z=w-v,r[m]+1<u?(U=0,S=r[m]):r[m]>=u?(U=D[r[m]-u],S=A[r[m]-u]):(U=96,S=0),h=1<<w-v,d=1<<k,b=d;do{d-=h,n[c+(z>>v)+d]=Z<<24|U<<16|S|0}while(0!==d);for(h=1<<w-1;z&h;)h>>=1;if(0!==h?(z&=h-1,z+=h):z=0,m++,0==--E[w]){if(w===g)break;w=e[a+r[m]]}if(w>p&&(z&f)!==_){for(0===v&&(v=p),c+=b,k=w-v,y=1<<k;k+v<g&&(y-=E[k+v],!(y<=0));)k++,y<<=1;if(x+=1<<k,1===t&&x>852||2===t&&x>592)return 1;_=z&f,n[_]=p<<24|k<<16|c-s|0}}return 0!==z&&(n[c+z]=w-v<<24|64<<16|0),o.bits=p,0};const{Z_FINISH:se,Z_BLOCK:re,Z_TREES:oe,Z_OK:le,Z_STREAM_END:he,Z_NEED_DICT:de,Z_STREAM_ERROR:_e,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce,Z_BUF_ERROR:ue,Z_DEFLATED:we}=B,me=16209,be=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function ge(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const pe=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<16180||e.mode>16211?1:0},ke=t=>{if(pe(t))return _e;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=16180,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,le},ve=t=>{if(pe(t))return _e;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,ke(t)},ye=(t,e)=>{let a;if(pe(t))return _e;const i=t.state;return e<0?(a=0,e=-e):(a=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?_e:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,ve(t))},xe=(t,e)=>{if(!t)return _e;const a=new ge;t.state=a,a.strm=t,a.window=null,a.mode=16180;const i=ye(t,e);return i!==le&&(t.state=null),i};let ze,Ae,Ee=!0;const Re=t=>{if(Ee){ze=new Int32Array(512),Ae=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(ne(1,t.lens,0,288,ze,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;ne(2,t.lens,0,32,Ae,0,t.work,{bits:5}),Ee=!1}t.lencode=ze,t.lenbits=9,t.distcode=Ae,t.distbits=5},Ze=(t,e,a,i)=>{let n;const s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(e.subarray(a-s.wsize,a),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>i&&(n=i),s.window.set(e.subarray(a-i,a-i+n),s.wnext),(i-=n)?(s.window.set(e.subarray(a-i,a),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0};var Ue={inflateReset:ve,inflateReset2:ye,inflateResetKeep:ke,inflateInit:t=>xe(t,15),inflateInit2:xe,inflate:(t,e)=>{let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z=0;const A=new Uint8Array(4);let E,R;const Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(pe(t)||!t.output||!t.input&&0!==t.avail_in)return _e;a=t.state,16191===a.mode&&(a.mode=16192),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,_=o,f=l,x=le;t:for(;;)switch(a.mode){case 16180:if(0===a.wrap){a.mode=16192;break}for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(2&a.wrap&&35615===h){0===a.wbits&&(a.wbits=15),a.check=0,A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0),h=0,d=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg="incorrect header check",a.mode=me;break}if((15&h)!==we){t.msg="unknown compression method",a.mode=me;break}if(h>>>=4,d-=4,y=8+(15&h),0===a.wbits&&(a.wbits=y),y>15||y>a.wbits){t.msg="invalid window size",a.mode=me;break}a.dmax=1<<a.wbits,a.flags=0,t.adler=a.check=1,a.mode=512&h?16189:16191,h=0,d=0;break;case 16181:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.flags=h,(255&a.flags)!==we){t.msg="unknown compression method",a.mode=me;break}if(57344&a.flags){t.msg="unknown header flags set",a.mode=me;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16182;case 16182:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.time=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,A[2]=h>>>16&255,A[3]=h>>>24&255,a.check=N(a.check,A,4,0)),h=0,d=0,a.mode=16183;case 16183:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16184;case 16184:if(1024&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(c=a.length,c>o&&(c=o),c&&(a.head&&(y=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(s,s+c),y)),512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,a.length-=c),a.length))break t;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.name+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.comment+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(65535&a.check)){t.msg="header crc mismatch",a.mode=me;break}h=0,d=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=16191;break;case 16189:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}t.adler=a.check=be(h),h=0,d=0,a.mode=16190;case 16190:if(0===a.havedict)return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,de;t.adler=a.check=1,a.mode=16191;case 16191:if(e===re||e===oe)break t;case 16192:if(a.last){h>>>=7&d,d-=7&d,a.mode=16206;break}for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}switch(a.last=1&h,h>>>=1,d-=1,3&h){case 0:a.mode=16193;break;case 1:if(Re(a),a.mode=16199,e===oe){h>>>=2,d-=2;break t}break;case 2:a.mode=16196;break;case 3:t.msg="invalid block type",a.mode=me}h>>>=2,d-=2;break;case 16193:for(h>>>=7&d,d-=7&d;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg="invalid stored block lengths",a.mode=me;break}if(a.length=65535&h,h=0,d=0,a.mode=16194,e===oe)break t;case 16194:a.mode=16195;case 16195:if(c=a.length,c){if(c>o&&(c=o),c>l&&(c=l),0===c)break t;n.set(i.subarray(s,s+c),r),o-=c,s+=c,l-=c,r+=c,a.length-=c;break}a.mode=16191;break;case 16196:for(;d<14;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.nlen=257+(31&h),h>>>=5,d-=5,a.ndist=1+(31&h),h>>>=5,d-=5,a.ncode=4+(15&h),h>>>=4,d-=4,a.nlen>286||a.ndist>30){t.msg="too many length or distance symbols",a.mode=me;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.lens[Z[a.have++]]=7&h,h>>>=3,d-=3}for(;a.have<19;)a.lens[Z[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,E={bits:a.lenbits},x=ne(0,a.lens,0,19,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg="invalid code lengths set",a.mode=me;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(g<16)h>>>=m,d-=m,a.lens[a.have++]=g;else{if(16===g){for(R=m+2;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(h>>>=m,d-=m,0===a.have){t.msg="invalid bit length repeat",a.mode=me;break}y=a.lens[a.have-1],c=3+(3&h),h>>>=2,d-=2}else if(17===g){for(R=m+3;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=3+(7&h),h>>>=3,d-=3}else{for(R=m+7;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=11+(127&h),h>>>=7,d-=7}if(a.have+c>a.nlen+a.ndist){t.msg="invalid bit length repeat",a.mode=me;break}for(;c--;)a.lens[a.have++]=y}}if(a.mode===me)break;if(0===a.lens[256]){t.msg="invalid code -- missing end-of-block",a.mode=me;break}if(a.lenbits=9,E={bits:a.lenbits},x=ne(1,a.lens,0,a.nlen,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg="invalid literal/lengths set",a.mode=me;break}if(a.distbits=6,a.distcode=a.distdyn,E={bits:a.distbits},x=ne(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,E),a.distbits=E.bits,x){t.msg="invalid distances set",a.mode=me;break}if(a.mode=16199,e===oe)break t;case 16199:a.mode=16200;case 16200:if(o>=6&&l>=258){t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,$t(t,f),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,16191===a.mode&&(a.back=-1);break}for(a.back=0;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(b&&0==(240&b)){for(p=m,k=b,v=g;z=a.lencode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,a.length=g,0===b){a.mode=16205;break}if(32&b){a.back=-1,a.mode=16191;break}if(64&b){t.msg="invalid literal/length code",a.mode=me;break}a.extra=15&b,a.mode=16201;case 16201:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;z=a.distcode[h&(1<<a.distbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(0==(240&b)){for(p=m,k=b,v=g;z=a.distcode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,64&b){t.msg="invalid distance code",a.mode=me;break}a.offset=g,a.extra=15&b,a.mode=16203;case 16203:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg="invalid distance too far back",a.mode=me;break}a.mode=16204;case 16204:if(0===l)break t;if(c=f-l,a.offset>c){if(c=a.offset-c,c>a.whave&&a.sane){t.msg="invalid distance too far back",a.mode=me;break}c>a.wnext?(c-=a.wnext,u=a.wsize-c):u=a.wnext-c,c>a.length&&(c=a.length),w=a.window}else w=n,u=r-a.offset,c=a.length;c>l&&(c=l),l-=c,a.length-=c;do{n[r++]=w[u++]}while(--c);0===a.length&&(a.mode=16200);break;case 16205:if(0===l)break t;n[r++]=a.length,l--,a.mode=16200;break;case 16206:if(a.wrap){for(;d<32;){if(0===o)break t;o--,h|=i[s++]<<d,d+=8}if(f-=l,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,r-f):F(a.check,n,f,r-f)),f=l,4&a.wrap&&(a.flags?h:be(h))!==a.check){t.msg="incorrect data check",a.mode=me;break}h=0,d=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(4294967295&a.total)){t.msg="incorrect length check",a.mode=me;break}h=0,d=0}a.mode=16208;case 16208:x=he;break t;case me:x=fe;break t;case 16210:return ce;default:return _e}return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,(a.wsize||f!==t.avail_out&&a.mode<me&&(a.mode<16206||e!==se))&&Ze(t,t.output,t.next_out,f-t.avail_out),_-=t.avail_in,f-=t.avail_out,t.total_in+=_,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,t.next_out-f):F(a.check,n,f,t.next_out-f)),t.data_type=a.bits+(a.last?64:0)+(16191===a.mode?128:0)+(16199===a.mode||16194===a.mode?256:0),(0===_&&0===f||e===se)&&x===le&&(x=ue),x},inflateEnd:t=>{if(pe(t))return _e;let e=t.state;return e.window&&(e.window=null),t.state=null,le},inflateGetHeader:(t,e)=>{if(pe(t))return _e;const a=t.state;return 0==(2&a.wrap)?_e:(a.head=e,e.done=!1,le)},inflateSetDictionary:(t,e)=>{const a=e.length;let i,n,s;return pe(t)?_e:(i=t.state,0!==i.wrap&&16190!==i.mode?_e:16190===i.mode&&(n=1,n=F(n,e,a,0),n!==i.check)?fe:(s=Ze(t,e,a,a),s?(i.mode=16210,ce):(i.havedict=1,le)))},inflateInfo:"pako inflate (from Nodeca project)"};var Se=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const De=Object.prototype.toString,{Z_NO_FLUSH:Te,Z_FINISH:Oe,Z_OK:Fe,Z_STREAM_END:Le,Z_NEED_DICT:Ne,Z_STREAM_ERROR:Ie,Z_DATA_ERROR:Be,Z_MEM_ERROR:Ce}=B;function He(t){this.options=Tt({chunkSize:65536,windowBits:15,to:""},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=Ue.inflateInit2(this.strm,e.windowBits);if(a!==Fe)throw new Error(I[a]);if(this.header=new Se,Ue.inflateGetHeader(this.strm,this.header),e.dictionary&&("string"==typeof e.dictionary?e.dictionary=Nt(e.dictionary):"[object ArrayBuffer]"===De.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=Ue.inflateSetDictionary(this.strm,e.dictionary),a!==Fe)))throw new Error(I[a])}He.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize,n=this.options.dictionary;let s,r,o;if(this.ended)return!1;for(r=e===~~e?e:!0===e?Oe:Te,"[object ArrayBuffer]"===De.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),s=Ue.inflate(a,r),s===Ne&&n&&(s=Ue.inflateSetDictionary(a,n),s===Fe?s=Ue.inflate(a,r):s===Be&&(s=Ne));a.avail_in>0&&s===Le&&a.state.wrap>0&&0!==t[a.next_in];)Ue.inflateReset(a),s=Ue.inflate(a,r);switch(s){case Ie:case Be:case Ne:case Ce:return this.onEnd(s),this.ended=!0,!1}if(o=a.avail_out,a.next_out&&(0===a.avail_out||s===Le))if("string"===this.options.to){let t=Bt(a.output,a.next_out),e=a.next_out-t,n=It(a.output,t);a.next_out=e,a.avail_out=i-e,e&&a.output.set(a.output.subarray(t,t+e),0),this.onData(n)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(s!==Fe||0!==o){if(s===Le)return s=Ue.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},He.prototype.onData=function(t){this.chunks.push(t)},He.prototype.onEnd=function(t){t===Fe&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};const{Deflate:Me,deflate:je,deflateRaw:Ke,gzip:Pe}=Vt;var Ye=Me,Ge=je,Xe=B;const We=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error("Adding invalid event");const e=this._hasEvents?",":"";this.deflate.push(e+t,Xe.Z_SYNC_FLUSH),this._hasEvents=!0}finish(){if(this.deflate.push("]",Xe.Z_FINISH),this.deflate.err)throw this.deflate.err;const t=this.deflate.result;return this._init(),t}_init(){this._hasEvents=!1,this.deflate=new Ye,this.deflate.push("[",Xe.Z_NO_FLUSH)}},qe={clear:()=>{We.clear()},addEvent:t=>We.addEvent(t),finish:()=>We.finish(),compress:t=>function(t){return Ge(t)}(t)};addEventListener("message",(function(t){const e=t.data.method,a=t.data.id,i=t.data.arg;if(e in qe&&"function"==typeof qe[e])try{const t=qe[e](i);postMessage({id:a,method:e,success:!0,response:t})}catch(t){postMessage({id:a,method:e,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:"init",success:!0,response:void 0});`;

  function dl() {
    const t = new Blob([ul]);
    return URL.createObjectURL(t)
  }

  function Rr(t) {
    return t > 9999999999 ? t : t * 1e3
  }
  class oa {
    constructor() {
      this.events = []
    }
    get hasEvents() {
      return this.events.length > 0
    }
    get type() {
      return "sync"
    }
    destroy() {
      this.events = []
    }
    async addEvent(e) {
      this.events.push(e)
    }
    finish() {
      return new Promise(e => {
        const n = this.events;
        this.events = [], e(JSON.stringify(n))
      })
    }
    clear() {
      this.events = []
    }
    getEarliestTimestamp() {
      const e = this.events.map(n => n.timestamp).sort()[0];
      return e ? Rr(e) : null
    }
  }
  class ll {
    constructor(e) {
      this._worker = e, this._id = 0
    }
    ensureReady() {
      return this._ensureReadyPromise ? this._ensureReadyPromise : (this._ensureReadyPromise = new Promise((e, n) => {
        this._worker.addEventListener("message", ({
          data: r
        }) => {
          r.success ? e() : n()
        }, {
          once: !0
        }), this._worker.addEventListener("error", r => {
          n(r)
        }, {
          once: !0
        })
      }), this._ensureReadyPromise)
    }
    destroy() {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Replay] Destroying compression worker"), this
        ._worker.terminate()
    }
    postMessage(e, n) {
      const r = this._getAndIncrementId();
      return new Promise((i, s) => {
        const a = ({
          data: o
        }) => {
          const c = o;
          if (c.method === e && c.id === r) {
            if (this._worker.removeEventListener("message", a), !c.success) {
              (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error("[Replay]", c.response), s(
                new Error("Error in compression worker"));
              return
            }
            i(c.response)
          }
        };
        this._worker.addEventListener("message", a), this._worker.postMessage({
          id: r,
          method: e,
          arg: n
        })
      })
    }
    _getAndIncrementId() {
      return this._id++
    }
  }
  class fl {
    constructor(e) {
      this._worker = new ll(e), this._earliestTimestamp = null
    }
    get hasEvents() {
      return !!this._earliestTimestamp
    }
    get type() {
      return "worker"
    }
    ensureReady() {
      return this._worker.ensureReady()
    }
    destroy() {
      this._worker.destroy()
    }
    addEvent(e) {
      const n = Rr(e.timestamp);
      return (!this._earliestTimestamp || n < this._earliestTimestamp) && (this._earliestTimestamp = n), this
        ._sendEventToWorker(e)
    }
    finish() {
      return this._finishRequest()
    }
    clear() {
      this._earliestTimestamp = null, this._worker.postMessage("clear")
    }
    getEarliestTimestamp() {
      return this._earliestTimestamp
    }
    _sendEventToWorker(e) {
      return this._worker.postMessage("addEvent", JSON.stringify(e))
    }
    async _finishRequest() {
      const e = await this._worker.postMessage("finish");
      return this._earliestTimestamp = null, e
    }
  }
  class _l {
    constructor(e) {
      this._fallback = new oa, this._compression = new fl(e), this._used = this._fallback, this
        ._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded()
    }
    get type() {
      return this._used.type
    }
    get hasEvents() {
      return this._used.hasEvents
    }
    destroy() {
      this._fallback.destroy(), this._compression.destroy()
    }
    clear() {
      return this._used.clear()
    }
    getEarliestTimestamp() {
      return this._used.getEarliestTimestamp()
    }
    addEvent(e) {
      return this._used.addEvent(e)
    }
    async finish() {
      return await this.ensureWorkerIsLoaded(), this._used.finish()
    }
    ensureWorkerIsLoaded() {
      return this._ensureWorkerIsLoadedPromise
    }
    async _ensureWorkerIsLoaded() {
      try {
        await this._compression.ensureReady()
      } catch (e) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
          "[Replay] Failed to load the compression worker, falling back to simple buffer");
        return
      }
      await this._switchToCompressionWorker()
    }
    async _switchToCompressionWorker() {
      const {
        events: e
      } = this._fallback, n = [];
      for (const r of e) n.push(this._compression.addEvent(r));
      this._used = this._compression;
      try {
        await Promise.all(n)
      } catch (r) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
          "[Replay] Failed to add events when switching buffers.", r)
      }
    }
  }

  function hl({
    useCompression: t
  }) {
    if (t && window.Worker) try {
      const e = dl();
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Replay] Using compression worker");
      const n = new Worker(e);
      return new _l(n)
    } catch (e) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Replay] Failed to create compression worker")
    }
    return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Replay] Using simple buffer"), new oa
  }

  function pl(t) {
    ml(), t.session = void 0
  }

  function ml() {
    if ("sessionStorage" in G) try {
      G.sessionStorage.removeItem(Tr)
    } catch (e) {}
  }

  function rr(t, e, n = +new Date) {
    return t === null || e === void 0 || e < 0 ? !0 : e === 0 ? !1 : t + e <= n
  }

  function ca(t, e, n = +new Date) {
    return rr(t.started, e.maxSessionLife, n) || rr(t.lastActivity, e.sessionIdleExpire, n)
  }

  function ua(t) {
    return t === void 0 ? !1 : Math.random() < t
  }

  function kr(t) {
    if ("sessionStorage" in G) try {
      G.sessionStorage.setItem(Tr, JSON.stringify(t))
    } catch (n) {}
  }

  function Nr(t) {
    const e = Date.now(),
      n = t.id || lt(),
      r = t.started || e,
      i = t.lastActivity || e,
      s = t.segmentId || 0,
      a = t.sampled;
    return {
      id: n,
      started: r,
      lastActivity: i,
      segmentId: s,
      sampled: a,
      shouldRefresh: !0
    }
  }

  function gl(t, e) {
    return ua(t) ? "session" : e ? "buffer" : !1
  }

  function yl({
    sessionSampleRate: t,
    allowBuffering: e,
    stickySession: n = !1
  }) {
    const r = gl(t, e),
      i = Nr({
        sampled: r
      });
    return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(`[Replay] Creating new session: ${i.id}`), n &&
      kr(i), i
  }

  function El() {
    if (!("sessionStorage" in G)) return null;
    try {
      const e = G.sessionStorage.getItem(Tr);
      if (!e) return null;
      const n = JSON.parse(e);
      return Nr(n)
    } catch (e) {
      return null
    }
  }

  function Bn({
    timeouts: t,
    currentSession: e,
    stickySession: n,
    sessionSampleRate: r,
    allowBuffering: i
  }) {
    const s = e || n && El();
    if (s)
      if (ca(s, t))
        if (s.shouldRefresh)(typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
          "[Replay] Session has expired");
        else return {
          type: "new",
          session: Nr({
            sampled: !1
          })
        };
    else return {
      type: "saved",
      session: s
    };
    return {
      type: "new",
      session: yl({
        stickySession: n,
        sessionSampleRate: r,
        allowBuffering: i
      })
    }
  }
  async function Be(t, e, n) {
    if (!t.eventBuffer || t.isPaused() || Rr(e.timestamp) + t.timeouts.sessionIdlePause < Date.now()) return null;
    try {
      return n && t.eventBuffer.clear(), await t.eventBuffer.addEvent(e)
    } catch (i) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(i), await t.stop("addEvent");
      const s = g().getClient();
      s && s.recordDroppedEvent("internal_sdk_error", "replay")
    }
  }

  function _n(t) {
    return !t.type
  }

  function ir(t) {
    return t.type === "transaction"
  }

  function Sl(t) {
    return t.type === "replay_event"
  }

  function da(t) {
    const e = bl();
    return (n, r) => {
      if (!_n(n) && !ir(n)) return;
      const i = r && r.statusCode;
      if (!(e && (!i || i < 200 || i >= 300))) {
        if (ir(n) && n.contexts && n.contexts.trace && n.contexts.trace.trace_id) {
          t.getContext().traceIds.add(n.contexts.trace.trace_id);
          return
        }
        _n(n) && (n.event_id && t.getContext().errorIds.add(n.event_id), t.recordingMode === "buffer" && n.tags && n
          .tags.replayId && setTimeout(() => {
            t.sendBufferedReplayOrFlush()
          }))
      }
    }
  }

  function bl() {
    const t = g().getClient();
    if (!t) return !1;
    const e = t.getTransport();
    return e && e.send.__sentry__baseTransport__ || !1
  }
  var hn;
  (function(t) {
    t[t.Document = 0] = "Document", t[t.DocumentType = 1] = "DocumentType", t[t.Element = 2] = "Element", t[t.Text =
      3] = "Text", t[t.CDATA = 4] = "CDATA", t[t.Comment = 5] = "Comment"
  })(hn || (hn = {}));

  function Gt(t) {
    return {
      timestamp: Date.now() / 1e3,
      type: "default",
      ...t
    }
  }

  function la(t, e) {
    e.category !== "sentry.transaction" && (["ui.click", "ui.input"].includes(e.category) ? t.triggerUserActivity() : t
      .checkAndHandleExpiredSession(), t.addUpdate(() => (Be(t, {
        type: L.Custom,
        timestamp: (e.timestamp || 0) * 1e3,
        data: {
          tag: "breadcrumb",
          payload: pt(e, 10, 1e3)
        }
      }), e.category === "console")))
  }
  const wl = new Set(["id", "class", "aria-label", "role", "name", "alt", "title", "data-test-id", "data-testid"]);

  function Tl(t) {
    const e = {};
    for (const n in t)
      if (wl.has(n)) {
        let r = n;
        (n === "data-testid" || n === "data-test-id") && (r = "testId"), e[r] = t[n]
      } return e
  }
  const vl = t => e => {
    if (!t.isEnabled()) return;
    const n = Rl(e);
    n && la(t, n)
  };

  function Rl(t) {
    let e, n;
    const r = t.name === "click";
    try {
      n = r ? Nl(t.event) : fa(t.event), e = Pt(n, {
        maxStringLength: 200
      })
    } catch (s) {
      e = "<unknown>"
    }
    const i = n && "__sn" in n && n.__sn.type === hn.Element ? n.__sn : null;
    return Gt({
      category: `ui.${t.name}`,
      message: e,
      data: i ? {
        nodeId: i.id,
        node: {
          id: i.id,
          tagName: i.tagName,
          textContent: n ? Array.from(n.childNodes).map(s => "__sn" in s && s.__sn.type === hn.Text && s.__sn
            .textContent).filter(Boolean).map(s => s.trim()).join("") : "",
          attributes: Tl(i.attributes)
        }
      } : {}
    })
  }

  function fa(t) {
    return Dl(t) ? t.target : t
  }
  const kl = "button,a";

  function Nl(t) {
    const e = fa(t);
    return !e || !(e instanceof Element) ? e : e.closest(kl) || e
  }

  function Dl(t) {
    return !!t.target
  }

  function xl(t, e) {
    return t.type || !t.exception || !t.exception.values || !t.exception.values.length ? !1 : e.originalException && e
      .originalException.__rrweb__ ? !0 : t.exception.values.some(n => !n.stacktrace || !n.stacktrace.frames || !n
        .stacktrace.frames.length ? !1 : n.stacktrace.frames.some(r => r.filename && r.filename.includes("/rrweb/src/"))
      )
  }

  function Il(t, e) {
    return t.recordingMode !== "buffer" || e.message === vr || !e.exception || e.type ? !1 : ua(t.getOptions()
      .errorSampleRate)
  }

  function Ol(t, e = !1) {
    const n = e ? da(t) : void 0;
    return (r, i) => {
      if (Sl(r)) return delete r.breadcrumbs, r;
      if (!_n(r) && !ir(r)) return r;
      if (xl(r, i) && !t.getOptions()._experiments.captureExceptions) return (typeof __SENTRY_DEBUG__ > "u" ||
        __SENTRY_DEBUG__) && f.log("[Replay] Ignoring error from rrweb internals", r), null;
      if ((Il(t, r) || t.recordingMode === "session") && (r.tags = {
          ...r.tags,
          replayId: t.getSessionId()
        }), (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && t.getOptions()._experiments.traceInternals && _n(
          r)) {
        const o = Cl(r);
        Al({
          message: `Tagging event (${r.event_id}) - ${r.message} - ${o.type}: ${o.value}`
        })
      }
      return n && n(r, {
        statusCode: 200
      }), r
    }
  }

  function Al(t) {
    const {
      category: e,
      level: n,
      message: r,
      ...i
    } = t;
    hs({
      category: e || "console",
      level: n || "debug",
      message: `[debug]: ${r}`,
      ...i
    })
  }

  function Cl(t) {
    return {
      type: "Unknown",
      value: "n/a",
      ...t.exception && t.exception.values && t.exception.values[0]
    }
  }

  function Tn(t, e) {
    return e.map(({
      type: n,
      start: r,
      end: i,
      name: s,
      data: a
    }) => Be(t, {
      type: L.Custom,
      timestamp: r,
      data: {
        tag: "performanceSpan",
        payload: {
          op: n,
          description: s,
          startTimestamp: r,
          endTimestamp: i,
          data: a
        }
      }
    }))
  }

  function Ul(t) {
    const {
      from: e,
      to: n
    } = t, r = Date.now() / 1e3;
    return {
      type: "navigation.push",
      start: r,
      end: r,
      name: n,
      data: {
        previous: e
      }
    }
  }

  function Bl(t) {
    return e => {
      if (!t.isEnabled()) return;
      const n = Ul(e);
      n !== null && (t.getContext().urls.push(n.name), t.triggerUserActivity(), t.addUpdate(() => (Tn(t, [n]), !1)))
    }
  }

  function Ll(t, e) {
    return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && t.getOptions()._experiments.traceInternals ? !1 : Ml(
      e)
  }

  function Ml(t) {
    const e = g().getClient(),
      n = e && e.getDsn();
    return n ? t.includes(n.host) : !1
  }

  function vn(t, e) {
    t.isEnabled() && e !== null && (Ll(t, e.name) || t.addUpdate(() => (Tn(t, [e]), !0)))
  }

  function Gl(t) {
    const {
      startTimestamp: e,
      endTimestamp: n,
      fetchData: r,
      response: i
    } = t;
    if (!n) return null;
    const {
      method: s,
      url: a
    } = r;
    return {
      type: "resource.fetch",
      start: e / 1e3,
      end: n / 1e3,
      name: a,
      data: {
        method: s,
        statusCode: i && i.status
      }
    }
  }

  function Pl(t) {
    return e => {
      if (!t.isEnabled()) return;
      const n = Gl(e);
      vn(t, n)
    }
  }

  function Yl(t) {
    const {
      startTimestamp: e,
      endTimestamp: n,
      xhr: r
    } = t, i = r[Rt];
    if (!e || !n || !i) return null;
    const {
      method: s,
      url: a,
      status_code: o
    } = i;
    return a === void 0 ? null : {
      type: "resource.xhr",
      name: a,
      start: e / 1e3,
      end: n / 1e3,
      data: {
        method: s,
        statusCode: o
      }
    }
  }

  function Fl(t) {
    return e => {
      if (!t.isEnabled()) return;
      const n = Yl(e);
      vn(t, n)
    }
  }
  const kt = 10,
    Dr = 11,
    sr = 12,
    wt = 13,
    ar = 14,
    re = 15,
    Et = 20,
    st = 21,
    or = 22,
    ie = 23,
    _a = ["true", "false", "null"];

  function zl(t, e) {
    if (!e.length) return t;
    let n = t;
    const r = e.length - 1,
      i = e[r];
    n = $l(n, i);
    for (let s = r; s >= 0; s--) switch (e[s]) {
      case kt:
        n = `${n}}`;
        break;
      case Et:
        n = `${n}]`;
        break
    }
    return n
  }

  function $l(t, e) {
    switch (e) {
      case kt:
        return `${t}"~~":"~~"`;
      case Dr:
        return `${t}:"~~"`;
      case sr:
        return `${t}~~":"~~"`;
      case wt:
        return Wl(t);
      case ar:
        return `${t}~~"`;
      case re:
        return `${t},"~~":"~~"`;
      case Et:
        return `${t}"~~"`;
      case st:
        return Hl(t);
      case or:
        return `${t}~~"`;
      case ie:
        return `${t},"~~"`
    }
    return t
  }

  function Hl(t) {
    const e = jl(t);
    if (e > -1) {
      const n = t.slice(e + 1);
      return _a.includes(n.trim()) ? `${t},"~~"` : `${t.slice(0,e+1)}"~~"`
    }
    return t
  }

  function jl(t) {
    for (let e = t.length - 1; e >= 0; e--) {
      const n = t[e];
      if (n === "," || n === "[") return e
    }
    return -1
  }

  function Wl(t) {
    const e = t.lastIndexOf(":"),
      n = t.slice(e + 1);
    return _a.includes(n.trim()) ? `${t},"~~":"~~"` : `${t.slice(0,e+1)}"~~"`
  }

  function ql(t) {
    const e = [];
    for (let n = 0; n < t.length; n++) Zl(e, t, n);
    return e
  }

  function Zl(t, e, n) {
    const r = t[t.length - 1],
      i = e[n];
    if (!/\s/.test(i)) {
      if (i === '"' && !ha(e, n)) {
        Vl(t, r);
        return
      }
      switch (i) {
        case "{":
          Xl(t, r);
          break;
        case "[":
          Kl(t, r);
          break;
        case ":":
          Jl(t, r);
          break;
        case ",":
          Ql(t, r);
          break;
        case "}":
          tf(t, r);
          break;
        case "]":
          ef(t, r);
          break
      }
    }
  }

  function Vl(t, e) {
    if (e === ar) {
      t.pop(), t.push(re);
      return
    }
    if (e === or) {
      t.pop(), t.push(ie);
      return
    }
    if (e === wt) {
      t.push(ar);
      return
    }
    if (e === st) {
      t.push(or);
      return
    }
    if (e === kt) {
      t.push(sr);
      return
    }
    if (e === sr) {
      t.pop(), t.push(Dr);
      return
    }
  }

  function Xl(t, e) {
    if (!e) {
      t.push(kt);
      return
    }
    if (e === wt) {
      t.push(kt);
      return
    }
    if (e === st && t.push(kt), e === Et) {
      t.push(kt);
      return
    }
  }

  function Kl(t, e) {
    if (!e) {
      t.push(Et), t.push(st);
      return
    }
    if (e === wt) {
      t.push(Et), t.push(st);
      return
    }
    if (e === st && (t.push(Et), t.push(st)), e === Et) {
      t.push(Et), t.push(st);
      return
    }
  }

  function Jl(t, e) {
    e === Dr && (t.pop(), t.push(wt))
  }

  function Ql(t, e) {
    if (e === wt) {
      t.pop();
      return
    }
    if (e === re) {
      t.pop(), t.pop();
      return
    }
    if (e !== st && e === ie) {
      t.pop();
      return
    }
  }

  function tf(t, e) {
    e === kt && t.pop(), e === wt && (t.pop(), t.pop()), e === re && (t.pop(), t.pop(), t.pop()), t[t.length - 1] ===
      wt && t.push(re), t[t.length - 1] === st && t.push(ie)
  }

  function ef(t, e) {
    e === Et && t.pop(), e === st && (t.pop(), t.pop()), e === ie && (t.pop(), t.pop(), t.pop()), t[t.length - 1] ===
      wt && t.push(re), t[t.length - 1] === st && t.push(ie)
  }

  function ha(t, e) {
    return t[e - 1] === "\\" && !ha(t, e - 1)
  }

  function pa(t) {
    const e = ql(t);
    return zl(t, e)
  }

  function pn(t, e) {
    if (t) try {
      if (typeof t == "string") return e.encode(t).length;
      if (t instanceof URLSearchParams) return e.encode(t.toString()).length;
      if (t instanceof FormData) {
        const n = Ea(t);
        return e.encode(n).length
      }
      if (t instanceof Blob) return t.size;
      if (t instanceof ArrayBuffer) return t.byteLength
    } catch (n) {}
  }

  function ma(t) {
    if (!t) return;
    const e = parseInt(t, 10);
    return isNaN(e) ? void 0 : e
  }

  function ga(t) {
    if (typeof t == "string") return t;
    if (t instanceof URLSearchParams) return t.toString();
    if (t instanceof FormData) return Ea(t)
  }

  function ya(t, e) {
    if (!e) return null;
    const {
      startTimestamp: n,
      endTimestamp: r,
      url: i,
      method: s,
      statusCode: a,
      request: o,
      response: c
    } = e;
    return {
      type: t,
      start: n / 1e3,
      end: r / 1e3,
      name: i,
      data: ut({
        method: s,
        statusCode: a,
        request: o,
        response: c
      })
    }
  }

  function De(t) {
    return {
      headers: {},
      size: t,
      _meta: {
        warnings: ["URL_SKIPPED"]
      }
    }
  }

  function Nt(t, e, n) {
    if (!e && Object.keys(t).length === 0) return;
    if (!e) return {
      headers: t
    };
    if (!n) return {
      headers: t,
      size: e
    };
    const r = {
        headers: t,
        size: e
      },
      {
        body: i,
        warnings: s
      } = nf(n);
    return r.body = i, s.length > 0 && (r._meta = {
      warnings: s
    }), r
  }

  function cr(t, e) {
    return Object.keys(t).reduce((n, r) => {
      const i = r.toLowerCase();
      return e.includes(i) && t[r] && (n[i] = t[r]), n
    }, {})
  }

  function Ea(t) {
    return new URLSearchParams(t).toString()
  }

  function nf(t) {
    if (!t || typeof t != "string") return {
      body: t,
      warnings: []
    };
    const e = t.length > je;
    if (rf(t)) try {
      const n = e ? pa(t.slice(0, je)) : t;
      return {
        body: JSON.parse(n),
        warnings: e ? ["JSON_TRUNCATED"] : []
      }
    } catch (n) {
      return {
        body: e ? `${t.slice(0,je)}…` : t,
        warnings: e ? ["INVALID_JSON", "TEXT_TRUNCATED"] : ["INVALID_JSON"]
      }
    }
    return {
      body: e ? `${t.slice(0,je)}…` : t,
      warnings: e ? ["TEXT_TRUNCATED"] : []
    }
  }

  function rf(t) {
    const e = t[0],
      n = t[t.length - 1];
    return e === "[" && n === "]" || e === "{" && n === "}"
  }

  function Sa(t, e) {
    return ue(t, e)
  }
  async function sf(t, e, n) {
    try {
      const r = await of(t, e, n),
        i = ya("resource.fetch", r);
      vn(n.replay, i)
    } catch (r) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error("[Replay] Failed to capture fetch breadcrumb", r)
    }
  }

  function af(t, e, n) {
    const {
      input: r,
      response: i
    } = e, s = ba(r), a = pn(s, n.textEncoder), o = i ? ma(i.headers.get("content-length")) : void 0;
    a !== void 0 && (t.data.request_body_size = a), o !== void 0 && (t.data.response_body_size = o)
  }
  async function of (t, e, n) {
    const {
      startTimestamp: r,
      endTimestamp: i
    } = e, {
      url: s,
      method: a,
      status_code: o = 0,
      request_body_size: c,
      response_body_size: u
    } = t.data, d = Sa(s, n.networkDetailAllowUrls), l = d ? cf(n, e.input, c) : De(c), h = await uf(d, n, e.response,
      u);
    return {
      startTimestamp: r,
      endTimestamp: i,
      url: s,
      method: a,
      statusCode: o,
      request: l,
      response: h
    }
  }

  function cf({
    networkCaptureBodies: t,
    networkRequestHeaders: e
  }, n, r) {
    const i = lf(n, e);
    if (!t) return Nt(i, r, void 0);
    const s = ba(n),
      a = ga(s);
    return Nt(i, r, a)
  }
  async function uf(t, {
    networkCaptureBodies: e,
    textEncoder: n,
    networkResponseHeaders: r
  }, i, s) {
    if (!t && s !== void 0) return De(s);
    const a = wa(i.headers, r);
    if (!e && s !== void 0) return Nt(a, s, void 0);
    try {
      const o = i.clone(),
        c = await df(o),
        u = c && c.length && s === void 0 ? pn(c, n) : s;
      return t ? e ? Nt(a, u, c) : Nt(a, u, void 0) : De(u)
    } catch (o) {
      return Nt(a, s, void 0)
    }
  }
  async function df(t) {
    try {
      return await t.text()
    } catch (e) {
      return
    }
  }

  function ba(t = []) {
    if (!(t.length !== 2 || typeof t[1] != "object")) return t[1].body
  }

  function wa(t, e) {
    const n = {};
    return e.forEach(r => {
      t.get(r) && (n[r] = t.get(r))
    }), n
  }

  function lf(t, e) {
    return t.length === 1 && typeof t[0] != "string" ? wi(t[0], e) : t.length === 2 ? wi(t[1], e) : {}
  }

  function wi(t, e) {
    if (!t) return {};
    const n = t.headers;
    return n ? n instanceof Headers ? wa(n, e) : Array.isArray(n) ? {} : cr(n, e) : {}
  }
  async function ff(t, e, n) {
    try {
      const r = hf(t, e, n),
        i = ya("resource.xhr", r);
      vn(n.replay, i)
    } catch (r) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error("[Replay] Failed to capture fetch breadcrumb", r)
    }
  }

  function _f(t, e, n) {
    const {
      xhr: r,
      input: i
    } = e, s = pn(i, n.textEncoder), a = r.getResponseHeader("content-length") ? ma(r.getResponseHeader(
      "content-length")) : pn(r.response, n.textEncoder);
    s !== void 0 && (t.data.request_body_size = s), a !== void 0 && (t.data.response_body_size = a)
  }

  function hf(t, e, n) {
    const {
      startTimestamp: r,
      endTimestamp: i,
      input: s,
      xhr: a
    } = e, {
      url: o,
      method: c,
      status_code: u = 0,
      request_body_size: d,
      response_body_size: l
    } = t.data;
    if (!o) return null;
    if (!Sa(o, n.networkDetailAllowUrls)) {
      const S = De(d),
        O = De(l);
      return {
        startTimestamp: r,
        endTimestamp: i,
        url: o,
        method: c,
        statusCode: u,
        request: S,
        response: O
      }
    }
    const h = a[Rt],
      _ = h ? cr(h.request_headers, n.networkRequestHeaders) : {},
      p = cr(pf(a), n.networkResponseHeaders),
      w = Nt(_, d, n.networkCaptureBodies ? ga(s) : void 0),
      D = Nt(p, l, n.networkCaptureBodies ? e.xhr.responseText : void 0);
    return {
      startTimestamp: r,
      endTimestamp: i,
      url: o,
      method: c,
      statusCode: u,
      request: w,
      response: D
    }
  }

  function pf(t) {
    const e = t.getAllResponseHeaders();
    return e ? e.split(`\r
`).reduce((n, r) => {
      const [i, s] = r.split(": ");
      return n[i.toLowerCase()] = s, n
    }, {}) : {}
  }

  function mf(t) {
    const e = g().getClient();
    try {
      const n = new TextEncoder,
        {
          networkDetailAllowUrls: r,
          networkCaptureBodies: i,
          networkRequestHeaders: s,
          networkResponseHeaders: a
        } = t.getOptions(),
        o = {
          replay: t,
          textEncoder: n,
          networkDetailAllowUrls: r,
          networkCaptureBodies: i,
          networkRequestHeaders: s,
          networkResponseHeaders: a
        };
      e && e.on ? e.on("beforeAddBreadcrumb", (c, u) => gf(o, c, u)) : (V("fetch", Pl(t)), V("xhr", Fl(t)))
    } catch (n) {}
  }

  function gf(t, e, n) {
    if (e.data) try {
      yf(e) && Sf(n) && (_f(e, n, t), ff(e, n, t)), Ef(e) && bf(n) && (af(e, n, t), sf(e, n, t))
    } catch (r) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn("Error when enriching network breadcrumb")
    }
  }

  function yf(t) {
    return t.category === "xhr"
  }

  function Ef(t) {
    return t.category === "fetch"
  }

  function Sf(t) {
    return t && t.xhr
  }

  function bf(t) {
    return t && t.response
  }
  let Ti = null;
  const wf = t => e => {
    if (!t.isEnabled()) return;
    const n = Tf(e);
    n && la(t, n)
  };

  function Tf(t) {
    const e = t.getLastBreadcrumb && t.getLastBreadcrumb();
    return Ti === e || !e || (Ti = e, e.category && (["fetch", "xhr", "sentry.event", "sentry.transaction"].includes(e
      .category) || e.category.startsWith("ui."))) ? null : e.category === "console" ? vf(e) : Gt(e)
  }

  function vf(t) {
    const e = t.data && t.data.arguments;
    if (!Array.isArray(e) || e.length === 0) return Gt(t);
    let n = !1;
    const r = e.map(i => {
      if (!i) return i;
      if (typeof i == "string") return i.length > We ? (n = !0, `${i.slice(0,We)}…`) : i;
      if (typeof i == "object") try {
        const s = pt(i, 7),
          a = JSON.stringify(s);
        if (a.length > We) {
          const o = pa(a.slice(0, We)),
            c = JSON.parse(o);
          return n = !0, c
        }
        return s
      } catch (s) {}
      return i
    });
    return Gt({
      ...t,
      data: {
        ...t.data,
        arguments: r,
        ...n ? {
          _meta: {
            warnings: ["CONSOLE_ARG_TRUNCATED"]
          }
        } : {}
      }
    })
  }

  function Rf(t) {
    const e = g().getScope(),
      n = g().getClient();
    e && e.addScopeListener(wf(t)), V("dom", vl(t)), V("history", Bl(t)), mf(t), Ae(Ol(t, !vi(n))), vi(n) && (n.on(
      "afterSendEvent", da(t)), n.on("createDsc", r => {
      const i = t.getSessionId();
      i && t.isEnabled() && t.recordingMode === "session" && (r.replay_id = i)
    }))
  }

  function vi(t) {
    return !!(t && t.on)
  }
  async function kf(t) {
    try {
      return Promise.all(Tn(t, [Nf(G.performance.memory)]))
    } catch (e) {
      return []
    }
  }

  function Nf(t) {
    const {
      jsHeapSizeLimit: e,
      totalJSHeapSize: n,
      usedJSHeapSize: r
    } = t, i = Date.now() / 1e3;
    return {
      type: "memory",
      name: "memory",
      start: i,
      end: i,
      data: {
        memory: {
          jsHeapSizeLimit: e,
          totalJSHeapSize: n,
          usedJSHeapSize: r
        }
      }
    }
  }
  const Ri = {
    resource: Af,
    paint: If,
    navigation: Of,
    ["largest-contentful-paint"]: Cf
  };

  function Df(t) {
    return t.map(xf).filter(Boolean)
  }

  function xf(t) {
    return Ri[t.entryType] === void 0 ? null : Ri[t.entryType](t)
  }

  function se(t) {
    return ((bt || G.performance.timeOrigin) + t) / 1e3
  }

  function If(t) {
    const {
      duration: e,
      entryType: n,
      name: r,
      startTime: i
    } = t, s = se(i);
    return {
      type: n,
      name: r,
      start: s,
      end: s + e,
      data: void 0
    }
  }

  function Of(t) {
    const {
      entryType: e,
      name: n,
      decodedBodySize: r,
      duration: i,
      domComplete: s,
      encodedBodySize: a,
      domContentLoadedEventStart: o,
      domContentLoadedEventEnd: c,
      domInteractive: u,
      loadEventStart: d,
      loadEventEnd: l,
      redirectCount: h,
      startTime: _,
      transferSize: p,
      type: w
    } = t;
    return i === 0 ? null : {
      type: `${e}.${w}`,
      start: se(_),
      end: se(s),
      name: n,
      data: {
        size: p,
        decodedBodySize: r,
        encodedBodySize: a,
        duration: i,
        domInteractive: u,
        domContentLoadedEventStart: o,
        domContentLoadedEventEnd: c,
        loadEventStart: d,
        loadEventEnd: l,
        domComplete: s,
        redirectCount: h
      }
    }
  }

  function Af(t) {
    const {
      entryType: e,
      initiatorType: n,
      name: r,
      responseEnd: i,
      startTime: s,
      decodedBodySize: a,
      encodedBodySize: o,
      responseStatus: c,
      transferSize: u
    } = t;
    return ["fetch", "xmlhttprequest"].includes(n) ? null : {
      type: `${e}.${n}`,
      start: se(s),
      end: se(i),
      name: r,
      data: {
        size: u,
        statusCode: c,
        decodedBodySize: a,
        encodedBodySize: o
      }
    }
  }

  function Cf(t) {
    const {
      entryType: e,
      startTime: n,
      size: r
    } = t;
    let i = 0;
    if (G.performance) {
      const o = G.performance.getEntriesByType("navigation")[0];
      i = o && o.activationStart || 0
    }
    const s = Math.max(n - i, 0),
      a = se(i) + s / 1e3;
    return {
      type: e,
      name: e,
      start: a,
      end: a,
      data: {
        value: s,
        size: r,
        nodeId: jt.mirror.getId(t.element)
      }
    }
  }

  function Uf(t, e, n) {
    let r, i, s;
    const a = n && n.maxWait ? Math.max(n.maxWait, e) : 0;

    function o() {
      return c(), r = t(), r
    }

    function c() {
      i !== void 0 && clearTimeout(i), s !== void 0 && clearTimeout(s), i = s = void 0
    }

    function u() {
      return i !== void 0 || s !== void 0 ? o() : r
    }

    function d() {
      return i && clearTimeout(i), i = setTimeout(o, e), a && s === void 0 && (s = setTimeout(o, a)), r
    }
    return d.cancel = c, d.flush = u, d
  }
  var ur;
  (function(t) {
    t[t.DomContentLoaded = 0] = "DomContentLoaded";
    const n = 1;
    t[t.Load = n] = "Load";
    const r = 2;
    t[t.FullSnapshot = r] = "FullSnapshot";
    const i = 3;
    t[t.IncrementalSnapshot = i] = "IncrementalSnapshot";
    const s = 4;
    t[t.Meta = s] = "Meta";
    const a = 5;
    t[t.Custom = a] = "Custom";
    const o = 6;
    t[t.Plugin = o] = "Plugin"
  })(ur || (ur = {}));

  function Bf(t) {
    let e = !1;
    return (n, r) => {
      if (!t.checkAndHandleExpiredSession()) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
          "[Replay] Received replay event after session expired.");
        return
      }
      const i = r || !e;
      e = !0, t.addUpdate(() => {
        if (t.recordingMode === "buffer" && i && t.setInitialState(), Be(t, n, i), !i) return !1;
        if (Mf(t, i), t.session && t.session.previousSessionId) return !0;
        if (t.recordingMode === "buffer" && t.session && t.eventBuffer) {
          const s = t.eventBuffer.getEarliestTimestamp();
          s && (t.session.started = s, t.getOptions().stickySession && kr(t.session))
        }
        return t.recordingMode === "session" && t.flushImmediate(), !0
      })
    }
  }

  function Lf(t) {
    const e = t.getOptions();
    return {
      type: ur.Custom,
      timestamp: Date.now(),
      data: {
        tag: "options",
        payload: {
          sessionSampleRate: e.sessionSampleRate,
          errorSampleRate: e.errorSampleRate,
          useCompressionOption: e.useCompression,
          blockAllMedia: e.blockAllMedia,
          maskAllText: e.maskAllText,
          maskAllInputs: e.maskAllInputs,
          useCompression: t.eventBuffer ? t.eventBuffer.type === "worker" : !1,
          networkDetailHasUrls: e.networkDetailAllowUrls.length > 0,
          networkCaptureBodies: e.networkCaptureBodies,
          networkRequestHasHeaders: e.networkRequestHeaders.length > 0,
          networkResponseHasHeaders: e.networkResponseHeaders.length > 0
        }
      }
    }
  }

  function Mf(t, e) {
    return !e || !t.session || t.session.segmentId !== 0 ? Promise.resolve(null) : Be(t, Lf(t), !1)
  }

  function Gf(t, e, n, r) {
    return Wt(is(t, gr(t), r, n), [
      [{
        type: "replay_event"
      }, t],
      [{
        type: "replay_recording",
        length: typeof e == "string" ? new TextEncoder().encode(e).length : e.length
      }, e]
    ])
  }

  function Pf({
    recordingData: t,
    headers: e
  }) {
    let n;
    const r = `${JSON.stringify(e)}
`;
    if (typeof t == "string") n = `${r}${t}`;
    else {
      const s = new TextEncoder().encode(r);
      n = new Uint8Array(s.length + t.length), n.set(s), n.set(t, s.length)
    }
    return n
  }
  async function Yf({
    client: t,
    scope: e,
    replayId: n,
    event: r
  }) {
    const i = typeof t._integrations == "object" && t._integrations !== null && !Array.isArray(t._integrations) ?
      Object.keys(t._integrations) : void 0,
      s = await Ss(t.getOptions(), r, {
        event_id: n,
        integrations: i
      }, e);
    if (!s) return null;
    s.platform = s.platform || "javascript";
    const a = t.getSdkMetadata && t.getSdkMetadata(),
      {
        name: o,
        version: c
      } = a && a.sdk || {};
    return s.sdk = {
      ...s.sdk,
      name: o || "sentry.javascript.unknown",
      version: c || "0.0.0"
    }, s
  }
  async function Ff({
    recordingData: t,
    replayId: e,
    segmentId: n,
    eventContext: r,
    timestamp: i,
    session: s
  }) {
    const a = Pf({
        recordingData: t,
        headers: {
          segment_id: n
        }
      }),
      {
        urls: o,
        errorIds: c,
        traceIds: u,
        initialTimestamp: d
      } = r,
      l = g(),
      h = l.getClient(),
      _ = l.getScope(),
      p = h && h.getTransport(),
      w = h && h.getDsn();
    if (!h || !_ || !p || !w || !s.sampled) return;
    const D = {
        type: td,
        replay_start_timestamp: d / 1e3,
        timestamp: i / 1e3,
        error_ids: c,
        trace_ids: u,
        urls: o,
        replay_id: e,
        segment_id: n,
        replay_type: s.sampled
      },
      S = await Yf({
        scope: _,
        client: h,
        replayId: e,
        event: D
      });
    if (!S) {
      h.recordDroppedEvent("event_processor", "replay", D), (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f
        .log("An event processor returned `null`, will not send event.");
      return
    }
    const O = Gf(S, a, w, h.getOptions().tunnel);
    let x;
    try {
      x = await p.send(O)
    } catch (v) {
      const b = new Error(vr);
      try {
        b.cause = v
      } catch (N) {}
      throw b
    }
    if (!x) return x;
    if (typeof x.statusCode == "number" && (x.statusCode < 200 || x.statusCode >= 300)) throw new Ta(x.statusCode);
    return x
  }
  class Ta extends Error {
    constructor(e) {
      super(`Transport returned status code ${e}`)
    }
  }
  async function va(t, e = {
    count: 0,
    interval: od
  }) {
    const {
      recordingData: n,
      options: r
    } = t;
    if (n.length) try {
      return await Ff(t), !0
    } catch (i) {
      if (i instanceof Ta) throw i;
      if (ps("Replays", {
          _retryCount: e.count
        }), (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && r._experiments && r._experiments
        .captureExceptions && bn(i), e.count >= cd) {
        const s = new Error(`${vr} - max retries exceeded`);
        try {
          s.cause = i
        } catch (a) {}
        throw s
      }
      return e.interval *= ++e.count, await new Promise((s, a) => {
        setTimeout(async () => {
          try {
            await va(t, e), s(!0)
          } catch (o) {
            a(o)
          }
        }, e.interval)
      })
    }
  }
  class F {
    __init() {
      this.eventBuffer = null
    }
    __init2() {
      this.performanceEvents = []
    }
    __init3() {
      this.recordingMode = "session"
    }
    __init4() {
      this.timeouts = {
        sessionIdlePause: ed,
        sessionIdleExpire: nd,
        maxSessionLife: rd
      }
    }
    __init5() {
      this._performanceObserver = null
    }
    __init6() {
      this._flushLock = null
    }
    __init7() {
      this._lastActivity = Date.now()
    }
    __init8() {
      this._isEnabled = !1
    }
    __init9() {
      this._isPaused = !1
    }
    __init10() {
      this._hasInitializedCoreListeners = !1
    }
    __init11() {
      this._stopRecording = null
    }
    __init12() {
      this._context = {
        errorIds: new Set,
        traceIds: new Set,
        urls: [],
        initialTimestamp: Date.now(),
        initialUrl: ""
      }
    }
    constructor({
      options: e,
      recordingOptions: n
    }) {
      F.prototype.__init.call(this), F.prototype.__init2.call(this), F.prototype.__init3.call(this), F.prototype
        .__init4.call(this), F.prototype.__init5.call(this), F.prototype.__init6.call(this), F.prototype.__init7.call(
          this), F.prototype.__init8.call(this), F.prototype.__init9.call(this), F.prototype.__init10.call(this), F
        .prototype.__init11.call(this), F.prototype.__init12.call(this), F.prototype.__init13.call(this), F.prototype
        .__init14.call(this), F.prototype.__init15.call(this), F.prototype.__init16.call(this), F.prototype.__init17
        .call(this), F.prototype.__init18.call(this), this._recordingOptions = n, this._options = e, this
        ._debouncedFlush = Uf(() => this._flush(), this._options.flushMinDelay, {
          maxWait: this._options.flushMaxDelay
        })
    }
    getContext() {
      return this._context
    }
    isEnabled() {
      return this._isEnabled
    }
    isPaused() {
      return this._isPaused
    }
    getOptions() {
      return this._options
    }
    initializeSampling() {
      const {
        errorSampleRate: e,
        sessionSampleRate: n
      } = this._options;
      if (!(e <= 0 && n <= 0 || !this._loadAndCheckSession())) {
        if (!this.session) {
          this._handleException(new Error("Unable to initialize and create session"));
          return
        }
        this.session.sampled && this.session.sampled !== "session" && (this.recordingMode = "buffer"), this
          ._initializeRecording()
      }
    }
    start() {
      if (this._isEnabled && this.recordingMode === "session") throw new Error(
        "Replay recording is already in progress");
      if (this._isEnabled && this.recordingMode === "buffer") throw new Error(
        "Replay buffering is in progress, call `flush()` to save the replay");
      const e = this.session && this.session.id,
        {
          session: n
        } = Bn({
          timeouts: this.timeouts,
          stickySession: !!this._options.stickySession,
          currentSession: this.session,
          sessionSampleRate: 1,
          allowBuffering: !1
        });
      n.previousSessionId = e, this.session = n, this._initializeRecording()
    }
    startBuffering() {
      if (this._isEnabled) throw new Error("Replay recording is already in progress");
      const e = this.session && this.session.id,
        {
          session: n
        } = Bn({
          timeouts: this.timeouts,
          stickySession: !!this._options.stickySession,
          currentSession: this.session,
          sessionSampleRate: 0,
          allowBuffering: !0
        });
      n.previousSessionId = e, this.session = n, this.recordingMode = "buffer", this._initializeRecording()
    }
    startRecording() {
      try {
        this._stopRecording = jt({
          ...this._recordingOptions,
          ...this.recordingMode === "buffer" && {
            checkoutEveryNms: ad
          },
          emit: Bf(this),
          onMutation: this._onMutationHandler
        })
      } catch (e) {
        this._handleException(e)
      }
    }
    stopRecording() {
      try {
        return this._stopRecording && (this._stopRecording(), this._stopRecording = void 0), !0
      } catch (e) {
        return this._handleException(e), !1
      }
    }
    async stop(e) {
      if (this._isEnabled) try {
        if (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) {
          const n = `[Replay] Stopping Replay${e?` triggered by ${e}`:""}`;
          (this.getOptions()._experiments.traceInternals ? console.warn : f.log)(n)
        }
        this._isEnabled = !1, this._removeListeners(), this.stopRecording(), this._debouncedFlush.cancel(),
          await this._flush({
            force: !0
          }), this.eventBuffer && this.eventBuffer.destroy(), this.eventBuffer = null, pl(this)
      } catch (n) {
        this._handleException(n)
      }
    }
    pause() {
      this._isPaused = !0, this.stopRecording()
    }
    resume() {
      this._loadAndCheckSession() && (this._isPaused = !1, this.startRecording())
    }
    async sendBufferedReplayOrFlush({
      continueRecording: e = !0
    } = {}) {
      if (this.recordingMode === "session") return this.flushImmediate();
      await this.flushImmediate();
      const n = this.stopRecording();
      !e || !n || (this.recordingMode = "session", this.session && (this.session.shouldRefresh = !1, this
        ._maybeSaveSession()), this.startRecording())
    }
    addUpdate(e) {
      const n = e();
      this.recordingMode !== "buffer" && n !== !0 && this._debouncedFlush()
    }
    triggerUserActivity() {
      if (this._updateUserActivity(), !this._stopRecording) {
        if (!this._loadAndCheckSession()) return;
        this.resume();
        return
      }
      this.checkAndHandleExpiredSession(), this._updateSessionActivity()
    }
    flushImmediate() {
      return this._debouncedFlush(), this._debouncedFlush.flush()
    }
    getSessionId() {
      return this.session && this.session.id
    }
    checkAndHandleExpiredSession() {
      const e = this.getSessionId();
      if (this._lastActivity && rr(this._lastActivity, this.timeouts.sessionIdlePause) && this.session && this.session
        .sampled === "session") {
        this.pause();
        return
      }
      return this._loadAndCheckSession() ? e !== this.getSessionId() ? (this._triggerFullSnapshot(), !1) : !0 : void 0
    }
    setInitialState() {
      const e = `${G.location.pathname}${G.location.hash}${G.location.search}`,
        n = `${G.location.origin}${e}`;
      this.performanceEvents = [], this._clearContext(), this._context.initialUrl = n, this._context
        .initialTimestamp = Date.now(), this._context.urls.push(n)
    }
    _initializeRecording() {
      this.setInitialState(), this._updateSessionActivity(), this.eventBuffer = hl({
        useCompression: this._options.useCompression
      }), this._removeListeners(), this._addListeners(), this._isEnabled = !0, this.startRecording()
    }
    _handleException(e) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error("[Replay]", e), (typeof __SENTRY_DEBUG__ > "u" ||
        __SENTRY_DEBUG__) && this._options._experiments && this._options._experiments.captureExceptions && bn(e)
    }
    _loadAndCheckSession() {
      const {
        type: e,
        session: n
      } = Bn({
        timeouts: this.timeouts,
        stickySession: !!this._options.stickySession,
        currentSession: this.session,
        sessionSampleRate: this._options.sessionSampleRate,
        allowBuffering: this._options.errorSampleRate > 0
      });
      e === "new" && this.setInitialState();
      const r = this.getSessionId();
      return n.id !== r && (n.previousSessionId = r), this.session = n, this.session.sampled ? !0 : (this.stop(
        "session unsampled"), !1)
    }
    _addListeners() {
      try {
        G.document.addEventListener("visibilitychange", this._handleVisibilityChange), G.addEventListener("blur", this
          ._handleWindowBlur), G.addEventListener("focus", this._handleWindowFocus), G.addEventListener("keydown",
          this._handleKeyboardEvent), this._hasInitializedCoreListeners || (Rf(this), this
          ._hasInitializedCoreListeners = !0)
      } catch (e) {
        this._handleException(e)
      }
      "PerformanceObserver" in G && (this._performanceObserver = cl(this))
    }
    _removeListeners() {
      try {
        G.document.removeEventListener("visibilitychange", this._handleVisibilityChange), G.removeEventListener(
            "blur", this._handleWindowBlur), G.removeEventListener("focus", this._handleWindowFocus), G
          .removeEventListener("keydown", this._handleKeyboardEvent), this._performanceObserver && (this
            ._performanceObserver.disconnect(), this._performanceObserver = null)
      } catch (e) {
        this._handleException(e)
      }
    }
    __init13() {
      this._handleVisibilityChange = () => {
        G.document.visibilityState === "visible" ? this._doChangeToForegroundTasks() : this
          ._doChangeToBackgroundTasks()
      }
    }
    __init14() {
      this._handleWindowBlur = () => {
        const e = Gt({
          category: "ui.blur"
        });
        this._doChangeToBackgroundTasks(e)
      }
    }
    __init15() {
      this._handleWindowFocus = () => {
        const e = Gt({
          category: "ui.focus"
        });
        this._doChangeToForegroundTasks(e)
      }
    }
    __init16() {
      this._handleKeyboardEvent = () => {
        this.triggerUserActivity()
      }
    }
    _doChangeToBackgroundTasks(e) {
      if (!this.session) return;
      const n = ca(this.session, this.timeouts);
      e && !n && this._createCustomBreadcrumb(e), this._conditionalFlush()
    }
    _doChangeToForegroundTasks(e) {
      if (!this.session) return;
      if (!this.checkAndHandleExpiredSession()) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
          "[Replay] Document has become active, but session has expired");
        return
      }
      e && this._createCustomBreadcrumb(e)
    }
    _triggerFullSnapshot(e = !0) {
      try {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Replay] Taking full rrweb snapshot"), jt
          .takeFullSnapshot(e)
      } catch (n) {
        this._handleException(n)
      }
    }
    _updateUserActivity(e = Date.now()) {
      this._lastActivity = e
    }
    _updateSessionActivity(e = Date.now()) {
      this.session && (this.session.lastActivity = e, this._maybeSaveSession())
    }
    _createCustomBreadcrumb(e) {
      this.addUpdate(() => {
        Be(this, {
          type: L.Custom,
          timestamp: e.timestamp || 0,
          data: {
            tag: "breadcrumb",
            payload: e
          }
        })
      })
    }
    _addPerformanceEntries() {
      const e = [...this.performanceEvents];
      return this.performanceEvents = [], Promise.all(Tn(this, Df(e)))
    }
    _conditionalFlush() {
      this.recordingMode !== "buffer" && this.flushImmediate()
    }
    _clearContext() {
      this._context.errorIds.clear(), this._context.traceIds.clear(), this._context.urls = []
    }
    _updateInitialTimestampFromEventBuffer() {
      const {
        session: e,
        eventBuffer: n
      } = this;
      if (!e || !n || e.segmentId) return;
      const r = n.getEarliestTimestamp();
      r && r < this._context.initialTimestamp && (this._context.initialTimestamp = r)
    }
    _popEventContext() {
      const e = {
        initialTimestamp: this._context.initialTimestamp,
        initialUrl: this._context.initialUrl,
        errorIds: Array.from(this._context.errorIds),
        traceIds: Array.from(this._context.traceIds),
        urls: this._context.urls
      };
      return this._clearContext(), e
    }
    async _runFlush() {
      if (!this.session || !this.eventBuffer) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(
          "[Replay] No session or eventBuffer found to flush.");
        return
      }
      if (await this._addPerformanceEntries(), !(!this.eventBuffer || !this.eventBuffer.hasEvents) && (await kf(this),
          !!this.eventBuffer)) try {
        this._updateInitialTimestampFromEventBuffer();
        const e = await this.eventBuffer.finish(),
          n = this.session.id,
          r = this._popEventContext(),
          i = this.session.segmentId++;
        this._maybeSaveSession(), await va({
          replayId: n,
          recordingData: e,
          segmentId: i,
          eventContext: r,
          session: this.session,
          options: this.getOptions(),
          timestamp: Date.now()
        })
      } catch (e) {
        this._handleException(e), this.stop("sendReplay");
        const n = g().getClient();
        n && n.recordDroppedEvent("send_error", "replay")
      }
    }
    __init17() {
      this._flush = async ({
        force: e = !1
      } = {}) => {
        if (!(!this._isEnabled && !e)) {
          if (!this.checkAndHandleExpiredSession()) {
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(
              "[Replay] Attempting to finish replay event after session expired.");
            return
          }
          if (!this.session) {
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error("[Replay] No session found to flush.");
            return
          }
          if (this._debouncedFlush.cancel(), !this._flushLock) {
            this._flushLock = this._runFlush(), await this._flushLock, this._flushLock = null;
            return
          }
          try {
            await this._flushLock
          } catch (n) {
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.error(n)
          } finally {
            this._debouncedFlush()
          }
        }
      }
    }
    _maybeSaveSession() {
      this.session && this._options.stickySession && kr(this.session)
    }
    __init18() {
      this._onMutationHandler = e => {
        const n = e.length,
          r = this._options._experiments.mutationLimit || 0,
          i = this._options._experiments.mutationBreadcrumbLimit || 1e3,
          s = r && n > r;
        if (n > i || s) {
          const a = Gt({
            category: "replay.mutations",
            data: {
              count: n
            }
          });
          this._createCustomBreadcrumb(a)
        }
        return s ? (this._triggerFullSnapshot(!1), !1) : !0
      }
    }
  }

  function pe(t, e, n, r) {
    const i = typeof r == "string" ? r.split(",") : [],
      s = [...t, ...i, ...e];
    return typeof n < "u" && (typeof n == "string" && s.push(`.${n}`), console.warn(
      "[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration."
    )), s.join(",")
  }

  function zf({
    mask: t,
    unmask: e,
    block: n,
    unblock: r,
    ignore: i,
    blockClass: s,
    blockSelector: a,
    maskTextClass: o,
    maskTextSelector: c,
    ignoreClass: u
  }) {
    const d = ['base[href="/"]'],
      l = pe(t, [".sentry-mask", "[data-sentry-mask]"], o, c),
      h = pe(e, [".sentry-unmask", "[data-sentry-unmask]"]),
      _ = {
        maskTextSelector: l,
        unmaskTextSelector: h,
        maskInputSelector: l,
        unmaskInputSelector: h,
        blockSelector: pe(n, [".sentry-block", "[data-sentry-block]", ...d], s, a),
        unblockSelector: pe(r, [".sentry-unblock", "[data-sentry-unblock]"]),
        ignoreSelector: pe(i, [".sentry-ignore", "[data-sentry-ignore]", 'input[type="file"]'], u)
      };
    return s instanceof RegExp && (_.blockClass = s), o instanceof RegExp && (_.maskTextClass = o), _
  }

  function ki() {
    return typeof window < "u" && (!Qi() || $f())
  }

  function $f() {
    return typeof process < "u" && process.type === "renderer"
  }
  const Ni = 'img,image,svg,video,object,picture,embed,map,audio,link[rel="icon"],link[rel="apple-touch-icon"]',
    Hf = ["content-length", "content-type", "accept"];
  let Di = !1;
  class xe {
    static __initStatic() {
      this.id = "Replay"
    }
    __init() {
      this.name = xe.id
    }
    constructor({
      flushMinDelay: e = id,
      flushMaxDelay: n = sd,
      stickySession: r = !0,
      useCompression: i = !0,
      _experiments: s = {},
      sessionSampleRate: a,
      errorSampleRate: o,
      maskAllText: c = !0,
      maskAllInputs: u = !0,
      blockAllMedia: d = !0,
      networkDetailAllowUrls: l = [],
      networkCaptureBodies: h = !0,
      networkRequestHeaders: _ = [],
      networkResponseHeaders: p = [],
      mask: w = [],
      unmask: D = [],
      block: S = [],
      unblock: O = [],
      ignore: x = [],
      maskFn: v,
      blockClass: b,
      blockSelector: N,
      maskInputOptions: T,
      maskTextClass: E,
      maskTextSelector: U,
      ignoreClass: I
    } = {}) {
      if (xe.prototype.__init.call(this), this._recordingOptions = {
          maskAllInputs: u,
          maskAllText: c,
          maskInputOptions: {
            ...T || {},
            password: !0
          },
          maskTextFn: v,
          maskInputFn: v,
          ...zf({
            mask: w,
            unmask: D,
            block: S,
            unblock: O,
            ignore: x,
            blockClass: b,
            blockSelector: N,
            maskTextClass: E,
            maskTextSelector: U,
            ignoreClass: I
          }),
          slimDOMOptions: "all",
          inlineStylesheet: !0,
          inlineImages: !1,
          collectFonts: !0
        }, this._initialOptions = {
          flushMinDelay: e,
          flushMaxDelay: n,
          stickySession: r,
          sessionSampleRate: a,
          errorSampleRate: o,
          useCompression: i,
          blockAllMedia: d,
          maskAllInputs: u,
          maskAllText: c,
          networkDetailAllowUrls: l,
          networkCaptureBodies: h,
          networkRequestHeaders: xi(_),
          networkResponseHeaders: xi(p),
          _experiments: s
        }, typeof a == "number" && (console.warn(`[Replay] You are passing \`sessionSampleRate\` to the Replay integration.
This option is deprecated and will be removed soon.
Instead, configure \`replaysSessionSampleRate\` directly in the SDK init options, e.g.:
Sentry.init({ replaysSessionSampleRate: ${a} })`), this._initialOptions.sessionSampleRate = a), typeof o == "number" &&
        (console.warn(`[Replay] You are passing \`errorSampleRate\` to the Replay integration.
This option is deprecated and will be removed soon.
Instead, configure \`replaysOnErrorSampleRate\` directly in the SDK init options, e.g.:
Sentry.init({ replaysOnErrorSampleRate: ${o} })`), this._initialOptions.errorSampleRate = o), this._initialOptions
        .blockAllMedia && (this._recordingOptions.blockSelector = this._recordingOptions.blockSelector ?
          `${this._recordingOptions.blockSelector},${Ni}` : Ni), this._isInitialized && ki()) throw new Error(
        "Multiple Sentry Session Replay instances are not supported");
      this._isInitialized = !0
    }
    get _isInitialized() {
      return Di
    }
    set _isInitialized(e) {
      Di = e
    }
    setupOnce() {
      ki() && (this._setup(), setTimeout(() => this._initialize()))
    }
    start() {
      this._replay && this._replay.start()
    }
    startBuffering() {
      this._replay && this._replay.startBuffering()
    }
    stop() {
      return this._replay ? this._replay.stop() : Promise.resolve()
    }
    flush(e) {
      return !this._replay || !this._replay.isEnabled() ? Promise.resolve() : this._replay.sendBufferedReplayOrFlush(
        e)
    }
    getReplayId() {
      if (!(!this._replay || !this._replay.isEnabled())) return this._replay.getSessionId()
    }
    _initialize() {
      this._replay && this._replay.initializeSampling()
    }
    _setup() {
      const e = jf(this._initialOptions);
      this._replay = new F({
        options: e,
        recordingOptions: this._recordingOptions
      })
    }
  }
  xe.__initStatic();

  function jf(t) {
    const e = g().getClient(),
      n = e && e.getOptions(),
      r = {
        sessionSampleRate: 0,
        errorSampleRate: 0,
        ...ut(t)
      };
    return n ? (t.sessionSampleRate == null && t.errorSampleRate == null && n.replaysSessionSampleRate == null && n
      .replaysOnErrorSampleRate == null && console.warn(
        "Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set."),
      typeof n.replaysSessionSampleRate == "number" && (r.sessionSampleRate = n.replaysSessionSampleRate), typeof n
      .replaysOnErrorSampleRate == "number" && (r.errorSampleRate = n.replaysOnErrorSampleRate), r) : (console.warn(
      "SDK client is not available."), r)
  }

  function xi(t) {
    return [...Hf, ...t.map(e => e.toLowerCase())]
  }
  const C = nt;

  function Wf() {
    C && C.document ? C.document.addEventListener("visibilitychange", () => {
      const t = le();
      if (C.document.hidden && t) {
        const e = "cancelled";
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
            `[Tracing] Transaction: ${e} -> since tab moved to the background, op: ${t.op}`), t.status || t
          .setStatus(e), t.setTag("visibilitychange", "document.hidden"), t.finish()
      }
    }) : (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
      "[Tracing] Could not set up background tab detection due to lack of global document")
  }
  const xr = (t, e, n) => {
      let r, i;
      return s => {
        e.value >= 0 && (s || n) && (i = e.value - (r || 0), (i || r === void 0) && (r = e.value, e.delta = i, t(e)))
      }
    },
    qf = () => `v3-${Date.now()}-${Math.floor(Math.random()*(9e12-1))+1e12}`,
    Zf = () => {
      const t = C.performance.timing,
        e = C.performance.navigation.type,
        n = {
          entryType: "navigation",
          startTime: 0,
          type: e == 2 ? "back_forward" : e === 1 ? "reload" : "navigate"
        };
      for (const r in t) r !== "navigationStart" && r !== "toJSON" && (n[r] = Math.max(t[r] - t.navigationStart, 0));
      return n
    },
    Ra = () => C.__WEB_VITALS_POLYFILL__ ? C.performance && (performance.getEntriesByType && performance
      .getEntriesByType("navigation")[0] || Zf()) : C.performance && performance.getEntriesByType && performance
    .getEntriesByType("navigation")[0],
    ka = () => {
      const t = Ra();
      return t && t.activationStart || 0
    },
    Ir = (t, e) => {
      const n = Ra();
      let r = "navigate";
      return n && (C.document.prerendering || ka() > 0 ? r = "prerender" : r = n.type.replace(/_/g, "-")), {
        name: t,
        value: typeof e > "u" ? -1 : e,
        rating: "good",
        delta: 0,
        entries: [],
        id: qf(),
        navigationType: r
      }
    },
    Le = (t, e, n) => {
      try {
        if (PerformanceObserver.supportedEntryTypes.includes(t)) {
          const r = new PerformanceObserver(i => {
            e(i.getEntries())
          });
          return r.observe(Object.assign({
            type: t,
            buffered: !0
          }, n || {})), r
        }
      } catch (r) {}
    },
    Rn = (t, e) => {
      const n = r => {
        (r.type === "pagehide" || C.document.visibilityState === "hidden") && (t(r), e && (removeEventListener(
          "visibilitychange", n, !0), removeEventListener("pagehide", n, !0)))
      };
      addEventListener("visibilitychange", n, !0), addEventListener("pagehide", n, !0)
    },
    Vf = t => {
      const e = Ir("CLS", 0);
      let n, r = 0,
        i = [];
      const s = o => {
          o.forEach(c => {
            if (!c.hadRecentInput) {
              const u = i[0],
                d = i[i.length - 1];
              r && i.length !== 0 && c.startTime - d.startTime < 1e3 && c.startTime - u.startTime < 5e3 ? (r += c
                .value, i.push(c)) : (r = c.value, i = [c]), r > e.value && (e.value = r, e.entries = i, n && n())
            }
          })
        },
        a = Le("layout-shift", s);
      if (a) {
        n = xr(t, e);
        const o = () => {
          s(a.takeRecords()), n(!0)
        };
        return Rn(o), o
      }
    };
  let nn = -1;
  const Xf = () => C.document.visibilityState === "hidden" && !C.document.prerendering ? 0 : 1 / 0,
    Kf = () => {
      Rn(({
        timeStamp: t
      }) => {
        nn = t
      }, !0)
    },
    Or = () => (nn < 0 && (nn = Xf(), Kf()), {
      get firstHiddenTime() {
        return nn
      }
    }),
    Jf = t => {
      const e = Or(),
        n = Ir("FID");
      let r;
      const i = o => {
          o.startTime < e.firstHiddenTime && (n.value = o.processingStart - o.startTime, n.entries.push(o), r(!0))
        },
        s = o => {
          o.forEach(i)
        },
        a = Le("first-input", s);
      r = xr(t, n), a && Rn(() => {
        s(a.takeRecords()), a.disconnect()
      }, !0)
    },
    Ii = {},
    Qf = t => {
      const e = Or(),
        n = Ir("LCP");
      let r;
      const i = a => {
          const o = a[a.length - 1];
          if (o) {
            const c = Math.max(o.startTime - ka(), 0);
            c < e.firstHiddenTime && (n.value = c, n.entries = [o], r())
          }
        },
        s = Le("largest-contentful-paint", i);
      if (s) {
        r = xr(t, n);
        const a = () => {
          Ii[n.id] || (i(s.takeRecords()), s.disconnect(), Ii[n.id] = !0, r(!0))
        };
        return ["keydown", "click"].forEach(o => {
          addEventListener(o, a, {
            once: !0,
            capture: !0
          })
        }), Rn(a, !0), a
      }
    };

  function Ln(t) {
    return typeof t == "number" && isFinite(t)
  }

  function ae(t, {
    startTimestamp: e,
    ...n
  }) {
    return e && t.startTimestamp > e && (t.startTimestamp = e), t.startChild({
      startTimestamp: e,
      ...n
    })
  }

  function j(t) {
    return t / 1e3
  }

  function Na() {
    return C && C.addEventListener && C.performance
  }
  let Oi = 0,
    Y = {},
    ht, Te;

  function t_() {
    const t = Na();
    if (t && bt) {
      t.mark && C.performance.mark("sentry-tracing-init"), s_();
      const e = r_(),
        n = i_();
      return () => {
        e && e(), n && n()
      }
    }
    return () => {}
  }

  function e_() {
    Le("longtask", e => {
      for (const n of e) {
        const r = le();
        if (!r) return;
        const i = j(bt + n.startTime),
          s = j(n.duration);
        r.startChild({
          description: "Main UI thread blocked",
          op: "ui.long-task",
          startTimestamp: i,
          endTimestamp: i + s
        })
      }
    })
  }

  function n_() {
    Le("event", e => {
      for (const n of e) {
        const r = le();
        if (!r) return;
        if (n.name === "click") {
          const i = j(bt + n.startTime),
            s = j(n.duration);
          r.startChild({
            description: Pt(n.target),
            op: `ui.interaction.${n.name}`,
            startTimestamp: i,
            endTimestamp: i + s
          })
        }
      }
    }, {
      durationThreshold: 0
    })
  }

  function r_() {
    return Vf(t => {
      const e = t.entries.pop();
      e && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Measurements] Adding CLS"), Y.cls = {
        value: t.value,
        unit: ""
      }, Te = e)
    })
  }

  function i_() {
    return Qf(t => {
      const e = t.entries.pop();
      e && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Measurements] Adding LCP"), Y.lcp = {
        value: t.value,
        unit: "millisecond"
      }, ht = e)
    })
  }

  function s_() {
    Jf(t => {
      const e = t.entries.pop();
      if (!e) return;
      const n = j(bt),
        r = j(e.startTime);
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Measurements] Adding FID"), Y.fid = {
        value: t.value,
        unit: "millisecond"
      }, Y["mark.fid"] = {
        value: n + r,
        unit: "second"
      }
    })
  }

  function a_(t) {
    const e = Na();
    if (!e || !C.performance.getEntries || !bt) return;
    (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      "[Tracing] Adding & adjusting spans using Performance API");
    const n = j(bt),
      r = e.getEntries();
    let i, s;
    if (r.slice(Oi).forEach(a => {
        const o = j(a.startTime),
          c = j(a.duration);
        if (!(t.op === "navigation" && n + o < t.startTimestamp)) switch (a.entryType) {
          case "navigation": {
            c_(t, a, n), i = n + j(a.responseStart), s = n + j(a.requestStart);
            break
          }
          case "mark":
          case "paint":
          case "measure": {
            o_(t, a, o, c, n);
            const u = Or(),
              d = a.startTime < u.firstHiddenTime;
            a.name === "first-paint" && d && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
              "[Measurements] Adding FP"), Y.fp = {
              value: a.startTime,
              unit: "millisecond"
            }), a.name === "first-contentful-paint" && d && ((typeof __SENTRY_DEBUG__ > "u" ||
              __SENTRY_DEBUG__) && f.log("[Measurements] Adding FCP"), Y.fcp = {
              value: a.startTime,
              unit: "millisecond"
            });
            break
          }
          case "resource": {
            const u = a.name.replace(C.location.origin, "");
            d_(t, a, u, o, c, n);
            break
          }
        }
      }), Oi = Math.max(r.length - 1, 0), l_(t), t.op === "pageload") {
      typeof i == "number" && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Measurements] Adding TTFB"), Y.ttfb = {
        value: (i - t.startTimestamp) * 1e3,
        unit: "millisecond"
      }, typeof s == "number" && s <= i && (Y["ttfb.requestTime"] = {
        value: (i - s) * 1e3,
        unit: "millisecond"
      })), ["fcp", "fp", "lcp"].forEach(o => {
        if (!Y[o] || n >= t.startTimestamp) return;
        const c = Y[o].value,
          u = n + j(c),
          d = Math.abs((u - t.startTimestamp) * 1e3),
          l = d - c;
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
          `[Measurements] Normalized ${o} from ${c} to ${d} (${l})`), Y[o].value = d
      });
      const a = Y["mark.fid"];
      a && Y.fid && (ae(t, {
        description: "first input delay",
        endTimestamp: a.value + j(Y.fid.value),
        op: "ui.action",
        startTimestamp: a.value
      }), delete Y["mark.fid"]), "fcp" in Y || delete Y.cls, Object.keys(Y).forEach(o => {
        t.setMeasurement(o, Y[o].value, Y[o].unit)
      }), f_(t)
    }
    ht = void 0, Te = void 0, Y = {}
  }

  function o_(t, e, n, r, i) {
    const s = i + n,
      a = s + r;
    return ae(t, {
      description: e.name,
      endTimestamp: a,
      op: e.entryType,
      startTimestamp: s
    }), s
  }

  function c_(t, e, n) {
    ["unloadEvent", "redirect", "domContentLoadedEvent", "loadEvent", "connect"].forEach(r => {
        Xe(t, e, r, n)
      }), Xe(t, e, "secureConnection", n, "TLS/SSL", "connectEnd"), Xe(t, e, "fetch", n, "cache", "domainLookupStart"),
      Xe(t, e, "domainLookup", n, "DNS"), u_(t, e, n)
  }

  function Xe(t, e, n, r, i, s) {
    const a = s ? e[s] : e[`${n}End`],
      o = e[`${n}Start`];
    !o || !a || ae(t, {
      op: "browser",
      description: i || n,
      startTimestamp: r + j(o),
      endTimestamp: r + j(a)
    })
  }

  function u_(t, e, n) {
    ae(t, {
      op: "browser",
      description: "request",
      startTimestamp: n + j(e.requestStart),
      endTimestamp: n + j(e.responseEnd)
    }), ae(t, {
      op: "browser",
      description: "response",
      startTimestamp: n + j(e.responseStart),
      endTimestamp: n + j(e.responseEnd)
    })
  }

  function d_(t, e, n, r, i, s) {
    if (e.initiatorType === "xmlhttprequest" || e.initiatorType === "fetch") return;
    const a = {};
    "transferSize" in e && (a["http.response_transfer_size"] = e.transferSize), "encodedBodySize" in e && (a[
      "http.response_content_length"] = e.encodedBodySize), "decodedBodySize" in e && (a[
      "http.decoded_response_content_length"] = e.decodedBodySize), "renderBlockingStatus" in e && (a[
      "resource.render_blocking_status"] = e.renderBlockingStatus);
    const o = s + r,
      c = o + i;
    ae(t, {
      description: n,
      endTimestamp: c,
      op: e.initiatorType ? `resource.${e.initiatorType}` : "resource.other",
      startTimestamp: o,
      data: a
    })
  }

  function l_(t) {
    const e = C.navigator;
    if (!e) return;
    const n = e.connection;
    n && (n.effectiveType && t.setTag("effectiveConnectionType", n.effectiveType), n.type && t.setTag("connectionType",
        n.type), Ln(n.rtt) && (Y["connection.rtt"] = {
        value: n.rtt,
        unit: "millisecond"
      })), Ln(e.deviceMemory) && t.setTag("deviceMemory", `${e.deviceMemory} GB`), Ln(e.hardwareConcurrency) && t
      .setTag("hardwareConcurrency", String(e.hardwareConcurrency))
  }

  function f_(t) {
    ht && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Measurements] Adding LCP Data"), ht.element &&
      t.setTag("lcp.element", Pt(ht.element)), ht.id && t.setTag("lcp.id", ht.id), ht.url && t.setTag("lcp.url", ht
        .url.trim().slice(0, 200)), t.setTag("lcp.size", ht.size)), Te && Te.sources && ((typeof __SENTRY_DEBUG__ >
      "u" || __SENTRY_DEBUG__) && f.log("[Measurements] Adding CLS Data"), Te.sources.forEach((e, n) => t.setTag(
      `cls.source.${n+1}`, Pt(e.node))))
  }
  const dr = ["localhost", /^\//],
    mn = {
      traceFetch: !0,
      traceXHR: !0,
      tracingOrigins: dr,
      tracePropagationTargets: dr
    };

  function Da(t) {
    const {
      traceFetch: e,
      traceXHR: n,
      tracePropagationTargets: r,
      tracingOrigins: i,
      shouldCreateSpanForRequest: s
    } = {
      traceFetch: mn.traceFetch,
      traceXHR: mn.traceXHR,
      ...t
    }, a = typeof s == "function" ? s : u => !0, o = u => __(u, r || i), c = {};
    e && V("fetch", u => {
      h_(u, a, o, c)
    }), n && V("xhr", u => {
      m_(u, a, o, c)
    })
  }

  function __(t, e) {
    return ue(t, e || dr)
  }

  function h_(t, e, n, r) {
    if (!Er() || !(t.fetchData && e(t.fetchData.url))) return;
    if (t.endTimestamp) {
      const c = t.fetchData.__span;
      if (!c) return;
      const u = r[c];
      u && (t.response ? u.setHttpStatus(t.response.status) : t.error && u.setStatus("internal_error"), u.finish(),
        delete r[c]);
      return
    }
    const i = t.response && t.response.headers && t.response.headers.get("content-length"),
      s = g().getScope(),
      a = s && s.getSpan(),
      o = a && a.transaction;
    if (a && o) {
      const {
        method: c,
        url: u
      } = t.fetchData, d = a.startChild({
        data: {
          url: u,
          type: "fetch",
          ...i ? {
            "http.response_content_length": i
          } : {},
          "http.method": c
        },
        description: `${c} ${u}`,
        op: "http.client"
      });
      t.fetchData.__span = d.spanId, r[d.spanId] = d;
      const l = t.args[0];
      t.args[1] = t.args[1] || {};
      const h = t.args[1];
      n(t.fetchData.url) && (h.headers = p_(l, o.getDynamicSamplingContext(), d, h))
    }
  }

  function p_(t, e, n, r) {
    const i = os(e),
      s = n.toTraceparent(),
      a = typeof Request < "u" && Ut(t, Request) ? t.headers : r.headers;
    if (a)
      if (typeof Headers < "u" && Ut(a, Headers)) {
        const o = new Headers(a);
        return o.append("sentry-trace", s), i && o.append(jn, i), o
      } else if (Array.isArray(a)) {
      const o = [...a, ["sentry-trace", s]];
      return i && o.push([jn, i]), o
    } else {
      const o = "baggage" in a ? a.baggage : void 0,
        c = [];
      return Array.isArray(o) ? c.push(...o) : o && c.push(o), i && c.push(i), {
        ...a,
        "sentry-trace": s,
        baggage: c.length > 0 ? c.join(",") : void 0
      }
    } else return {
      "sentry-trace": s,
      baggage: i
    }
  }

  function m_(t, e, n, r) {
    const i = t.xhr,
      s = i && i[Rt];
    if (!Er() || i && i.__sentry_own_request__ || !(i && s && e(s.url))) return;
    if (t.endTimestamp) {
      const u = i.__sentry_xhr_span_id__;
      if (!u) return;
      const d = r[u];
      d && (d.setHttpStatus(s.status_code), d.finish(), delete r[u]);
      return
    }
    const a = g().getScope(),
      o = a && a.getSpan(),
      c = o && o.transaction;
    if (o && c) {
      const u = o.startChild({
        data: {
          ...s.data,
          type: "xhr",
          "http.method": s.method,
          url: s.url
        },
        description: `${s.method} ${s.url}`,
        op: "http.client"
      });
      if (i.__sentry_xhr_span_id__ = u.spanId, r[i.__sentry_xhr_span_id__] = u, i.setRequestHeader && n(s.url)) try {
        i.setRequestHeader("sentry-trace", u.toTraceparent());
        const d = c.getDynamicSamplingContext(),
          l = os(d);
        l && i.setRequestHeader(jn, l)
      } catch (d) {}
    }
  }

  function g_(t, e = !0, n = !0) {
    if (!C || !C.location) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
        "Could not initialize routing instrumentation due to invalid location");
      return
    }
    let r = C.location.href,
      i;
    e && (i = t({
      name: C.location.pathname,
      startTimestamp: bt ? bt / 1e3 : void 0,
      op: "pageload",
      metadata: {
        source: "url"
      }
    })), n && V("history", ({
      to: s,
      from: a
    }) => {
      if (a === void 0 && r && r.indexOf(s) !== -1) {
        r = void 0;
        return
      }
      a !== s && (r = void 0, i && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        `[Tracing] Finishing current transaction with op: ${i.op}`), i.finish()), i = t({
        name: C.location.pathname,
        op: "navigation",
        metadata: {
          source: "url"
        }
      }))
    })
  }
  const y_ = "BrowserTracing",
    E_ = {
      ...Qe,
      markBackgroundTransactions: !0,
      routingInstrumentation: g_,
      startTransactionOnLocationChange: !0,
      startTransactionOnPageLoad: !0,
      enableLongTask: !0,
      _experiments: {},
      ...mn
    };
  class Ar {
    __init() {
      this.name = y_
    }
    constructor(e) {
      Ar.prototype.__init.call(this), _s(), this.options = {
          ...E_,
          ...e
        }, this.options._experiments.enableLongTask !== void 0 && (this.options.enableLongTask = this.options
          ._experiments.enableLongTask), e && !e.tracePropagationTargets && e.tracingOrigins && (this.options
          .tracePropagationTargets = e.tracingOrigins), this._collectWebVitals = t_(), this.options.enableLongTask &&
        e_(), this.options._experiments.enableInteractions && n_()
    }
    setupOnce(e, n) {
      this._getCurrentHub = n;
      const {
        routingInstrumentation: r,
        startTransactionOnLocationChange: i,
        startTransactionOnPageLoad: s,
        markBackgroundTransactions: a,
        traceFetch: o,
        traceXHR: c,
        tracePropagationTargets: u,
        shouldCreateSpanForRequest: d,
        _experiments: l
      } = this.options;
      r(h => {
        const _ = this._createRouteTransaction(h);
        return this.options._experiments.onStartRouteTransaction && this.options._experiments
          .onStartRouteTransaction(_, h, n), _
      }, s, i), a && Wf(), l.enableInteractions && this._registerInteractionListener(), Da({
        traceFetch: o,
        traceXHR: c,
        tracePropagationTargets: u,
        shouldCreateSpanForRequest: d
      })
    }
    _createRouteTransaction(e) {
      if (!this._getCurrentHub) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
          `[Tracing] Did not create ${e.op} transaction because _getCurrentHub is invalid.`);
        return
      }
      const {
        beforeNavigate: n,
        idleTimeout: r,
        finalTimeout: i,
        heartbeatInterval: s
      } = this.options, a = e.op === "pageload", o = a ? Ai("sentry-trace") : null, c = a ? Ai("baggage") : null, u =
        o ? ns(o) : void 0, d = c ? $o(c) : void 0, l = {
          ...e,
          ...u,
          metadata: {
            ...e.metadata,
            dynamicSamplingContext: u && !d ? {} : d
          },
          trimEnd: !0
        }, h = typeof n == "function" ? n(l) : l, _ = h === void 0 ? {
          ...l,
          sampled: !1
        } : h;
      _.metadata = _.name !== l.name ? {
          ..._.metadata,
          source: "custom"
        } : _.metadata, this._latestRouteName = _.name, this._latestRouteSource = _.metadata && _.metadata.source, _
        .sampled === !1 && (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
          `[Tracing] Will not send ${_.op} transaction because of beforeNavigate.`), (typeof __SENTRY_DEBUG__ > "u" ||
          __SENTRY_DEBUG__) && f.log(`[Tracing] Starting ${_.op} transaction on scope`);
      const p = this._getCurrentHub(),
        {
          location: w
        } = C,
        D = Jr(p, _, r, i, !0, {
          location: w
        }, s);
      return D.registerBeforeFinishCallback(S => {
        this._collectWebVitals(), a_(S)
      }), D
    }
    _registerInteractionListener() {
      let e;
      const n = () => {
        const {
          idleTimeout: r,
          finalTimeout: i,
          heartbeatInterval: s
        } = this.options, a = "ui.action.click", o = le();
        if (o && o.op && ["navigation", "pageload"].includes(o.op)) {
          (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
            `[Tracing] Did not create ${a} transaction because a pageload or navigation transaction is in progress.`
          );
          return
        }
        if (e && (e.setFinishReason("interactionInterrupted"), e.finish(), e = void 0), !this._getCurrentHub) {
          (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
            `[Tracing] Did not create ${a} transaction because _getCurrentHub is invalid.`);
          return
        }
        if (!this._latestRouteName) {
          (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.warn(
            `[Tracing] Did not create ${a} transaction because _latestRouteName is missing.`);
          return
        }
        const c = this._getCurrentHub(),
          {
            location: u
          } = C,
          d = {
            name: this._latestRouteName,
            op: a,
            trimEnd: !0,
            metadata: {
              source: this._latestRouteSource || "url"
            }
          };
        e = Jr(c, d, r, i, !0, {
          location: u
        }, s)
      };
      ["click"].forEach(r => {
        addEventListener(r, n, {
          once: !1,
          capture: !0
        })
      })
    }
  }

  function Ai(t) {
    const e = ja(`meta[name=${t}]`);
    return e ? e.getAttribute("content") : null
  }

  function Ie(t) {
    return new Promise((e, n) => {
      t.oncomplete = t.onsuccess = () => e(t.result), t.onabort = t.onerror = () => n(t.error)
    })
  }

  function S_(t, e) {
    const n = indexedDB.open(t);
    n.onupgradeneeded = () => n.result.createObjectStore(e);
    const r = Ie(n);
    return i => r.then(s => i(s.transaction(e, "readwrite").objectStore(e)))
  }

  function xa(t) {
    return Ie(t.getAllKeys())
  }

  function b_(t, e, n) {
    return t(r => xa(r).then(i => {
      if (!(i.length >= n)) return r.put(e, Math.max(...i, 0) + 1), Ie(r.transaction)
    }))
  }

  function w_(t) {
    return t(e => xa(e).then(n => {
      if (n.length !== 0) return Ie(e.get(n[0])).then(r => (e.delete(n[0]), Ie(e.transaction).then(() => r)))
    }))
  }

  function T_(t) {
    let e;

    function n() {
      return e == null && (e = S_(t.dbName || "sentry-offline", t.storeName || "queue")), e
    }
    return {
      insert: async r => {
        try {
          const i = await rs(r, t.textEncoder);
          await b_(n(), i, t.maxQueueSize || 30)
        } catch (i) {}
      },
      pop: async () => {
        try {
          const r = await w_(n());
          if (r) return Co(r, t.textEncoder || new TextEncoder, t.textDecoder || new TextDecoder)
        } catch (r) {}
      }
    }
  }

  function v_(t) {
    return e => t({
      ...e,
      createStore: T_
    })
  }

  function R_(t) {
    return v_(Bc(t))
  }

  function k_(t) {
    let e = [],
      n = {};
    return {
      add(r, i) {
        for (; e.length >= t;) {
          const s = e.shift();
          s !== void 0 && delete n[s]
        }
        n[r] && this.delete(r), e.push(r), n[r] = i
      },
      clear() {
        n = {}, e = []
      },
      get(r) {
        return n[r]
      },
      size() {
        return e.length
      },
      delete(r) {
        if (!n[r]) return !1;
        delete n[r];
        for (let i = 0; i < e.length; i++)
          if (e[i] === r) {
            e.splice(i, 1);
            break
          } return !0
      }
    }
  }
  const lr = k_(20),
    Ci = 1e6,
    rn = String(0),
    N_ = "main";
  let Ia = "",
    Oa = "",
    Aa = "",
    fr = y.navigator && y.navigator.userAgent || "",
    Ca = "";
  const D_ = y.navigator && y.navigator.language || y.navigator && y.navigator.languages && y.navigator.languages[0] ||
    "";

  function x_(t) {
    return typeof t == "object" && t !== null && "getHighEntropyValues" in t
  }
  const Ui = y.navigator && y.navigator.userAgentData;
  x_(Ui) && Ui.getHighEntropyValues(["architecture", "model", "platform", "platformVersion", "fullVersionList"]).then(
    t => {
      if (Ia = t.platform || "", Aa = t.architecture || "", Ca = t.model || "", Oa = t.platformVersion || "", t
        .fullVersionList && t.fullVersionList.length > 0) {
        const e = t.fullVersionList[t.fullVersionList.length - 1];
        fr = `${e.brand} ${e.version}`
      }
    }).catch(t => {});

  function I_(t) {
    return !("thread_metadata" in t)
  }

  function O_(t) {
    return I_(t) ? M_(t) : t
  }

  function A_(t) {
    if (!(!t || !t.sdk)) return {
      name: t.sdk.name,
      version: t.sdk.version
    }
  }

  function C_(t, e) {
    return e && (t.sdk = t.sdk || {}, t.sdk.name = t.sdk.name || e.name || "unknown sdk", t.sdk.version = t.sdk
      .version || e.version || "unknown sdk version", t.sdk.integrations = [...t.sdk.integrations || [], ...e
        .integrations || []
      ], t.sdk.packages = [...t.sdk.packages || [], ...e.packages || []]), t
  }

  function U_(t, e, n, r) {
    const i = t.sdkProcessingMetadata && t.sdkProcessingMetadata.dynamicSamplingContext;
    return {
      event_id: t.event_id,
      sent_at: new Date().toISOString(),
      ...e && {
        sdk: e
      },
      ...!!n && {
        dsn: ce(r)
      },
      ...t.type === "transaction" && i && {
        trace: ut({
          ...i
        })
      }
    }
  }

  function B_(t) {
    const e = t && t.contexts && t.contexts.trace && t.contexts.trace.trace_id;
    return typeof e == "string" && e.length !== 32 && (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      `[Profiling] Invalid traceId: ${e} on profiled event`), typeof e != "string" ? "" : e
  }

  function L_(t, e, n, r) {
    if (t.type !== "transaction") throw new TypeError(
      "Profiling events may only be attached to transactions, this should never occur.");
    const i = t.sdkProcessingMetadata.profile;
    if (i == null) throw new TypeError(
      `Cannot construct profiling event envelope without a valid profile. Got ${i} instead.`);
    if (!i.profile_id) throw new TypeError("Profile is missing profile_id");
    if (i.samples.length <= 1) return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      "[Profiling] Discarding profile because it contains less than 2 samples"), null;
    const s = B_(t),
      a = A_(n);
    C_(t, n && n.sdk);
    const o = U_(t, a, r, e),
      c = O_(i),
      u = typeof t.start_timestamp == "number" ? t.start_timestamp * 1e3 : Date.now(),
      d = typeof t.timestamp == "number" ? t.timestamp * 1e3 : Date.now(),
      l = {
        event_id: i.profile_id,
        timestamp: new Date(u).toISOString(),
        platform: "javascript",
        version: "1",
        release: t.release || "",
        environment: t.environment || En,
        runtime: {
          name: "javascript",
          version: y.navigator.userAgent
        },
        os: {
          name: Ia,
          version: Oa,
          build_number: fr
        },
        device: {
          locale: D_,
          model: Ca,
          manufacturer: fr,
          architecture: Aa,
          is_emulator: !1
        },
        profile: c,
        transactions: [{
          name: t.transaction || "",
          id: t.event_id || lt(),
          trace_id: s,
          active_thread_id: rn,
          relative_start_ns: "0",
          relative_end_ns: ((d - u) * 1e6).toFixed(0)
        }]
      };
    return Wt(o, [
      [{
        type: "profile"
      }, l]
    ])
  }

  function M_(t) {
    let e, n = 0;
    const r = {
      samples: [],
      stacks: [],
      frames: [],
      thread_metadata: {
        [rn]: {
          name: N_
        }
      }
    };
    if (!t.samples.length) return r;
    const i = t.samples[0].timestamp;
    for (let s = 0; s < t.samples.length; s++) {
      const a = t.samples[s];
      if (a.stackId === void 0) {
        e === void 0 && (e = n, r.stacks[e] = [], n++), r.samples[s] = {
          elapsed_since_start_ns: ((a.timestamp - i) * Ci).toFixed(0),
          stack_id: e,
          thread_id: rn
        };
        continue
      }
      let o = t.stacks[a.stackId];
      const c = [];
      for (; o;) {
        c.push(o.frameId);
        const d = t.frames[o.frameId];
        r.frames[o.frameId] === void 0 && (r.frames[o.frameId] = {
          function: d.name,
          file: d.resourceId ? t.resources[d.resourceId] : void 0,
          line: d.line,
          column: d.column
        }), o = o.parentId === void 0 ? void 0 : t.stacks[o.parentId]
      }
      const u = {
        elapsed_since_start_ns: ((a.timestamp - i) * Ci).toFixed(0),
        stack_id: n,
        thread_id: rn
      };
      r.stacks[n] = c, r.samples[s] = u, n++
    }
    return r
  }

  function G_(t, e) {
    const n = lr.get(t);
    if (!n) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] Couldn't find a transaction event for this profile, dropping it.");
      return
    }
    n.sdkProcessingMetadata = n.sdkProcessingMetadata || {}, n.sdkProcessingMetadata && !n.sdkProcessingMetadata
      .profile && (n.sdkProcessingMetadata.profile = e);
    const i = g().getClient();
    if (!i) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] getClient did not return a Client, removing profile from event and forwarding to next event processors."
      );
      return
    }
    const s = i.getDsn();
    if (!s) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] getDsn did not return a Dsn, removing profile from event and forwarding to next event processors."
      );
      return
    }
    const a = i.getTransport();
    if (!a) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] getTransport did not return a Transport, removing profile from event and forwarding to next event processors."
      );
      return
    }(typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      "[Profiling] Preparing envelope and sending a profiling event");
    const o = L_(n, s);
    if (lr.delete(t), !o) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Profiling] Failed to construct envelope");
      return
    }(typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Profiling] Envelope constructed, sending it"), a
      .send(o).then(null, c => {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Profiling] Error while sending event:", c)
      })
  }
  const Bi = 3e4;
  let Li = !1;

  function P_(t) {
    return typeof t == "function"
  }

  function Y_(t) {
    return t ? Ua(t) : ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      "[Profiling] Transaction is undefined, skipping profiling"), t)
  }

  function Ua(t) {
    const e = y.Profiler;
    if (!P_(e)) return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      "[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object."), t;
    if (!t.sampled) return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      "[Profiling] Transaction is not sampled, skipping profiling"), t;
    if (Li) return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      "[Profiling] Profiling has been disabled for the duration of the current user session."), t;
    const n = g().getClient(),
      r = n && n.getOptions(),
      i = r && r.profilesSampleRate || 0;
    if (i === void 0) return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      "[Profiling] Profiling disabled, enable it by setting `profilesSampleRate` option to SDK init call."), t;
    if (Math.random() > i) return (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      "[Profiling] Skip profiling transaction due to sampling."), t;
    const s = 10,
      a = Math.floor(Bi / s);
    let o;
    try {
      o = new e({
        sampleInterval: s,
        maxBufferSize: a
      })
    } catch (p) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && (f.log(
        "[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header."
      ), f.log("[Profiling] Disabling profiling for current user session.")), Li = !0
    }
    if (!o) return t;
    (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
      `[Profiling] started profiling transaction: ${t.name||t.description}`);
    const c = lt();
    let u = null;

    function d() {
      if (t && o) {
        if (u) {
          (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log("[Profiling] profile for:", t.name || t
            .description, "already exists, returning early");
          return
        }
        o.stop().then(p => {
          if (l && (y.clearTimeout(l), l = void 0), (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
              `[Profiling] stopped profiling of transaction: ${t.name||t.description}`), !p) {
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
              `[Profiling] profiler returned null profile for: ${t.name||t.description}`,
              "this may indicate an overlapping transaction or a call to stopProfiling with a profile title that was never started"
            );
            return
          }
          p.samples.length < 2 || (u = {
            ...p,
            profile_id: c
          }, G_(c, u))
        }).catch(p => ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
          "[Profiling] error while stopping profiler:", p), null))
      }
    }
    let l = y.setTimeout(() => {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] max profile duration elapsed, stopping profiling for:", t.name || t.description), d()
    }, Bi);
    const h = t.finish.bind(t);

    function _() {
      return t && (d(), t.setContext("profile", {
        profile_id: c
      })), h()
    }
    return t.finish = _, t
  }

  function F_(t) {
    return function(n, r) {
      const i = t.call(this, n, r);
      return i === void 0 ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] Transaction is undefined, skipping profiling"), i) : Ua(i)
    }
  }

  function z_() {
    const t = de();
    if (!t.__SENTRY__) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] Can't find main carrier, profiling won't work.");
      return
    }
    if (t.__SENTRY__.extensions = t.__SENTRY__.extensions || {}, !t.__SENTRY__.extensions.startTransaction) {
      (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] startTransaction does not exists, profiling will not work. Make sure you import @sentry/tracing package before @sentry/profiling-node as import order matters."
      );
      return
    }(typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] startTransaction exists, patching it with profiling functionality..."), t.__SENTRY__.extensions
      .startTransaction = F_(t.__SENTRY__.extensions.startTransaction)
  }
  class Cr {
    constructor() {
      Cr.prototype.__init.call(this)
    }
    __init() {
      this.name = "BrowserProfilingIntegration"
    }
    setupOnce(e) {
      z_(), e(this.handleGlobalEvent.bind(this))
    }
    handleGlobalEvent(e) {
      const n = e.contexts && e.contexts.profile && e.contexts.profile.profile_id;
      return n && typeof n == "string" && ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && f.log(
        "[Profiling] Profiling event found, caching it."), lr.add(n, e)), e
    }
  }
  let Ba = {};
  y.Sentry && y.Sentry.Integrations && (Ba = y.Sentry.Integrations);
  const $_ = {
      ...Ba,
      ...Zc,
      ...Qu
    },
    H_ = Object.freeze(Object.defineProperty({
      __proto__: null,
      Breadcrumbs: $t,
      BrowserClient: xs,
      BrowserProfilingIntegration: Cr,
      BrowserTracing: Ar,
      Dedupe: At,
      FunctionToString: Ft,
      GlobalHandlers: mt,
      HttpContext: Ot,
      Hub: yr,
      InboundFilters: xt,
      Integrations: $_,
      LinkedErrors: It,
      Replay: xe,
      SDK_VERSION: Zn,
      Scope: Dt,
      TryCatch: Ht,
      WINDOW: y,
      addBreadcrumb: hs,
      addGlobalEventProcessor: Ae,
      addTracingExtensions: _s,
      captureEvent: ac,
      captureException: bn,
      captureMessage: sc,
      captureUserFeedback: Ju,
      chromeStackLineParser: As,
      close: Vu,
      configureScope: oc,
      createTransport: Sr,
      createUserFeedbackEnvelope: Ds,
      defaultIntegrations: Hs,
      defaultRequestInstrumentationOptions: mn,
      defaultStackLineParsers: Bs,
      defaultStackParser: Ls,
      eventFromException: Rs,
      eventFromMessage: ks,
      extractTraceparentData: ns,
      flush: Zu,
      forceLoad: Wu,
      geckoStackLineParser: Cs,
      getActiveTransaction: le,
      getCurrentHub: g,
      getHubFromCarrier: cn,
      init: js,
      instrumentOutgoingRequests: Da,
      lastEventId: ju,
      makeBrowserOfflineTransport: R_,
      makeFetchTransport: Is,
      makeMain: Wn,
      makeMultiplexedTransport: Mc,
      makeXHRTransport: Os,
      onLoad: qu,
      onProfilingStartRouteTransaction: Y_,
      opera10StackLineParser: Ru,
      opera11StackLineParser: Du,
      setContext: ps,
      setExtra: uc,
      setExtras: cc,
      setTag: lc,
      setTags: dc,
      setUser: fc,
      showReportDialog: Hu,
      spanStatusfromHttpCode: ls,
      startTransaction: _c,
      trace: ic,
      winjsStackLineParser: Us,
      withScope: ms,
      wrap: Xu
    }, Symbol.toStringTag, {
      value: "Module"
    })),
    j_ = "https://75521e9e145e4ede8272f960ecec887b@o23479.ingest.sentry.io/1545626",
    W_ = "production";
  var Ke = [];
  js({
    dsn: j_,
    environment: W_,
    ignoreErrors: ["top.GLOBALS", "originalCreateNotification", "canvas.contentDocument",
      "MyApp_RemoveAllHighlights", "http://tt.epicplay.com", "Can't find variable: ZiteReader",
      "jigsaw is not defined", "ComboSearch is not defined", "http://loading.retry.widdit.com/",
      "atomicFindClose", "fb_xd_fragment", "bmi_SafeAddOnload", "EBCallBackMessageReceived", "conduitPage",
      "_tfa is not defined", "Can't find variable: _tfa", "Can't find variable: iom", "iom is not defined",
      "Can't find variable: _vwo_code", "_vwo_code is not defined",
      "Can't find variable: msDiscoverChatAvailable", "Non-Error promise rejection captured with value:",
      "undefined is not an object (evaluating", "missing ) after argument list",
      "null is not an object (evaluating", "SecurityError", "Failed to load", "Failed to fetch", "Load failed",
      "vcmidOfContent is not defined", "onGoogleTranslateError", "Can't find variable: _AutofillCallbackHandler",
      "Can't find variable: zaloJSV2", "Can't find variable: appControl", "appControl is not defined",
      "ResizeObserver loop limit exceeded", "out of memory", "Can't find variable: __firefox__",
      "UET is not defined", "pushNotification", "Identifier 'VIDEO_PLAYING' has already been declared",
      "NetworkError when attempting to fetch resource.", "Firebase SDK", "zoid destroyed all components",
      "transaction_id", "Notification.requestPermission"
    ],
    beforeSend(t, e) {
      let n = !1;
      const r = a([/\/OneSignal\/OneSignal-Website-SDK/i, /C:\//i, /https:\/\/omnisnippet1\.com/i,
          /https:\/\/www\.googletagmanager\.com\/gtm\.js\?id=GTM-WWQRLLH&l=gtmLayer/i, /uploads\/2319\/websites/i,
          /i18n\/pixel\/static\/main/i, /assets\/firebase/i
        ]),
        i = ["/inshop/launcher-v2.js", "/sdks/OneSignalSDK.js", "/sdks/OneSignalPageSDKES6.js", "", "/gtm.js",
          "/gtag/js", "/uwt.js", "/scripts/sdk/everflow.js", "/js/widget.js"
        ];

      function s(o) {
        return Object.prototype.toString.call(o) === "[object String]"
      }

      function a(o) {
        var c = [];
        for (let u = 0; u < o.length; u++) {
          let d = o[u];
          s(d) ? c.push(d.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1")) : d && d.source && c.push(d.source)
        }
        return new RegExp(c.join("|"), "i")
      }
      if (t && t.request && t.request.url && a([/graph\.facebook\.com/i, /connect\.facebook\.net\/en_US\/all\.js/i,
          /eatdifferent\.com\.woopra-ns\.com/i, /static\.woopra\.com\/js\/woopra\.js/i, /extensions\//i,
          /^chrome:\/\//i, /127\.0\.0\.1:4001\/isrunning/i, /webappstoolbarba\.texthelp\.com\//i,
          /metrics\.itunes\.apple\.com\.edgesuite\.net\//i, /dsw0trk\.com\/scripts\/sdk\/everflow\.js/i,
          /theme\.js\.download/i, /file:/i, /C:\//i, /sc\-static\.net\/scevent\.min\.js/i,
          /checkout\.bootstrap\.js/i
        ]).test(t.request.url) || e && e.originalException && e.originalException.stack && a([
          /\/\/js\.klarna\.com/i, /\<\!DOCTYPE html\>/i
        ]).test(e.originalException.stack)) return null;
      if (e && e.originalException && e.originalException.message)
        if (e.originalException.message in Ke) {
          if (Ke[e.originalException.message] += 1, Ke[e.originalException.message] > 5) return null
        } else Ke[e.originalException.message] = 1;
      if (t && t.exception && t.exception.values && t.exception.values[0] && t.exception.values[0].stacktrace && t
        .exception.values[0].stacktrace.frames && t.exception.values[0].stacktrace.frames[0]) {
        if (["<anonymous>", "undefined"].includes(t.exception.values[0].stacktrace.frames[0].filename)) return null;
        t.exception.values[0].stacktrace.frames.forEach(o => {
          (i.includes(o.filename) || r.test(o.filename)) && (n = !0)
        })
      }
      return n ? null : t
    }
  });
  window.Sentry = H_;
  export {
    q_ as __vite_legacy_guard
  };
  </script>
  <link rel="preload" as="style" href="../build/assets/product-18c14ec7.css">
  <link rel="stylesheet" href="../build/assets/product-18c14ec7.css" data-navigate-track="reload">
  <link rel="preload" as="style" href="../build/assets/theme-96012385.css">
  <link rel="stylesheet" href="../build/assets/theme-96012385.css" data-navigate-track="reload">
  <link rel="preload" as="style" href="../build/assets/main-5647c3e9.css">
  <link rel="stylesheet" href="../build/assets/main-5647c3e9.css" data-navigate-track="reload">
  <link rel="preload" as="style" href="../build/assets/legacy-41783ffe.css">
  <link rel="stylesheet" href="../build/assets/legacy-41783ffe.css" data-navigate-track="reload">
  <!-- Livewire Styles -->
  <style>
  [wire\:loading][wire\:loading],
  [wire\:loading\.delay][wire\:loading\.delay],
  [wire\:loading\.inline-block][wire\:loading\.inline-block],
  [wire\:loading\.inline][wire\:loading\.inline],
  [wire\:loading\.block][wire\:loading\.block],
  [wire\:loading\.flex][wire\:loading\.flex],
  [wire\:loading\.table][wire\:loading\.table],
  [wire\:loading\.grid][wire\:loading\.grid],
  [wire\:loading\.inline-flex][wire\:loading\.inline-flex] {
    display: none;
  }

  [wire\:loading\.delay\.none][wire\:loading\.delay\.none],
  [wire\:loading\.delay\.shortest][wire\:loading\.delay\.shortest],
  [wire\:loading\.delay\.shorter][wire\:loading\.delay\.shorter],
  [wire\:loading\.delay\.short][wire\:loading\.delay\.short],
  [wire\:loading\.delay\.default][wire\:loading\.delay\.default],
  [wire\:loading\.delay\.long][wire\:loading\.delay\.long],
  [wire\:loading\.delay\.longer][wire\:loading\.delay\.longer],
  [wire\:loading\.delay\.longest][wire\:loading\.delay\.longest] {
    display: none;
  }

  [wire\:offline][wire\:offline] {
    display: none;
  }

  [wire\:dirty]:not(textarea):not(input):not(select) {
    display: none;
  }

  :root {
    --livewire-progress-bar-color: #2299dd;
  }

  [x-cloak] {
    display: none !important;
  }
  </style>
  <link rel="modulepreload" href="../build/assets/lazyload-b45a339c.js">
  <link rel="modulepreload" href="../build/assets/will-be-removed-26958b56.js">
  <link rel="modulepreload" href="../build/assets/jquery-d5fcc973.js">
  <link rel="modulepreload" href="../build/assets/intersection-observer-90e9e37b.js">
  <link rel="modulepreload" href="../build/assets/index-9b5fec24.js">
  <link rel="modulepreload" href="../build/assets/_commonjsHelpers-042e6b4d.js">
  <link rel="modulepreload" href="../build/assets/jquery-98d6ae90.js">
  <link rel="modulepreload" href="../build/assets/theme-6f6249aa.js">
  <link rel="modulepreload" href="../build/assets/livewire.esm-4135611c.js">
  <link rel="modulepreload" href="../build/assets/upsell-estimated-taxes-56747000.js">
  <link rel="modulepreload" href="../build/assets/bootstrap-74b4457f.js">
  <link rel="modulepreload" href="../build/assets/whoops-b9817266.js">
  <link rel="modulepreload" href="../build/assets/normalize-636e2359.js">
  <link rel="modulepreload" href="../build/assets/text-wrapper-04ace8f7.js">
  <link rel="modulepreload" href="../build/assets/track-visited-pages-a7c6edb5.js">
  <link rel="modulepreload" href="../build/assets/choices-dd9eec53.js">
  <link rel="modulepreload" href="../build/assets/product-value-parser-25984bef.js">
  <link rel="modulepreload" href="../build/assets/dynamic-module-import-a60ef581.js">
  <link rel="modulepreload" href="../build/assets/debounce-b1b63336.js">
  <link rel="modulepreload" href="../build/assets/preload-helper-6f27e6cf.js">
  <link rel="modulepreload" href="../build/assets/alpine-c76fbf9d.js">
  <link rel="modulepreload" href="../build/assets/cart-option-64ed5f72.js">
  <script type="module" src="../build/assets/lazyload-b45a339c.js" data-navigate-track="reload"></script>
  <script type="module" src="../build/assets/will-be-removed-26958b56.js" data-navigate-track="reload"></script>
  <script type="module" src="../build/assets/theme-6f6249aa.js" data-navigate-track="reload"></script>
  <script type="module" src="../build/assets/alpine-c76fbf9d.js" data-navigate-track="reload"></script>
  <link rel="modulepreload" href="../build/assets/payments-f0f19c6e.js">
  <link rel="modulepreload" href="../build/assets/fraudnet-27cf94d3.js">
  <link rel="modulepreload" href="../build/assets/_commonjsHelpers-042e6b4d.js">
  <link rel="modulepreload" href="../build/assets/choices-dd9eec53.js">
  <link rel="modulepreload" href="../build/assets/process-blik-fcf9ff07.js">
  <link rel="modulepreload" href="../build/assets/debounce-b1b63336.js">
  <link rel="modulepreload" href="../build/assets/cart-option-64ed5f72.js">
  <link rel="modulepreload" href="../build/assets/jquery-d5fcc973.js">
  <link rel="modulepreload" href="../build/assets/jquery-98d6ae90.js">
  <link rel="modulepreload" href="../build/assets/livewire.esm-4135611c.js">
  <link rel="modulepreload" href="../build/assets/moment-64d44b98.js">
  <link rel="modulepreload" href="../build/assets/product-value-parser-25984bef.js">
  <script type="module" src="../build/assets/payments-f0f19c6e.js" data-navigate-track="reload"></script>
  <script>
  function initiatePayments() {
    window.paymentsAPI = window.initPayments({
      "brand": "huusk",
      "brand_name": "Huusk",
      "routes": {
        "klarnaPostSession": "https:\/\/get-huusk.com\/klarna\/session?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&ka=K920395&brand=huusk",
        "klarnaPutSession": "https:\/\/get-huusk.com\/klarna\/session\/:id?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&ka=K920395&brand=huusk",
        "klarnaCreate": "https:\/\/get-huusk.com\/klarna\/checkout\/create?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&ka=K920395&brand=huusk",
        "klarnaUpdate": "https:\/\/get-huusk.com\/klarna\/checkout\/update?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&ka=K920395&brand=huusk",
        "klarnaResolve": "https:\/\/get-huusk.com\/klarna\/resolve?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&ka=K920395&brand=huusk",
        "paypalToken": "https:\/\/get-huusk.com\/paypal\/token?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "paypalCreditToken": "https:\/\/get-huusk.com\/paypal\/credit-token?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "paypalCreateOrder": "https:\/\/get-huusk.com\/paypal\/order\/create?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "ixoPayResolve": "https:\/\/get-huusk.com\/huusk\/ixo-pay\/resolve?brand=huusk&uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051",
        "nuveiResolve": "https:\/\/get-huusk.com\/nuvei\/resolve?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "applePayResolve": "https:\/\/get-huusk.com\/apple-pay\/resolve?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "googlePayResolve": "https:\/\/get-huusk.com\/google-pay\/resolve?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "stripeResolve": "https:\/\/get-huusk.com\/stripe\/resolve?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "totalProcessingCreateCheckout": "https:\/\/get-huusk.com\/total-processing\/create-checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "terms": "https:\/\/get-huusk.com\/terms",
        "privacy": "https:\/\/get-huusk.com\/privacy",
        "emailSave": "https:\/\/get-huusk.com\/email\/save?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "areas": "https:\/\/get-huusk.com\/locations\/areas?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "zips": "https:\/\/get-huusk.com\/locations\/zips?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "cities": "https:\/\/get-huusk.com\/locations\/cities?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "states": "https:\/\/get-huusk.com\/locations\/states?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "ebanxResolve": "https:\/\/get-huusk.com\/ebanx\/resolve?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "taxRates": "https:\/\/get-huusk.com\/tax-rates?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&brand=huusk",
        "order": "https:\/\/get-huusk.com\/order?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&test=0",
        "conditional_values_route": "https:\/\/get-huusk.com\/conditional-values",
        "applePayValidateMerchant": "https:\/\/get-huusk.com\/validate-apple-pay-merchant",
        "adyen": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=adyen&brand=huusk",
        "ebanx": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ebanx&brand=huusk",
        "ebanx_boleto": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ebanx_boleto&brand=huusk",
        "ebanx_token": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ebanx_token&brand=huusk",
        "ebanx_pix": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ebanx_pix&brand=huusk",
        "ebanx_mercado": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ebanx_mercado&brand=huusk",
        "ebanx_oxxo": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ebanx_oxxo&brand=huusk",
        "paysafe": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=paysafe&brand=huusk",
        "paypal": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=paypal&brand=huusk",
        "paypal_vault": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=paypal_vault&brand=huusk",
        "paypal_vault_checkout": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=paypal_vault_checkout&brand=huusk",
        "paypal_vault_express": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=paypal_vault_express&brand=huusk",
        "paypal_wallet_klarna": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=paypal_wallet_klarna&brand=huusk",
        "paypal_cc": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=paypal_cc&brand=huusk",
        "paypal_cc_api": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=paypal_cc_api&brand=huusk",
        "stripe": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=stripe&brand=huusk",
        "stripe_3ds": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=stripe_3ds&brand=huusk",
        "stripe_blik": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=stripe_blik&brand=huusk",
        "klarna": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=klarna&brand=huusk",
        "klarna_payments": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=klarna_payments&brand=huusk",
        "klarna_payments_express": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=klarna_payments_express&brand=huusk",
        "klarna_dir_logistics": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=klarna_dir_logistics&brand=huusk",
        "dapsides": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=dapsides&brand=huusk",
        "dapsides_lead": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=dapsides_lead&brand=huusk",
        "checkout": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=checkout&brand=huusk",
        "appmax": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=appmax&brand=huusk",
        "weship": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=weship&brand=huusk",
        "packer": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=packer&brand=huusk",
        "payo": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=payo&brand=huusk",
        "urstore": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=urstore&brand=huusk",
        "boxme": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=boxme&brand=huusk",
        "spreedly_express": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=spreedly_express&brand=huusk",
        "spreedly_iframe": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=spreedly_iframe&brand=huusk",
        "logismart": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=logismart&brand=huusk",
        "nuvei": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=nuvei&brand=huusk",
        "nuvei_apple_pay": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=nuvei_apple_pay&brand=huusk",
        "nuvei_google_pay": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=nuvei_google_pay&brand=huusk",
        "nuvei_apple_or_google_pay": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=nuvei_apple_or_google_pay&brand=huusk",
        "test": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=test&brand=huusk",
        "testCod": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=testCod&brand=huusk",
        "total_processing_copy_and_pay": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=total_processing_copy_and_pay&brand=huusk",
        "total_processing_copy_and_pay_modal": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=total_processing_copy_and_pay_modal&brand=huusk",
        "ixo_pay": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ixo_pay&brand=huusk",
        "ixo_pay_after_pay": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ixo_pay_after_pay&brand=huusk",
        "dir_logistics": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=dir_logistics&brand=huusk",
        "manual": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=manual&brand=huusk",
        "helpship": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=helpship&brand=huusk",
        "shorages": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=shorages&brand=huusk",
        "inpost": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=inpost&brand=huusk",
        "afterpay_express": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=afterpay_express&brand=huusk",
        "ship_rocket": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ship_rocket&brand=huusk",
        "ixo_pay_apple_pay": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ixo_pay_apple_pay&brand=huusk",
        "express_2660": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=express_2660&brand=huusk",
        "ixo_pay_google_pay": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ixo_pay_google_pay&brand=huusk",
        "tpay_blik": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=tpay_blik&brand=huusk",
        "fhb": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=fhb&brand=huusk",
        "ixo_pay_ideal": "https:\/\/get-huusk.com\/checkout?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&gateway=ixo_pay_ideal&brand=huusk"
      },
      "processors": ["ixo_pay", "paypal"],
      "currency": "EUR",
      "locale": "en",
      "country": "NG",
      "countries": {
        "AR": "Argentina",
        "AU": "Australia",
        "AT": "Austria",
        "BE": "Belgium",
        "BR": "Brazil",
        "BG": "Bulgaria",
        "CA": "Canada",
        "CN": "China",
        "CO": "Colombia",
        "HR": "Croatia",
        "CY": "Cyprus",
        "CZ": "Czech Republic",
        "DK": "Denmark",
        "EE": "Estonia",
        "FI": "Finland",
        "FR": "France",
        "DE": "Germany",
        "GR": "Greece",
        "HU": "Hungary",
        "IE": "Ireland",
        "IL": "Israel",
        "IT": "Italy",
        "JP": "Japan",
        "KR": "South Korea",
        "LV": "Latvia",
        "LI": "Liechtenstein",
        "LU": "Luxembourg",
        "MK": "Macedonia",
        "MY": "Malaysia",
        "MT": "Malta",
        "MX": "Mexico",
        "NL": "Netherlands",
        "NZ": "New Zealand",
        "NO": "Norway",
        "PL": "Poland",
        "PT": "Portugal",
        "RO": "Romania",
        "RS": "Serbia",
        "SK": "Slovakia",
        "SI": "Slovenia",
        "ES": "Spain",
        "SE": "Sweden",
        "CH": "Switzerland",
        "TW": "Taiwan",
        "TH": "Thailand",
        "TR": "Turkey",
        "UA": "Ukraine",
        "AE": "United Arab Emirates",
        "GB": "United Kingdom",
        "US": "United States"
      },
      "countries_by_continent": {
        "AN": ["AQ", "BV", "GS", "HM", "TF"],
        "AF": ["AO", "BF", "BI", "BJ", "BW", "CD", "CF", "CG", "CI", "CM", "CV", "DJ", "DZ", "EG", "EH", "ER", "ET",
          "GA", "GH", "GM", "GN", "GQ", "GW", "KE", "KM", "LR", "LS", "LY", "MA", "MG", "ML", "MR", "MU", "MW",
          "MZ", "NA", "NE", "NG", "RE", "RW", "SC", "SD", "SH", "SL", "SN", "SO", "ST", "SZ", "TD", "TG", "TN",
          "TZ", "UG", "YT", "ZA", "ZM", "ZW"
        ],
        "AS": ["AE", "AF", "AM", "AP", "AZ", "BD", "BH", "BN", "BT", "CC", "CN", "CX", "CY", "GE", "HK", "ID", "IL",
          "IN", "IO", "IQ", "IR", "JO", "JP", "KG", "KH", "KP", "KR", "KW", "KZ", "LA", "LB", "LK", "MM", "MN",
          "MO", "MV", "MY", "NP", "OM", "PH", "PK", "PS", "QA", "SA", "SG", "SY", "TH", "TJ", "TL", "TM", "TW",
          "UZ", "VN", "YE"
        ],
        "EU": ["AD", "AL", "AT", "AX", "BA", "BE", "BG", "BY", "CH", "CZ", "DE", "DK", "EE", "ES", "EU", "FI", "FO",
          "FR", "FX", "GB", "GG", "GI", "GR", "HR", "HU", "IE", "IM", "IS", "IT", "JE", "LI", "LT", "LU", "LV",
          "MC", "MD", "ME", "MK", "MT", "NL", "NO", "PL", "PT", "RO", "RS", "RU", "SE", "SI", "SJ", "SK", "SM",
          "TR", "UA", "VA"
        ],
        "NA": ["AG", "AI", "AN", "AW", "BB", "BL", "BM", "BS", "BZ", "CA", "CR", "CU", "DM", "DO", "GD", "GL", "GP",
          "GT", "HN", "HT", "JM", "KN", "KY", "LC", "MF", "MQ", "MS", "MX", "NI", "PA", "PM", "PR", "SV", "TC",
          "TT", "US", "VC", "VG", "VI"
        ],
        "OC": ["AS", "AU", "CK", "FJ", "FM", "GU", "KI", "MH", "MP", "NC", "NF", "NR", "NU", "NZ", "PF", "PG", "PN",
          "PW", "SB", "TK", "TO", "TV", "UM", "VU", "WF", "WS"
        ],
        "SA": ["AR", "BO", "BR", "CL", "CO", "EC", "FK", "GF", "GY", "PE", "PY", "SR", "UY", "VE"]
      },
      "active_sale": null,
      "sale_name_constants": {
        "bf2021": "bf2021",
        "bf2021-2": "bf2021-2",
        "c2021": "c2021"
      },
      "fallback_payment_gateway": "ixo_pay",
      "show_amex": true,
      "show_mada": false,
      "paypal_disable_funding": "",
      "currency_precision": 2,
      "paysafe": {
        "token": null,
        "threeDS": "v2",
        "accountId": null
      },
      "ebanx": {
        "installments": {
          "BR": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
          "MX": [1, 3, 6, 9, 12],
          "CO": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 32, 33, 34, 35, 36
          ]
        },
        "countries": ["BR", "CO", "IL", "MX"]
      },
      "ebanx_boleto": {
        "countries": ["BR", "IL"]
      },
      "ebanx_pix": {
        "countries": ["BR", "IL"]
      },
      "ebanx_oxxo": {
        "countries": ["IL", "MX"]
      },
      "ebanx_mercado": {
        "countries": ["BR", "IL"]
      },
      "paypal": {
        "enabled": true,
        "fraudnet": {
          "uuid": "01902663-1f26-73c9-8a16-9749bbd4771c",
          "id": "CONVENITY_3UUSU7UD2WT56_RT"
        }
      },
      "paypal_cc": {
        "client_id": "Ae79pv9lnkH_2JwiBu6k0elfHc0ZpcWCvsOOhQ2gmf31ouCCr4EKFMYdb2nW6fx1ULWUTLYJzsS2JXh0",
        "translations": {
          "mm_yyyy": "MM \/ YYYY"
        },
        "fraudnet": {
          "uuid": "01902663-1f26-73c9-8a16-9749bbd4771c",
          "id": "EKOMLITA_TKKXSABC9HXN6_BA"
        }
      },
      "boxme": {
        "supported_countries": ["IL", "TH", "VN"]
      },
      "dapsides": {
        "supported_countries": ["IL", "IT"]
      },
      "packer": {
        "supported_countries": ["FI", "IL"]
      },
      "testCod": {
        "supported_countries": ["CZ", "EG", "FR", "IN", "IL", "ES", "TR", "AE"]
      },
      "payo": {
        "supported_countries": ["IL", "PH"]
      },
      "urstore": {
        "supported_countries": ["IL", "MY", "SG"]
      },
      "weship": {
        "supported_countries": ["IN", "IL"]
      },
      "logismart": {
        "supported_countries": ["IL", "PL"]
      },
      "dir_logistics": {
        "supported_countries": ["BG", "CZ", "DE", "GR", "IL", "IT", "PT", "RO", "SK", "ES", "TR", "AE"]
      },
      "helpship": {
        "supported_countries": ["BG", "HR", "CZ", "GR", "HU", "IL", "IT", "RO", "RS", "SK", "SI"]
      },
      "express_2660": {
        "supported_countries": ["IL", "PT", "ES"]
      },
      "fhb": {
        "supported_countries": ["AU", "AT", "BE", "BG", "CA", "CN", "HR", "CY", "CZ", "DK", "EE", "FI", "FR", "DE",
          "GR", "HU", "IE", "IL", "IT", "JP", "KR", "LV", "LI", "LU", "MK", "MY", "MT", "NL", "NZ", "NO", "PL",
          "PT", "RO", "RS", "SK", "SI", "ES", "SE", "CH", "TW", "TH", "TR", "UA", "AE", "GB", "US"
        ]
      },
      "shorages": {
        "supported_countries": ["BH", "IL", "KW", "OM", "SA", "AE"]
      },
      "inpost": {
        "supported_countries": ["IL", "PL"]
      },
      "ship_rocket": {
        "supported_countries": ["IN", "IL", "PL"]
      },
      "spreedly": {
        "accept_header": null,
        "key": "KRGkKwpo689ZJu4x1Rha1d0k7Jj"
      },
      "test": false,
      "states": {
        "CA": {
          "AB": "Alberta",
          "BC": "British Columbia",
          "MB": "Manitoba",
          "NB": "New Brunswick",
          "NL": "Newfoundland",
          "NS": "Nova Scotia",
          "NT": "Northwest Territories",
          "NU": "Nunavut",
          "ON": "Ontario",
          "PE": "Prince Edward Island",
          "QC": "Quebec",
          "SK": "Saskatchewan",
          "YT": "Yukon"
        },
        "US": {
          "AL": "Alabama",
          "AZ": "Arizona",
          "AR": "Arkansas",
          "CA": "California",
          "CO": "Colorado",
          "CT": "Connecticut",
          "DE": "Delaware",
          "DC": "District of Columbia",
          "FL": "Florida",
          "GA": "Georgia",
          "ID": "Idaho",
          "IL": "Illinois",
          "IN": "Indiana",
          "IA": "Iowa",
          "KS": "Kansas",
          "KY": "Kentucky",
          "LA": "Louisiana",
          "ME": "Maine",
          "MD": "Maryland",
          "MA": "Massachusetts",
          "MI": "Michigan",
          "MN": "Minnesota",
          "MS": "Mississippi",
          "MO": "Missouri",
          "MT": "Montana",
          "NE": "Nebraska",
          "NV": "Nevada",
          "NH": "New Hampshire",
          "NJ": "New Jersey",
          "NM": "New Mexico",
          "NY": "New York",
          "NC": "North Carolina",
          "ND": "North Dakota",
          "OH": "Ohio",
          "OK": "Oklahoma",
          "OR": "Oregon",
          "PA": "Pennsylvania",
          "RI": "Rhode Island",
          "SC": "South Carolina",
          "SD": "South Dakota",
          "TN": "Tennessee",
          "TX": "Texas",
          "UT": "Utah",
          "VT": "Vermont",
          "VA": "Virginia",
          "WA": "Washington",
          "WV": "West Virginia",
          "WI": "Wisconsin",
          "WY": "Wyoming"
        },
        "BR": {
          "AC": "Acre",
          "AL": "Alagoas",
          "AP": "Amap\u00e1",
          "AM": "Amazonas",
          "RR": "Roraima",
          "RO": "Rond\u00f4nia",
          "PA": "Par\u00e1",
          "PB": "Para\u00edba",
          "MA": "Maranh\u00e3o",
          "PI": "Piau\u00ed",
          "PE": "Pernambuco",
          "RN": "Rio Grande do Norte",
          "CE": "Cear\u00e1",
          "SE": "Sergipe",
          "BA": "Bahia",
          "DF": "Distrito Federal",
          "TO": "Tocantins",
          "GO": "Goi\u00e1s",
          "MS": "Mato Grosso do Sul",
          "MT": "Mato Grosso",
          "RJ": "Rio de Janeiro",
          "SP": "S\u00e3o Paulo",
          "MG": "Minas Gerais",
          "ES": "Esp\u00edrito Santo",
          "RS": "Rio Grande do Sul",
          "SC": "Santa Catarina",
          "PR": "Paran\u00e1"
        },
        "MX": {
          "AG": "Aguascalientes",
          "BJ": "Baja California",
          "BS": "Baja California Sur",
          "CP": "Campeche",
          "CH": "Chiapas",
          "CI": "Chihuahua",
          "CU": "Coahuila",
          "CL": "Colima",
          "DF": "Distrito Federal",
          "DG": "Durango",
          "GJ": "Guanajuato",
          "GR": "Guerrero",
          "HG": "Hidalgo",
          "JA": "Jalisco",
          "EM": "Mexico",
          "MH": "Michoacan",
          "MR": "Morelos",
          "NA": "Nayarit",
          "NL": "Nuevo Leon",
          "OA": "Oaxaca",
          "PU": "Puebla",
          "QA": "Queretaro",
          "QR": "Quintana Roo",
          "SL": "San Luis Potosi",
          "SI": "Sinaloa",
          "SO": "Sonora",
          "TA": "Tabasco",
          "TM": "Tamaulipas",
          "TL": "Tlaxcala",
          "VL": "Veracruz",
          "YC": "Yucatan",
          "ZT": "Zacatecas"
        }
      },
      "allow_cc_fallback": false,
      "taxes": {
        "percent": null,
        "version": 1,
        "shipping_product_ids": ["express-delivery", "upsell-express-delivery", "standard-delivery",
          "priority-delivery"
        ],
        "countries": []
      },
      "klarna_shipping_options": false,
      "translation": {
        "subtotal": "global.subtotal",
        "total": "Total",
        "tax": "Tax",
        "invalid_number_il": "Phone number must contain 9 symbols",
        "required_ex": "This field is required.",
        "email_ex": "Please enter a valid email address.",
        "latin_ex": "This field must only contain english letters.",
        "house_number": "Enter street name, house and apartment number.",
        "card_number": "Card Number",
        "expiry_date": "Expiry Date",
        "card_expiry_date_mm_yy": "MM \/ YY",
        "shipping_from": "Shipping from",
        "usa_warehouse": "USA warehouse",
        "local_warehouse": "Local warehouse",
        "invalid_symbols": "The field should not contain one of these symbols: \u00a3^$%*\u00b1\u00a7}{@#~?><|=\u00ac",
        "select_quantity": "Please select quantity!",
        "instant_translator.step2_available_payment_methods": "Step 2: Available Payment Methods",
        "sterilizex.visa_or_mastercard": "VISA or Mastercard",
        "sterilizex.pay_with_paypal": "Pay with PayPal",
        "sterilizex.pay_later_after_14_days": "Pay later after 14 days",
        "sterilizex.pay_later_after_30_days": "Pay later after 30 days",
        "sterilizex.interest_free_installments": "Interest-free installments",
        "global\/klarna_info.interest_free": "Interest-free payments",
        "payments.installments": "Installments",
        "payments.one_installment_of": "1 Installment of :AMOUNT",
        "payments.x_installments_of": ":X Installments of :AMOUNT",
        "global.credit_card": "Credit Card",
        "global.card_expiry_date": "Card expiry date",
        "global.invalid_document": "Document is invalid",
        "global.invalid_card_details": "Card details might be invalid",
        "global.invalid_expiry": "Expiry date is invalid",
        "global.incomplete_cvc": "Incomplete CVC",
        "payments.dhl_remote_area": "DHL Express does not deliver to your area, please choose Standard shipping",
        "validation.regex": "The :attribute field format is invalid.",
        "payments.debit_card": "Debit Card",
        "global.payment_unexpected_error": "Something went wrong. Please try a different payment method instead.",
        "global.pay_after_delivery": "Pay After Delivery",
        "global.pay_on_delivery": "Pay On Delivery",
        "global.agree_to_receive_2": "I agree to receive marketing information about your products.",
        "global.agree_to_marketing": "I agree to receive SMS regarding my order status, other order related news and marketing information.",
        "global.i_agree": "I confirm that I have read and agree to :terms_link and :policy_link.",
        "global.terms_link": "Terms of Service",
        "global.policy_link": "Privacy Policy"
      },
      "hide_payment_method_options": false,
      "show_cod_payment_option_for_countries": [],
      "allow_no_house_numbers": false,
      "not_valid_chars": "\u00a3^$%*\u00b1\u00a7}{@#~?><|=\u00ac",
      "add_cod_external_payment_to_klarna": false,
      "show_delivery_options_block_cod": false,
      "preferred_hybrid_payment_gateway": "",
      "is_billing_layout": false,
      "preselect_payment_method": true,
      "show_order_page_upsell_popup": false,
      "product_exist_in_fc_for_cod": false
    });
  }

  document.addEventListener('DOMContentLoaded', function() {
    if (Boolean(window.initPayments)) {
      initiatePayments();
    } else {
      window.onload = function() {
        initiatePayments();
      };
    }
  });
  </script>

  <script>
  var orbServerData = JSON.parse(
    '{\u0022gtmLayerPage\u0022:\u0022order\u0022,\u0022brand\u0022:\u0022huusk\u0022,\u0022country\u0022:\u0022NG\u0022,\u0022company\u0022:null,\u0022locale\u0022:\u0022en\u0022,\u0022currency\u0022:\u0022EUR\u0022}'
  );
  var orbSessionData = JSON.parse(
    '{\u0022uuid\u0022:\u002201902663-1f26-73c9-8a16-9749bbd4771c\u0022,\u0022subid1\u0022:null,\u0022subid2\u0022:null,\u0022subid3\u0022:null,\u0022subid4\u0022:null,\u0022subid5\u0022:null,\u0022utm_campaign\u0022:null,\u0022product_page_version\u0022:\u002222\u0022,\u0022transaction_id\u0022:null,\u0022affiliate_id\u0022:null}'
  );
  window.orbSessionData = Object.assign(orbServerData, orbSessionData);
  </script>

  <script>
  window.gtmLayer = [{
    page: orbServerData.gtmLayerPage || null,
    subid: window.orbSessionData.subid1,
    subid_2: window.orbSessionData.subid2,
    subid_3: window.orbSessionData.subid3,
    subid_4: window.orbSessionData.subid4,
    subid_5: window.orbSessionData.subid5,
    transaction_id: window.orbSessionData.transaction_id,
    affiliate_id: window.orbSessionData.affiliate_id,
  }];
  </script>








  <script>
  (function(h, o, t, j, a, r) {
    h.hj = h.hj || function() {
      (h.hj.q = h.hj.q || []).push(arguments)
    };
    h._hjSettings = {
      hjid: 2469048,
      hjsv: 6
    };
    a = o.getElementsByTagName('head')[0];
    r = o.createElement('script');
    r.async = 1;
    r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
    a.appendChild(r);
  })(window, document, 'https://static.hotjar.com/c/hotjar-', '.js?sv=');
  </script>
  <!-- Global site tag (gtag.js) - Google Analytics -->
  <script async="" src="../gtag/js?id=G-2DT0NCM1Q4&l=gaLayer"></script>
  <script>
  window.gaLayer = window.gaLayer || [];

  function gatag() {
    if (arguments[2]) {
      arguments[2].real_timestamp = Date.now();
    }
    gaLayer.push(arguments);
  }

  if (localStorage.getItem('consentMode') === null) {
    gatag('consent', 'default', {
      'ad_storage': 'denied',
      'analytics_storage': 'denied',
      'personalization_storage': 'denied',
      'functionality_storage': 'denied',
      'security_storage': 'denied',
    });
  } else {
    gatag('consent', 'default', JSON.parse(localStorage.getItem('consentMode')));
  }

  function setConsentMode(necessary, marketing, analytics, preferences) {
    var consentMode = {
      'functionality_storage': necessary ? 'granted' : 'denied',
      'security_storage': necessary ? 'granted' : 'denied',
      'ad_storage': marketing ? 'granted' : 'denied',
      'analytics_storage': analytics ? 'granted' : 'denied',
      'personalization_storage': preferences ? 'granted' : 'denied',
    };
    gatag('consent', 'update', consentMode);
    localStorage.setItem('consentMode', JSON.stringify(consentMode));
  }

  var eventParameters = {
    page: 'order' || location.pathname,
    page_category: 'order',
    upsell_index: null,
    product_page_version: window.orbSessionData && window.orbSessionData.product_page_version
  };
  var userProperties = window.orbSessionData && {
    uuid: window.orbSessionData.uuid,
    locale: window.orbSessionData.locale,
    currency: window.orbSessionData.currency,
    brand: window.orbSessionData.brand,
    country: window.orbSessionData.country,
    company: window.orbSessionData.company,
    subid1: window.orbSessionData.subid1,
    subid2: window.orbSessionData.subid2,
    subid3: window.orbSessionData.subid3,
    subid4: window.orbSessionData.subid4,
    subid5: window.orbSessionData.subid5,
    utm_campaign: window.orbSessionData.utm_campaign
  } || {};

  gatag('js', new Date());
  gatag('config', 'G-2DT0NCM1Q4', eventParameters); // This used as "User flow active" property (by Jurate)
  gatag('config', 'G-VYKE683B14', eventParameters);
  gatag('set', 'user_properties', userProperties);

  document.addEventListener("DOMContentLoaded", function() {
    attachGAEventToButtons('[data-ga-event]');

    function attachGAEventToButtons(needle) {
      var buttons = document.querySelectorAll(needle);
      for (var i = 0; i < buttons.length; i++) {
        buttons[i].addEventListener('click', function(event) {
          gatag('event', event.currentTarget.dataset.gaEvent, JSON.parse(
            '{\u0022page\u0022:\u0022order\u0022,\u0022page_category\u0022:\u0022order\u0022,\u0022product_page_version\u0022:\u002222\u0022,\u0022upsell_index\u0022:null}'
          ));
        });
      }
    }
  });
  </script>
  <script>
  ;
  (function(a, t, o, m, i) {
    a[m] = a[m] || [];
    a[m].push({
      t: new Date().getTime(),
      event: 'snippetRun'
    });
    var f =
      t.getElementsByTagName(o)[0],
      e =
      t.createElement(o);
    e.async = !0;
    e.dataset.namespace = "paypal_sdk";
    e.src = 'https://www.paypal.com/sdk/js?components=shopping&client-id=' + i;
    f.parentNode.insertBefore(e, f);
  })(window, document, 'script', 'shoppingDDL',
    'AU7kkFMn3BFZcexbHND2uDWokuqqYIm3RRTNDgKKMxTn5yWzDcnvcFE6rew0P65pqHFRmXTgDC7AGSVT');
  var pptag = {
    send: function(e, p) {
      shoppingDDL.push({
        event: e,
        payload: p
      });
    },
    set: function(s) {
      shoppingDDL.push({
        set: s
      });
    }
  };
  pptag.send('page_view', {
    page_type: 'CHECKOUT',
  })
  </script>
  <link rel="modulepreload" href="../build/assets/tracktor-16e5af44.js">
  <script type="module" src="../build/assets/tracktor-16e5af44.js" data-navigate-track="reload"></script>
  <script>
  window.addEventListener('load', function() {
    typeof tracktor !== "undefined" && tracktor.init('https://tracktor.me', "01902663-1f26-73c9-8a16-9749bbd4771c")
      .then(function() {
        tracktor.recordVisit({
            "uuid": "01902663-1f26-73c9-8a16-9749bbd4771c",
            "ppwa": "payments@convenity.com",
            "hj": "1",
            "pmt": "ip",
            "amex": "1",
            "oxlis": "2",
            "esc": "1",
            "ssb": "1",
            "tos": "1",
            "gae": "1",
            "huuskv2": "1",
            "eppss": "1",
            "qpp": "3",
            "prodpv": "22",
            "ly": "20",
            "gc": "1",
            "_": "5300,3092,3284,3559,4216,4288,4878,5828,5840,5969,6051"
          },
          [{
            "key": "page_category",
            "value": "order"
          }, {
            "key": "ip_country",
            "value": "NG"
          }, {
            "key": "page_version",
            "value": "20"
          }, {
            "key": "brand",
            "value": "huusk"
          }, {
            "key": "locale",
            "value": "en"
          }]
        ).catch(function(error) {
          console.error(error);
          tracktor.initFallback("01902663-1f26-73c9-8a16-9749bbd4771c").then(function() {
            tracktor.recordVisit({
                "uuid": "01902663-1f26-73c9-8a16-9749bbd4771c",
                "ppwa": "payments@convenity.com",
                "hj": "1",
                "pmt": "ip",
                "amex": "1",
                "oxlis": "2",
                "esc": "1",
                "ssb": "1",
                "tos": "1",
                "gae": "1",
                "huuskv2": "1",
                "eppss": "1",
                "qpp": "3",
                "prodpv": "22",
                "ly": "20",
                "gc": "1",
                "_": "5300,3092,3284,3559,4216,4288,4878,5828,5840,5969,6051"
              },
              [{
                "key": "page_category",
                "value": "order"
              }, {
                "key": "ip_country",
                "value": "NG"
              }, {
                "key": "page_version",
                "value": "20"
              }, {
                "key": "brand",
                "value": "huusk"
              }, {
                "key": "locale",
                "value": "en"
              }]
            ).catch((error) => console.error(error));
          })
        });
        tracktor.addInputListeners();
      })
      .catch((error) => console.error(error));
  });
  </script>
</head>

<body class="max-layout-width layout-order-2 
    ">
  <div class="tw-max-w-[2000px] tw-mx-auto tw-text-base">
    <div
      x-data="commonOrder(new window.ecommerce.Cart(JSON.parse('{\u0022hideContentForCod\u0022:false,\u0022codGateways\u0022:[\u0022dapsides\u0022,\u0022dapsides_lead\u0022,\u0022weship\u0022,\u0022packer\u0022,\u0022inpost\u0022,\u0022payo\u0022,\u0022urstore\u0022,\u0022boxme\u0022,\u0022logismart\u0022,\u0022dir_logistics\u0022,\u0022testCod\u0022,\u0022helpship\u0022,\u0022shorages\u0022,\u0022ship_rocket\u0022,\u0022express_2660\u0022,\u0022fhb\u0022],\u0022options\u0022:[{\u0022id\u0022:\u0022[\\u0022huusk-v2\\u0022,\\u002279.92\\u0022,4,\\u00224 Huusk Knives\\u0022,[],\\u0022EUR\\u0022,null,0,\\u0022266.4\\u0022,[],\\u0022https:\\\\\\\/\\\\\\\/get-huusk.com\\\\\\\/huusk\\\\\\\/order\\u0022,\\u0022physical_product\\u0022,\\u0022266.4\\u0022,70,null]\u0022,\u0022product_id\u0022:\u0022huusk-v2\u0022,\u0022label\u0022:\u00224 Huusk Knives\u0022,\u0022checked\u0022:false,\u0022count\u0022:4,\u0022price\u0022:19.98,\u0022price_formatted\u0022:\u0022\\u20ac 19,98\u0022,\u0022unit_original_price\u0022:\u002266.6\u0022,\u0022unit_original_price_formatted\u0022:\u0022\\u20ac 66,60\u0022,\u0022total_price\u0022:\u002279.92\u0022,\u0022total_price_formatted\u0022:\u0022\\u20ac 79,92\u0022,\u0022original_price\u0022:\u0022266.4\u0022,\u0022original_price_formatted\u0022:\u0022\\u20ac 266,40\u0022,\u0022subscription_price\u0022:null,\u0022subscription_price_formatted\u0022:null,\u0022currency\u0022:\u0022EUR\u0022,\u0022converted_from_currency\u0022:\u0022USD\u0022,\u0022discount_applied\u0022:\u0022\\u20ac 186,48\u0022,\u0022discount_percentage\u0022:70,\u0022attributes\u0022:[],\u0022label_price_template\u0022:\u00224 Huusk Knives\u0022,\u0022has_gift\u0022:false,\u0022related_pricing_items\u0022:[],\u0022old_price\u0022:null,\u0022trans\u0022:\u0022huusk\\\/order.count_knives\u0022,\u0022order\u0022:1,\u0022subscription_plan\u0022:null,\u0022pricing_id\u0022:1508},{\u0022id\u0022:\u0022[\\u0022huusk-v2\\u0022,\\u002265.94\\u0022,3,\\u00223 Huusk Knives\\u0022,[],\\u0022EUR\\u0022,null,0,\\u0022219.8\\u0022,[],\\u0022https:\\\\\\\/\\\\\\\/get-huusk.com\\\\\\\/huusk\\\\\\\/order\\u0022,\\u0022physical_product\\u0022,\\u0022219.8\\u0022,70,null]\u0022,\u0022product_id\u0022:\u0022huusk-v2\u0022,\u0022label\u0022:\u00223 Huusk Knives\u0022,\u0022checked\u0022:false,\u0022count\u0022:3,\u0022price\u0022:21.98,\u0022price_formatted\u0022:\u0022\\u20ac 21,98\u0022,\u0022unit_original_price\u0022:\u002273.27\u0022,\u0022unit_original_price_formatted\u0022:\u0022\\u20ac 73,27\u0022,\u0022total_price\u0022:\u002265.94\u0022,\u0022total_price_formatted\u0022:\u0022\\u20ac 65,94\u0022,\u0022original_price\u0022:\u0022219.8\u0022,\u0022original_price_formatted\u0022:\u0022\\u20ac 219,80\u0022,\u0022subscription_price\u0022:null,\u0022subscription_price_formatted\u0022:null,\u0022currency\u0022:\u0022EUR\u0022,\u0022converted_from_currency\u0022:\u0022USD\u0022,\u0022discount_applied\u0022:\u0022\\u20ac 153,86\u0022,\u0022discount_percentage\u0022:70,\u0022attributes\u0022:[],\u0022label_price_template\u0022:\u00223 Huusk Knives\u0022,\u0022has_gift\u0022:false,\u0022related_pricing_items\u0022:[],\u0022old_price\u0022:null,\u0022trans\u0022:\u0022huusk\\\/order.count_knives\u0022,\u0022order\u0022:2,\u0022subscription_plan\u0022:null,\u0022pricing_id\u0022:1508},{\u0022id\u0022:\u0022[\\u0022huusk-v2\\u0022,\\u002249.94\\u0022,2,\\u00222 Huusk Knives\\u0022,[],\\u0022EUR\\u0022,null,0,\\u0022166.47\\u0022,[],\\u0022https:\\\\\\\/\\\\\\\/get-huusk.com\\\\\\\/huusk\\\\\\\/order\\u0022,\\u0022physical_product\\u0022,\\u0022166.47\\u0022,70,null]\u0022,\u0022product_id\u0022:\u0022huusk-v2\u0022,\u0022label\u0022:\u00222 Huusk Knives\u0022,\u0022checked\u0022:true,\u0022count\u0022:2,\u0022price\u0022:24.97,\u0022price_formatted\u0022:\u0022\\u20ac 24,97\u0022,\u0022unit_original_price\u0022:\u002283.23\u0022,\u0022unit_original_price_formatted\u0022:\u0022\\u20ac 83,23\u0022,\u0022total_price\u0022:\u002249.94\u0022,\u0022total_price_formatted\u0022:\u0022\\u20ac 49,94\u0022,\u0022original_price\u0022:\u0022166.47\u0022,\u0022original_price_formatted\u0022:\u0022\\u20ac 166,47\u0022,\u0022subscription_price\u0022:null,\u0022subscription_price_formatted\u0022:null,\u0022currency\u0022:\u0022EUR\u0022,\u0022converted_from_currency\u0022:\u0022USD\u0022,\u0022discount_applied\u0022:\u0022\\u20ac 116,53\u0022,\u0022discount_percentage\u0022:70,\u0022attributes\u0022:[],\u0022label_price_template\u0022:\u00222 Huusk Knives\u0022,\u0022has_gift\u0022:false,\u0022related_pricing_items\u0022:[],\u0022old_price\u0022:null,\u0022trans\u0022:\u0022huusk\\\/order.count_knives\u0022,\u0022order\u0022:3,\u0022subscription_plan\u0022:null,\u0022pricing_id\u0022:1508},{\u0022id\u0022:\u0022[\\u0022huusk-v2\\u0022,\\u002229.95\\u0022,1,\\u00221 Huusk Knives\\u0022,[],\\u0022EUR\\u0022,null,0,\\u002299.83\\u0022,[],\\u0022https:\\\\\\\/\\\\\\\/get-huusk.com\\\\\\\/huusk\\\\\\\/order\\u0022,\\u0022physical_product\\u0022,\\u002299.83\\u0022,70,null]\u0022,\u0022product_id\u0022:\u0022huusk-v2\u0022,\u0022label\u0022:\u00221 Huusk Knives\u0022,\u0022checked\u0022:false,\u0022count\u0022:1,\u0022price\u0022:29.95,\u0022price_formatted\u0022:\u0022\\u20ac 29,95\u0022,\u0022unit_original_price\u0022:\u002299.83\u0022,\u0022unit_original_price_formatted\u0022:\u0022\\u20ac 99,83\u0022,\u0022total_price\u0022:\u002229.95\u0022,\u0022total_price_formatted\u0022:\u0022\\u20ac 29,95\u0022,\u0022original_price\u0022:\u002299.83\u0022,\u0022original_price_formatted\u0022:\u0022\\u20ac 99,83\u0022,\u0022subscription_price\u0022:null,\u0022subscription_price_formatted\u0022:null,\u0022currency\u0022:\u0022EUR\u0022,\u0022converted_from_currency\u0022:\u0022USD\u0022,\u0022discount_applied\u0022:\u0022\\u20ac 69,88\u0022,\u0022discount_percentage\u0022:70,\u0022attributes\u0022:[],\u0022label_price_template\u0022:\u00221 Huusk Knives\u0022,\u0022has_gift\u0022:false,\u0022related_pricing_items\u0022:[],\u0022old_price\u0022:null,\u0022trans\u0022:\u0022huusk\\\/order.count_knives\u0022,\u0022order\u0022:4,\u0022subscription_plan\u0022:null,\u0022pricing_id\u0022:1508}],\u0022country\u0022:\u0022NG\u0022,\u0022countries\u0022:{\u0022AR\u0022:\u0022Argentina\u0022,\u0022AU\u0022:\u0022Australia\u0022,\u0022AT\u0022:\u0022Austria\u0022,\u0022BE\u0022:\u0022Belgium\u0022,\u0022BR\u0022:\u0022Brazil\u0022,\u0022BG\u0022:\u0022Bulgaria\u0022,\u0022CA\u0022:\u0022Canada\u0022,\u0022CN\u0022:\u0022China\u0022,\u0022CO\u0022:\u0022Colombia\u0022,\u0022HR\u0022:\u0022Croatia\u0022,\u0022CY\u0022:\u0022Cyprus\u0022,\u0022CZ\u0022:\u0022Czech Republic\u0022,\u0022DK\u0022:\u0022Denmark\u0022,\u0022EE\u0022:\u0022Estonia\u0022,\u0022FI\u0022:\u0022Finland\u0022,\u0022FR\u0022:\u0022France\u0022,\u0022DE\u0022:\u0022Germany\u0022,\u0022GR\u0022:\u0022Greece\u0022,\u0022HU\u0022:\u0022Hungary\u0022,\u0022IE\u0022:\u0022Ireland\u0022,\u0022IL\u0022:\u0022Israel\u0022,\u0022IT\u0022:\u0022Italy\u0022,\u0022JP\u0022:\u0022Japan\u0022,\u0022KR\u0022:\u0022South Korea\u0022,\u0022LV\u0022:\u0022Latvia\u0022,\u0022LI\u0022:\u0022Liechtenstein\u0022,\u0022LU\u0022:\u0022Luxembourg\u0022,\u0022MK\u0022:\u0022Macedonia\u0022,\u0022MY\u0022:\u0022Malaysia\u0022,\u0022MT\u0022:\u0022Malta\u0022,\u0022MX\u0022:\u0022Mexico\u0022,\u0022NL\u0022:\u0022Netherlands\u0022,\u0022NZ\u0022:\u0022New Zealand\u0022,\u0022NO\u0022:\u0022Norway\u0022,\u0022PL\u0022:\u0022Poland\u0022,\u0022PT\u0022:\u0022Portugal\u0022,\u0022RO\u0022:\u0022Romania\u0022,\u0022RS\u0022:\u0022Serbia\u0022,\u0022SK\u0022:\u0022Slovakia\u0022,\u0022SI\u0022:\u0022Slovenia\u0022,\u0022ES\u0022:\u0022Spain\u0022,\u0022SE\u0022:\u0022Sweden\u0022,\u0022CH\u0022:\u0022Switzerland\u0022,\u0022TW\u0022:\u0022Taiwan\u0022,\u0022TH\u0022:\u0022Thailand\u0022,\u0022TR\u0022:\u0022Turkey\u0022,\u0022UA\u0022:\u0022Ukraine\u0022,\u0022AE\u0022:\u0022United Arab Emirates\u0022,\u0022GB\u0022:\u0022United Kingdom\u0022,\u0022US\u0022:\u0022United States\u0022},\u0022showExpressDeliveryForCodOnly\u0022:false,\u0022showExpressDelivery\u0022:false,\u0022showDeliveryDaysInDeliveryOptions\u0022:false}') ))">
      <div
        class="tw-flex tw-items-center tw-justify-center tw-fixed tw-z-[10] tw-left-0 tw-top-0 tw-w-full tw-h-full tw-bg-opacity-80 tw-bg-[#FFFFFF]"
        x-show="Alpine.store('cartLoader').isLoading()" x-cloak="">
        <div
          class="tw-w-[150px] tw-h-[150px] tw-animate-spin tw-rounded-[50%] tw-border-8 tw-border-t-[#0000001A] tw-border-[#000000]">
        </div>
      </div>
      <div class="body order-page order-page-huusk order-page-huusk-- pt-0 pb-sm-5 pb-4 " style="background: #f1f4f8;">
        <div>
          <div data-ga-section="2 - Header">
            <div class="tw-bg-cover tw-bg-center tw-text-white tw-py-10 tw-text-center" data-lazy-load-class="tw-bg-[url('/theme/huusk/order-20/header-mob.jpg')]
     md:tw-bg-[url('/theme/huusk/order-20/header.jpg')]">
              <div class="tw-container tw-px-container md:tw-px-container-md lg:tw-px-container-lg
    xl:tw-px-container-xl">
                <div class="tw-flex tw-flex-wrap -tw-mx-colgap tw-flex md:tw-flex-row tw-flex-col tw-items-center">


                </div>
              </div>
            </div>
          </div>

          <div class="d-flex flex-column">
            <div class="tw-bg-[#FF9900] tw-py-3 tw-capitalize tw-font-bold">
              <div class="tw-container tw-px-container md:tw-px-container-md lg:tw-px-container-lg
    xl:tw-px-container-xl !tw-px-0 tw-max-w-screen-lg xl:tw-max-w-screen-xl lg:tw-container-lg xl:tw-container-xl
    lg:!tw-px-container-lg xl:!tw-px-container-xl">
                <div class="tw-overflow-hidden tw-capitalize" data-ga-section="3 - Sliding Elements Row">
                  <div class="tw-flex tw-flex-wrap -tw-mx-colgap tw-hidden lg:tw-flex tw-items-center tw-flex-nowrap
        tw-justify-between">
                    <div class="tw-px-colgap tw-flex tw-justify-center tw-items-center  " data-ga-category="Element"
                      data-ga-click="3 - Sliding Elements Row (Sliding element 1)">
                      <span style="height: 50px;" class="tw-inline-flex tw-items-center tw-mx-3">
                        <svg class="tw-h-full tw-w-auto" width="29" height="29" viewbox="0 0 29 29" fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <path
                            d="M14.5 0C6.50234 0 0 6.50234 0 14.5C0 22.4977 6.50234 29 14.5 29C22.4977 29 29 22.4977 29 14.5C29 6.50234 22.4977 0 14.5 0ZM7.91836 13.6504L8.46211 13.1066C8.90957 12.6592 9.63457 12.6592 10.0877 13.1066L12.7838 15.8027L20.0734 8.51309C20.5209 8.06563 21.2516 8.06563 21.699 8.51309L22.2428 9.05684C22.6902 9.5043 22.6902 10.235 22.2428 10.6824L13.3219 19.5977C13.1803 19.7393 12.982 19.8242 12.7781 19.8242C12.5742 19.8242 12.3816 19.7449 12.2344 19.5977L7.91269 15.276C7.4709 14.8285 7.4709 14.0979 7.91836 13.6504Z"
                            fill="black"></path>
                        </svg> </span>
                      <span data-wrap-text="" class="">
                        100% Original
                      </span>
                    </div>
                    <div class="tw-px-colgap tw-flex tw-justify-center tw-items-center  " data-ga-category="Element"
                      data-ga-click="3 - Sliding Elements Row (Sliding element 2)">
                      <span style="height: 50px;" class="tw-inline-flex tw-items-center tw-mx-3">
                        <svg class="tw-h-full tw-w-auto" width="30" height="30" viewbox="0 0 30 30" fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <path
                            d="M15 0C6.72656 0 0 6.72656 0 15C0 23.2734 6.72656 30 15 30C23.2734 30 30 23.2734 30 15C30 6.72656 23.2734 0 15 0ZM7.6875 12.627C7.78711 12.3164 8.0625 12.0996 8.39062 12.0703L12.8145 11.666L14.5605 7.57031C14.6895 7.27148 14.9824 7.07812 15.3105 7.07812C15.6387 7.07812 15.9316 7.27148 16.0605 7.57031L17.8066 11.666L22.2305 12.0703C22.5527 12.0996 22.8281 12.3223 22.9336 12.627C23.0332 12.9375 22.9395 13.2773 22.6934 13.4941L19.3477 16.4297L20.332 20.7715C20.4023 21.0938 20.2793 21.4219 20.0156 21.6152C19.752 21.8086 19.4004 21.8203 19.1191 21.6562L15.3047 19.377L11.4902 21.6562C11.3613 21.7324 11.2148 21.7734 11.0742 21.7734C10.9043 21.7734 10.7402 21.7207 10.5938 21.6211C10.3301 21.4277 10.207 21.0996 10.2773 20.7773L11.2617 16.4355L7.91602 13.5C7.68164 13.2773 7.58789 12.9375 7.6875 12.627Z"
                            fill="black"></path>
                        </svg> </span>
                      <span data-wrap-text="" class="">
                        Premium quality
                      </span>
                    </div>
                    <div class="tw-px-colgap tw-flex tw-justify-center tw-items-center  " data-ga-category="Element"
                      data-ga-click="3 - Sliding Elements Row (Sliding element 3)">
                      <span style="height: 50px;" class="tw-inline-flex tw-items-center tw-mx-3">
                        <svg class="tw-h-full tw-w-auto" width="30" height="30" viewbox="0 0 30 30" fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <path
                            d="M15 0C6.72656 0 0 6.72656 0 15C0 23.2734 6.72656 30 15 30C23.2734 30 30 23.2734 30 15C30 6.72656 23.2734 0 15 0ZM23.7363 12.5566L22.377 20.4727C22.3008 20.9238 21.9082 21.252 21.4512 21.252H8.54883C8.0918 21.252 7.70508 20.9238 7.62305 20.4727L6.26367 12.5566C6.20508 12.2109 6.3457 11.8594 6.62695 11.6484C6.9082 11.4375 7.2832 11.4023 7.59961 11.5547L11.2148 13.3184L14.1797 7.98633C14.5078 7.38867 15.4863 7.38867 15.8203 7.98633L18.7852 13.3184L22.4004 11.5547C22.7168 11.4023 23.0918 11.4375 23.373 11.6484C23.6543 11.8594 23.7949 12.2109 23.7363 12.5566Z"
                            fill="black"></path>
                        </svg> </span>
                      <span data-wrap-text="" class="">
                        Best choice
                      </span>
                    </div>
                  </div>
                  <div class="tw-flex tw-flex-wrap -tw-mx-colgap tw-animate-[linear_rightToLeft_15s_infinite] rtl:tw-animate-[linear_leftToRight_15s_infinite]
            tw-basis-full tw-relative lg:tw-hidden tw-flex-nowrap" style="width: 2100px;">
                    <div class="tw-px-colgap tw-flex tw-items-center tw-content-center tw-justify-center
                    tw-basis-full " data-ga-category="Element"
                      data-ga-click="3 - Sliding Elements Row (Sliding element 1)">
                      <span style="height : 50px;" class="tw-inline-flex tw-items-center tw-mx-3">
                        <svg class="tw-h-full tw-w-auto" width="29" height="29" viewbox="0 0 29 29" fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <path
                            d="M14.5 0C6.50234 0 0 6.50234 0 14.5C0 22.4977 6.50234 29 14.5 29C22.4977 29 29 22.4977 29 14.5C29 6.50234 22.4977 0 14.5 0ZM7.91836 13.6504L8.46211 13.1066C8.90957 12.6592 9.63457 12.6592 10.0877 13.1066L12.7838 15.8027L20.0734 8.51309C20.5209 8.06563 21.2516 8.06563 21.699 8.51309L22.2428 9.05684C22.6902 9.5043 22.6902 10.235 22.2428 10.6824L13.3219 19.5977C13.1803 19.7393 12.982 19.8242 12.7781 19.8242C12.5742 19.8242 12.3816 19.7449 12.2344 19.5977L7.91269 15.276C7.4709 14.8285 7.4709 14.0979 7.91836 13.6504Z"
                            fill="black"></path>
                        </svg> </span>
                      <span data-wrap-text="" class="">
                        100% Original
                      </span>
                    </div>
                    <div class="tw-px-colgap tw-flex tw-items-center tw-content-center tw-justify-center
                    tw-basis-full " data-ga-category="Element"
                      data-ga-click="3 - Sliding Elements Row (Sliding element 2)">
                      <span style="height : 50px;" class="tw-inline-flex tw-items-center tw-mx-3">
                        <svg class="tw-h-full tw-w-auto" width="30" height="30" viewbox="0 0 30 30" fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <path
                            d="M15 0C6.72656 0 0 6.72656 0 15C0 23.2734 6.72656 30 15 30C23.2734 30 30 23.2734 30 15C30 6.72656 23.2734 0 15 0ZM7.6875 12.627C7.78711 12.3164 8.0625 12.0996 8.39062 12.0703L12.8145 11.666L14.5605 7.57031C14.6895 7.27148 14.9824 7.07812 15.3105 7.07812C15.6387 7.07812 15.9316 7.27148 16.0605 7.57031L17.8066 11.666L22.2305 12.0703C22.5527 12.0996 22.8281 12.3223 22.9336 12.627C23.0332 12.9375 22.9395 13.2773 22.6934 13.4941L19.3477 16.4297L20.332 20.7715C20.4023 21.0938 20.2793 21.4219 20.0156 21.6152C19.752 21.8086 19.4004 21.8203 19.1191 21.6562L15.3047 19.377L11.4902 21.6562C11.3613 21.7324 11.2148 21.7734 11.0742 21.7734C10.9043 21.7734 10.7402 21.7207 10.5938 21.6211C10.3301 21.4277 10.207 21.0996 10.2773 20.7773L11.2617 16.4355L7.91602 13.5C7.68164 13.2773 7.58789 12.9375 7.6875 12.627Z"
                            fill="black"></path>
                        </svg> </span>
                      <span data-wrap-text="" class="">
                        Premium quality
                      </span>
                    </div>
                    <div class="tw-px-colgap tw-flex tw-items-center tw-content-center tw-justify-center
                    tw-basis-full " data-ga-category="Element"
                      data-ga-click="3 - Sliding Elements Row (Sliding element 3)">
                      <span style="height : 50px;" class="tw-inline-flex tw-items-center tw-mx-3">
                        <svg class="tw-h-full tw-w-auto" width="30" height="30" viewbox="0 0 30 30" fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <path
                            d="M15 0C6.72656 0 0 6.72656 0 15C0 23.2734 6.72656 30 15 30C23.2734 30 30 23.2734 30 15C30 6.72656 23.2734 0 15 0ZM23.7363 12.5566L22.377 20.4727C22.3008 20.9238 21.9082 21.252 21.4512 21.252H8.54883C8.0918 21.252 7.70508 20.9238 7.62305 20.4727L6.26367 12.5566C6.20508 12.2109 6.3457 11.8594 6.62695 11.6484C6.9082 11.4375 7.2832 11.4023 7.59961 11.5547L11.2148 13.3184L14.1797 7.98633C14.5078 7.38867 15.4863 7.38867 15.8203 7.98633L18.7852 13.3184L22.4004 11.5547C22.7168 11.4023 23.0918 11.4375 23.373 11.6484C23.6543 11.8594 23.7949 12.2109 23.7363 12.5566Z"
                            fill="black"></path>
                        </svg> </span>
                      <span data-wrap-text="" class="">
                        Best choice
                      </span>
                    </div>
                    <div class="tw-px-colgap tw-flex tw-items-center tw-content-center tw-justify-center
                    tw-basis-full " data-ga-category="Element"
                      data-ga-click="3 - Sliding Elements Row (Sliding element 1)">
                      <span style="height : 50px;" class="tw-inline-flex tw-items-center tw-mx-3">
                        <svg class="tw-h-full tw-w-auto" width="29" height="29" viewbox="0 0 29 29" fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <path
                            d="M14.5 0C6.50234 0 0 6.50234 0 14.5C0 22.4977 6.50234 29 14.5 29C22.4977 29 29 22.4977 29 14.5C29 6.50234 22.4977 0 14.5 0ZM7.91836 13.6504L8.46211 13.1066C8.90957 12.6592 9.63457 12.6592 10.0877 13.1066L12.7838 15.8027L20.0734 8.51309C20.5209 8.06563 21.2516 8.06563 21.699 8.51309L22.2428 9.05684C22.6902 9.5043 22.6902 10.235 22.2428 10.6824L13.3219 19.5977C13.1803 19.7393 12.982 19.8242 12.7781 19.8242C12.5742 19.8242 12.3816 19.7449 12.2344 19.5977L7.91269 15.276C7.4709 14.8285 7.4709 14.0979 7.91836 13.6504Z"
                            fill="black"></path>
                        </svg> </span>
                      <span data-wrap-text="" class="">
                        100% Original
                      </span>
                    </div>
                    <div class="tw-px-colgap tw-flex tw-items-center tw-content-center tw-justify-center
                    tw-basis-full " data-ga-category="Element"
                      data-ga-click="3 - Sliding Elements Row (Sliding element 2)">
                      <span style="height : 50px;" class="tw-inline-flex tw-items-center tw-mx-3">
                        <svg class="tw-h-full tw-w-auto" width="30" height="30" viewbox="0 0 30 30" fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <path
                            d="M15 0C6.72656 0 0 6.72656 0 15C0 23.2734 6.72656 30 15 30C23.2734 30 30 23.2734 30 15C30 6.72656 23.2734 0 15 0ZM7.6875 12.627C7.78711 12.3164 8.0625 12.0996 8.39062 12.0703L12.8145 11.666L14.5605 7.57031C14.6895 7.27148 14.9824 7.07812 15.3105 7.07812C15.6387 7.07812 15.9316 7.27148 16.0605 7.57031L17.8066 11.666L22.2305 12.0703C22.5527 12.0996 22.8281 12.3223 22.9336 12.627C23.0332 12.9375 22.9395 13.2773 22.6934 13.4941L19.3477 16.4297L20.332 20.7715C20.4023 21.0938 20.2793 21.4219 20.0156 21.6152C19.752 21.8086 19.4004 21.8203 19.1191 21.6562L15.3047 19.377L11.4902 21.6562C11.3613 21.7324 11.2148 21.7734 11.0742 21.7734C10.9043 21.7734 10.7402 21.7207 10.5938 21.6211C10.3301 21.4277 10.207 21.0996 10.2773 20.7773L11.2617 16.4355L7.91602 13.5C7.68164 13.2773 7.58789 12.9375 7.6875 12.627Z"
                            fill="black"></path>
                        </svg> </span>
                      <span data-wrap-text="" class="">
                        Premium quality
                      </span>
                    </div>
                    <div class="tw-px-colgap tw-flex tw-items-center tw-content-center tw-justify-center
                    tw-basis-full " data-ga-category="Element"
                      data-ga-click="3 - Sliding Elements Row (Sliding element 3)">
                      <span style="height : 50px;" class="tw-inline-flex tw-items-center tw-mx-3">
                        <svg class="tw-h-full tw-w-auto" width="30" height="30" viewbox="0 0 30 30" fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <path
                            d="M15 0C6.72656 0 0 6.72656 0 15C0 23.2734 6.72656 30 15 30C23.2734 30 30 23.2734 30 15C30 6.72656 23.2734 0 15 0ZM23.7363 12.5566L22.377 20.4727C22.3008 20.9238 21.9082 21.252 21.4512 21.252H8.54883C8.0918 21.252 7.70508 20.9238 7.62305 20.4727L6.26367 12.5566C6.20508 12.2109 6.3457 11.8594 6.62695 11.6484C6.9082 11.4375 7.2832 11.4023 7.59961 11.5547L11.2148 13.3184L14.1797 7.98633C14.5078 7.38867 15.4863 7.38867 15.8203 7.98633L18.7852 13.3184L22.4004 11.5547C22.7168 11.4023 23.0918 11.4375 23.373 11.6484C23.6543 11.8594 23.7949 12.2109 23.7363 12.5566Z"
                            fill="black"></path>
                        </svg> </span>
                      <span data-wrap-text="" class="">
                        Best choice
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="pt-3 pt-md-5 mb-md-n1"></div>
        <div class="container-primary">
          <form class="order-form" method="POST" action="/?order-form">
            <input type="hidden" name="_token" value="fjLbYmRPh7Y8quIT3xsbOtQJqyhVJcpraSrlzcPX" autocomplete="off">
            <style>
            .payment-declined-message-popup {
              --btn-background-primary: #0084FD;
              --btn-box-shadow-primary: none;
              --btn-border-radius: 10px;
            }
            </style>
            <div x-cloak="" x-data="" x-show="Alpine.store('cartPaymentDeclinedPopup').show()" class="payment-declined-message-popup tw-z-[1000] tw-fixed tw-top-0 tw-left-0 tw-w-[100vw] tw-h-[100vh]
     tw-flex tw-justify-center tw-items-center tw-bg-black/[.8]">
              <div class="tw-container tw-px-container md:tw-px-container-md lg:tw-px-container-lg
    xl:tw-px-container-xl">
                <div x-on:click.outside="Alpine.store('cartPaymentDeclinedPopup').hide()"
                  class="tw-rounded-[20px] tw-bg-black tw-w-full tw-max-w-[550px] tw-py-6 md:tw-py-10 tw-px-4 md:tw-px-6 tw-mx-auto tw-text-white tw-flex tw-items-center tw-flex-col">
                  <h4
                    class="tw-text-center tw-capitalize tw-text-h4-mob md:tw-text-h4 tw-text-h4-mob md:tw-text-h4 tw-mb-6 md:tw-mb-8">
                    Your payment has been declined. Reason: <nobr><span class="tw-text-[#ED0006]"
                        x-text="Alpine.store('cartPaymentDeclinedPopup').errorType"></span></nobr>
                  </h4>

                  <div class="tw-mb-6 md:tw-mb-8">
                    <img class="tw-mb-2 tw-mx-auto"
                      src='data:image/svg+xml;charset=utf-8,<svg fill="transparent" width="250" height="24" xmlns="http://www.w3.org/2000/svg"><rect width="100%" height="100%"/></svg>'
                      data-src="https://get-huusk.com/theme/components/payment-declined-message-popup/payments.svg"
                      alt="">
                    <p x-show="Alpine.store('cartPaymentDeclinedPopup').errorRecommendationMessage"
                      class="tw-text-sm md:tw-text-base tw-text-center tw-mb-0"
                      x-text="Alpine.store('cartPaymentDeclinedPopup').errorRecommendationMessage">
                    </p>
                  </div>
                  <div x-on:click="Alpine.store('cartPaymentDeclinedPopup').hide()"
                    class="btn btn-primary btn-medium !tw-normal-case !tw-bg-[#0084FD]">
                    Back to checkout </div>
                </div>
              </div>
            </div>
            <input name="brand" type="hidden" value="huusk">
            <input x-data="{value: ''}" name="added-taxes" type="hidden" x-bind:value="value"
              @update-added-taxes.window="value = $event.detail;">
            <template x-if="Alpine.store('cartDeliveryOptions').isSelectedParcelLocker()">
              <input x-data="" name="parcel_delivery_point" type="hidden" required=""
                x-bind:value="Alpine.store('cartParcelLocker').parcelLockerId"
                data-validation-error-insert-after="parcel-locker-error-placeholder"
                data-validation-error-name="Parcel locker">
            </template>
            <div
              wire:snapshot="{&quot;data&quot;:{&quot;show&quot;:false},&quot;memo&quot;:{&quot;id&quot;:&quot;ZSnOVVWkLVZIkL9x5DI8&quot;,&quot;name&quot;:&quot;cart.parcel-select.google-maps-with-cluster-marker-select&quot;,&quot;path&quot;:&quot;huusk\/order&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;children&quot;:[],&quot;scripts&quot;:[],&quot;assets&quot;:[],&quot;errors&quot;:[],&quot;locale&quot;:&quot;en&quot;},&quot;checksum&quot;:&quot;c6efa794de120e9636d57c867d81ff68c64dc24fba232629f63768436bad6560&quot;}"
              wire:effects="[]" wire:id="ZSnOVVWkLVZIkL9x5DI8">
              <div x-data="googleMapsWithClusterMarkerSelect">
              </div>
            </div>

            <div class="row">
              <div class="col-md-6">
                <div class="bg-white cart-box-first">
                  <div data-ga-section="4 - Discount Has Been Applied">
                    <div class="d-flex align-items-start">
                      <img style="width: 80px; height: 80px;" src="../theme/images/70-discount-badge.png"
                        onerror="this.src = 'https://get-huusk.com/theme/images/50-discount-badge.png'" alt="" class="">
                      <div class="ml-3 align-self-center align-self-sm-start align-self-md-center align-self-lg-start ">
                        <p style="color: #C73126" class="h4 font-weight-bold text-left mb-2">Your 70% Discount Has Been
                          Applied</p>
                        <div class="d-lg-block d-md-none d-sm-block d-none">
                          <p class="p font-weight-bold">
                            <b class="t-red">LIMITED TIME OFFER:</b>
                            <span>
                              <span class='text-capitalize'>Dall</span> is available at the price of <nobr><s>€
                                  99,83</s></nobr> <span>
                                <nobr class="t-green">€ 29,95</nobr> (70% Discount Per Unit)
                              </span>
                            </span>
                          </p>
                        </div>
                      </div>
                    </div>
                    <div class="d-sm-none d-md-block d-lg-none mt-2">
                      <p class="p font-weight-bold">
                        <b class="t-red">LIMITED TIME OFFER:</b>
                        <span>
                          <span class='text-capitalize'>Dall</span> is available at the price of <nobr><s>€ 99,83</s>
                          </nobr> <span>
                            <nobr class="t-green">€ 29,95</nobr> (70% Discount Per Unit)
                          </span>
                        </span>
                      </p>
                    </div>
                  </div>
                  <div class="cart-gap-2 skip-if-first"></div>
                  <div class="cart-gap-2"></div>
                  <p x-data="{
        number: 1,
        text: null
    }" @change-step-number-order.window="number = $event.detail" @change-step-text-order.window="text = $event.detail"
                    class="cart-step h4 font-weight-bold align-items-center mb-3"
                    style="display: flex; text-align: inherit;">
                    <img style="height: 20px; margin-right: 10px"
                      src='data:image/svg+xml;charset=utf-8,<svg width="30" height="30" xmlns="http://www.w3.org/2000/svg"><rect style="fill:transparent" width="100%" height="100%"/></svg>'
                      data-src="https://get-huusk.com/images/order/step/select.svg" alt="">
                    <template x-if="text">
                      <span x-html="text"></span>
                    </template>
                    <template x-if="text === null">
                      <span>Step 1: Select Quantity</span>
                    </template>
                  </p>
                  <div data-ga-section="5 - Quantity Selection">
                    <div class="order-options-grid justify-content-center order-quantity-options order-quantity-options--
            grid-cols-1 sm:grid-cols-2 md:grid-cols-1 lg:grid-cols-2">
                      <div x-data="{}" x-cloak="" x-cloak-pointer-events-none="" x-on:click="
                // For some reason radio input click propagates this click event too, so it triggers twice.
                // It's possible to set x-on:click handler with event.stopPropagation()
                Alpine.store('cartOptions').setSelectedWithIndex(0)
            " @update-order-option-value-with-quantity-4.window="$refs.input.value = event.detail"
                        @update-order-option-image-with-quantity-4.window="$refs.image.src = event.detail"
                        @update-order-option-price-display-with-quantity-4.window="
                $refs.totalPrice.innerText = event.detail.totalPrice;
                $refs.oldPrice.innerText = event.detail.oldPrice;
             " class="w-100 form-check m-0 p-0 overflow-hidden- position-relative order-form-check- d-flex flex-column
                    drop-shadow order-form-check-- " data-ga-category="Element"
                        data-ga-click="5 - Quantity Selection (Quantity select 1)">
                        <div class="order-quantity-options__badge text-center
                    order-quantity-options__badge--
                    z-index-1 font-weight-bold note2 px-2 py-1 tw-uppercase !tw-text-white
                    ">
                          <span>
                            Most Popular
                          </span>
                        </div>
                        <input class="form-check-input order-1 d-none " x-ref="input" id="product-0" required=""
                          data-formatted-price="€ 79,92"
                          x-on:change="$dispatch(&#039;order-option-changed&#039;,4); $dispatch(&#039;update-selected&#039;, { selectedDiscount: &#039;70%&#039;, selected: &#039;[\u0022huusk-v2\u0022,\u002279.92\u0022,4,\u00224 Huusk Knives\u0022,[],\u0022EUR\u0022,null,0,\u0022266.4\u0022,[],\u0022https:\\\/\\\/get-huusk.com\\\/huusk\\\/order\u0022,\u0022physical_product\u0022,\u0022266.4\u0022,70,null]&#039;})"
                          data-count="4"
                          @order-option-changed.window="if ($refs.input.dataset.count == $event.detail) { $refs.input.checked = true; }"
                          @update-selected.window="if ($refs.input.value === $event.detail.selected) { $refs.input.checked = true; }"
                          name="product[p1]" type="radio"
                          value="[&quot;huusk-v2&quot;,&quot;79.92&quot;,4,&quot;4 Huusk Knives&quot;,[],&quot;EUR&quot;,null,0,&quot;266.4&quot;,[],&quot;https:\/\/get-huusk.com\/huusk\/order&quot;,&quot;physical_product&quot;,&quot;266.4&quot;,70,null]">
                        <label class="w-100 h-100 order-quantity-options__label order-3 tw-relative 
                order-quantity-options__label--
                justify-content-center form-check-label
                order-quantity-options d-flex flex-wrap mb-0 font-weight-normal cursor-pointer" style="padding: 10px"
                          for="product-0">
                          <span class="order-quantity-options__product-img image tw-w-[50%] d-flex align-items-center
                    justify-content-center ">
                            <img x-ref="image" class="  " style="" src="../img/pricing-icon-1.png" alt="Pricing icon">
                          </span>
                          <span class="d-flex flex-column justify-content-center price-holder justify-content-center tw-w-[50%] 
                    align-items-center text-center">
                            <span class="font-weight-bold w-100 label d-flex flex-column" style="margin-bottom: 10px;">
                              <span class="f-38 d-flex flex-wrap align-items-baseline lh-1
                                justify-content-center">

                                <span class="f-30"></span>
                              </span>
                              <span class="options-label mt-1 !tw-text-xs !tw-min-h-[32px] options-label--"
                                data-adjust-font="" style="">
                                <span>Basic</span>
                              </span>
                            </span>
                            <span class="f-14 f-md-22 f-lg-14 d-block ">
                              <span class="product-old-price d-block price2 price2--eur" style="color: #b1b2b3;"
                                data-original-price="266.4">
                                <span class="tw-inline-flex tw-relative tw-mb-[3px]" x-ref="oldPrice">
                                  € 266
                                  <span class="tw-inline-flex tw-flex-col tw-justify-start tw-gap-[0.1rem]">
                                    <span class="tw-text-[0.75em] tw-ms-[0.15em] tw-mt-[-0.1em] tw-leading-none">

                                    </span>
                                  </span>
                                  <span class="tw-inline-block tw-w-[120%] tw-mx-[-10%] tw-h-[1px] tw-border-solid tw-border-b-[.1em]
                        tw-border-current tw-absolute tw-top-[calc(50%-0.1em)]"></span>
                                </span>
                              </span>
                            </span>
                            <span class="f-25 f-md-33 f-lg-22 f-xl-23 d-block ">
                              <b class="product-current-price no-wrap d-block price2 price2--eur lh-1 "
                                style="color: #5acd65" data-total-price="21.50">
                                <span class="tw-inline-flex tw-relative" x-ref="totalPrice">
                                  $ 21.50
                                  <span class="tw-inline-flex tw-flex-col tw-justify-start tw-gap-[0.1rem]">
                                    <span class="tw-text-[0.75em] tw-ms-[0.15em] tw-mt-[-0.1em] tw-leading-none">
                                       10
                                    </span>
                                  </span>
                                </span>
                              </b>
                            </span>
                          </span>
                        </label>
                      </div>
                      <div x-data="{}" x-cloak="" x-cloak-pointer-events-none="" x-on:click="
                // For some reason radio input click propagates this click event too, so it triggers twice.
                // It's possible to set x-on:click handler with event.stopPropagation()
                Alpine.store('cartOptions').setSelectedWithIndex(1)
            " @update-order-option-value-with-quantity-3.window="$refs.input.value = event.detail"
                        @update-order-option-image-with-quantity-3.window="$refs.image.src = event.detail"
                        @update-order-option-price-display-with-quantity-3.window="
                $refs.totalPrice.innerText = event.detail.totalPrice;
                $refs.oldPrice.innerText = event.detail.oldPrice;
             " class="w-100 form-check m-0 p-0 overflow-hidden- position-relative order-form-check- d-flex flex-column
                    drop-shadow order-form-check-- " data-ga-category="Element"
                        data-ga-click="5 - Quantity Selection (Quantity select 2)">
                        <div class="order-quantity-options__badge text-center
                    order-quantity-options__badge--
                    z-index-1 font-weight-bold note2 px-2 py-1 tw-uppercase !tw-text-white
                    tw-opacity-0 tw-hidden sm:tw-block md:tw-hidden lg:tw-block">
                          <span>
                            Most Popular
                          </span>
                        </div>
                        <input class="form-check-input order-1 d-none " x-ref="input" id="product-1" required=""
                          data-formatted-price="€ 65,94"
                          x-on:change="$dispatch(&#039;order-option-changed&#039;,3); $dispatch(&#039;update-selected&#039;, { selectedDiscount: &#039;70%&#039;, selected: &#039;[\u0022huusk-v2\u0022,\u002265.94\u0022,3,\u00223 Huusk Knives\u0022,[],\u0022EUR\u0022,null,0,\u0022219.8\u0022,[],\u0022https:\\\/\\\/get-huusk.com\\\/huusk\\\/order\u0022,\u0022physical_product\u0022,\u0022219.8\u0022,70,null]&#039;})"
                          data-count="3"
                          @order-option-changed.window="if ($refs.input.dataset.count == $event.detail) { $refs.input.checked = true; }"
                          @update-selected.window="if ($refs.input.value === $event.detail.selected) { $refs.input.checked = true; }"
                          name="product[p1]" type="radio"
                          value="[&quot;huusk-v2&quot;,&quot;65.94&quot;,3,&quot;3 Huusk Knives&quot;,[],&quot;EUR&quot;,null,0,&quot;219.8&quot;,[],&quot;https:\/\/get-huusk.com\/huusk\/order&quot;,&quot;physical_product&quot;,&quot;219.8&quot;,70,null]">
                        <label class="w-100 h-100 order-quantity-options__label order-3 tw-relative 
                order-quantity-options__label--
                justify-content-center form-check-label
                order-quantity-options d-flex flex-wrap mb-0 font-weight-normal cursor-pointer" style="padding: 10px"
                          for="product-1">
                          <span class="order-quantity-options__product-img image tw-w-[50%] d-flex align-items-center
                    justify-content-center ">
                            <img x-ref="image" class="  " style="" src="../img/pricing-icon-2.png" alt="3 Huusk Knives">
                          </span>
                          <span class="d-flex flex-column justify-content-center price-holder justify-content-center tw-w-[50%] 
                    align-items-center text-center">
                            <span class="font-weight-bold w-100 label d-flex flex-column" style="margin-bottom: 10px;">
                              <span class="f-38 d-flex flex-wrap align-items-baseline lh-1
                                justify-content-center">

                                <span class="f-30"></span>
                              </span>
                              <span class="options-label mt-1 !tw-text-xs !tw-min-h-[32px] options-label--"
                                data-adjust-font="" style="">
                                <span>Standard</span>
                              </span>
                            </span>
                            <span class="f-14 f-md-22 f-lg-14 d-block ">
                              <span class="product-old-price d-block price2 price2--eur" style="color: #b1b2b3;"
                                data-original-price="35.50">
                                <span class="tw-inline-flex tw-relative tw-mb-[3px]" x-ref="oldPrice">

                                  <span class="tw-inline-flex tw-flex-col tw-justify-start tw-gap-[0.1rem]">
                                    <span class="tw-text-[0.75em] tw-ms-[0.15em] tw-mt-[-0.1em] tw-leading-none">
                                      40
                                    </span>
                                  </span>
                                  <span class="tw-inline-block tw-w-[120%] tw-mx-[-10%] tw-h-[1px] tw-border-solid tw-border-b-[.1em]
                        tw-border-current tw-absolute tw-top-[calc(50%-0.1em)]"></span>
                                </span>
                              </span>
                            </span>
                            <span class="f-25 f-md-33 f-lg-22 f-xl-23 d-block ">
                              <b class="product-current-price no-wrap d-block price2 price2--eur lh-1 "
                                style="color: #5acd65" data-total-price="35.50">
                                <span class="tw-inline-flex tw-relative" x-ref="totalPrice">
                                  $ 35.50
                                  <span class="tw-inline-flex tw-flex-col tw-justify-start tw-gap-[0.1rem]">
                                    <span class="tw-text-[0.75em] tw-ms-[0.15em] tw-mt-[-0.1em] tw-leading-none">
                                      94
                                    </span>
                                  </span>
                                </span>
                              </b>
                            </span>
                          </span>
                        </label>
                      </div>
                      <div x-data="{}" x-cloak="" x-cloak-pointer-events-none="" x-on:click="
                // For some reason radio input click propagates this click event too, so it triggers twice.
                // It's possible to set x-on:click handler with event.stopPropagation()
                Alpine.store('cartOptions').setSelectedWithIndex(2)
            " @update-order-option-value-with-quantity-2.window="$refs.input.value = event.detail"
                        @update-order-option-image-with-quantity-2.window="$refs.image.src = event.detail"
                        @update-order-option-price-display-with-quantity-2.window="
                $refs.totalPrice.innerText = event.detail.totalPrice;
                $refs.oldPrice.innerText = event.detail.oldPrice;
             " class="w-100 form-check m-0 p-0 overflow-hidden- position-relative order-form-check- d-flex flex-column
                    drop-shadow order-form-check-- " data-ga-category="Element"
                        data-ga-click="5 - Quantity Selection (Quantity select 3)">
                        <input class="form-check-input order-1 d-none " x-ref="input" id="product-2" required=""
                          data-formatted-price="€ 49,94"
                          x-on:change="$dispatch(&#039;order-option-changed&#039;,2); $dispatch(&#039;update-selected&#039;, { selectedDiscount: &#039;70%&#039;, selected: &#039;[\u0022huusk-v2\u0022,\u002249.94\u0022,2,\u00222 Huusk Knives\u0022,[],\u0022EUR\u0022,null,0,\u0022166.47\u0022,[],\u0022https:\\\/\\\/get-huusk.com\\\/huusk\\\/order\u0022,\u0022physical_product\u0022,\u0022166.47\u0022,70,null]&#039;})"
                          data-count="2"
                          @order-option-changed.window="if ($refs.input.dataset.count == $event.detail) { $refs.input.checked = true; }"
                          @update-selected.window="if ($refs.input.value === $event.detail.selected) { $refs.input.checked = true; }"
                          checked="checked" name="product[p1]" type="radio"
                          value="[&quot;huusk-v2&quot;,&quot;49.94&quot;,2,&quot;2 Huusk Knives&quot;,[],&quot;EUR&quot;,null,0,&quot;166.47&quot;,[],&quot;https:\/\/get-huusk.com\/huusk\/order&quot;,&quot;physical_product&quot;,&quot;166.47&quot;,70,null]">
                        <label class="w-100 h-100 order-quantity-options__label order-3 tw-relative 
                order-quantity-options__label--
                justify-content-center form-check-label
                order-quantity-options d-flex flex-wrap mb-0 font-weight-normal cursor-pointer" style="padding: 10px"
                          for="product-2">
                          <span class="order-quantity-options__product-img image tw-w-[50%] d-flex align-items-center
                    justify-content-center ">
                            <img x-ref="image" class="  " style="" src="../img/pricing-icon-3.png"
                              alt="2 Huusk Knives">
                          </span>
                          <span class="d-flex flex-column justify-content-center price-holder justify-content-center tw-w-[50%] 
                    align-items-center text-center">
                            <span class="font-weight-bold w-100 label d-flex flex-column" style="margin-bottom: 10px;">
                              <span class="f-38 d-flex flex-wrap align-items-baseline lh-1
                                justify-content-center">
                                
                                <span class="f-30">
                                
                                </span>
                              </span>
                              <span class="options-label mt-1 !tw-text-xs !tw-min-h-[32px] options-label--"
                                data-adjust-font="" style="">
                                <span>Professional</span>
                              </span>
                            </span>
                            <span class="f-14 f-md-22 f-lg-14 d-block ">
                              <span class="product-old-price d-block price2 price2--eur" style="color: #b1b2b3;"
                                data-original-price="166.47">
                                <span class="tw-inline-flex tw-relative tw-mb-[3px]" x-ref="oldPrice">
                                  € 166
                                  <span class="tw-inline-flex tw-flex-col tw-justify-start tw-gap-[0.1rem]">
                                    <span class="tw-text-[0.75em] tw-ms-[0.15em] tw-mt-[-0.1em] tw-leading-none">
                                      47
                                    </span>
                                  </span>
                                  <span class="tw-inline-block tw-w-[120%] tw-mx-[-10%] tw-h-[1px] tw-border-solid tw-border-b-[.1em]
                        tw-border-current tw-absolute tw-top-[calc(50%-0.1em)]"></span>
                                </span>
                              </span>
                            </span>
                            <span class="f-25 f-md-33 f-lg-22 f-xl-23 d-block ">
                              <b class="product-current-price no-wrap d-block price2 price2--eur lh-1 "
                                style="color: #5acd65" data-total-price="49.94">
                                <span class="tw-inline-flex tw-relative" x-ref="totalPrice">
                                  € 42
                                  <span class="tw-inline-flex tw-flex-col tw-justify-start tw-gap-[0.1rem]">
                                    <span class="tw-text-[0.75em] tw-ms-[0.15em] tw-mt-[-0.1em] tw-leading-none">
                                      94
                                    </span>
                                  </span>
                                </span>
                              </b>
                            </span>
                          </span>
                        </label>
                      </div>
                      <div x-data="{}" x-cloak="" x-cloak-pointer-events-none="" x-on:click="
                // For some reason radio input click propagates this click event too, so it triggers twice.
                // It's possible to set x-on:click handler with event.stopPropagation()
                Alpine.store('cartOptions').setSelectedWithIndex(3)
            " @update-order-option-value-with-quantity-1.window="$refs.input.value = event.detail"
                        @update-order-option-image-with-quantity-1.window="$refs.image.src = event.detail"
                        @update-order-option-price-display-with-quantity-1.window="
                $refs.totalPrice.innerText = event.detail.totalPrice;
                $refs.oldPrice.innerText = event.detail.oldPrice;
             " class="w-100 form-check m-0 p-0 overflow-hidden- position-relative order-form-check- d-flex flex-column
                    drop-shadow order-form-check-- " data-ga-category="Element"
                        data-ga-click="5 - Quantity Selection (Quantity select 4)">
                        <input class="form-check-input order-1 d-none " x-ref="input" id="product-3" required=""
                          data-formatted-price="€ 29,95"
                          x-on:change="$dispatch(&#039;order-option-changed&#039;,1); $dispatch(&#039;update-selected&#039;, { selectedDiscount: &#039;70%&#039;, selected: &#039;[\u0022huusk-v2\u0022,\u002229.95\u0022,1,\u00221 Huusk Knives\u0022,[],\u0022EUR\u0022,null,0,\u002299.83\u0022,[],\u0022https:\\\/\\\/get-huusk.com\\\/huusk\\\/order\u0022,\u0022physical_product\u0022,\u002299.83\u0022,70,null]&#039;})"
                          data-count="1"
                          @order-option-changed.window="if ($refs.input.dataset.count == $event.detail) { $refs.input.checked = true; }"
                          @update-selected.window="if ($refs.input.value === $event.detail.selected) { $refs.input.checked = true; }"
                          name="product[p1]" type="radio"
                          value="[&quot;huusk-v2&quot;,&quot;29.95&quot;,1,&quot;1 Huusk Knives&quot;,[],&quot;EUR&quot;,null,0,&quot;99.83&quot;,[],&quot;https:\/\/get-huusk.com\/huusk\/order&quot;,&quot;physical_product&quot;,&quot;99.83&quot;,70,null]">
                        <label class="w-100 h-100 order-quantity-options__label order-3 tw-relative 
                order-quantity-options__label--
                justify-content-center form-check-label
                order-quantity-options d-flex flex-wrap mb-0 font-weight-normal cursor-pointer" style="padding: 10px"
                          for="product-3">
                          <span class="order-quantity-options__product-img image tw-w-[50%] d-flex align-items-center
                    justify-content-center ">
                            <img x-ref="image" class="  " style="" src="../img/pricing-icon-4.png" alt="1 Huusk Knives">
                          </span>
                          <span class="d-flex flex-column justify-content-center price-holder justify-content-center tw-w-[50%] 
                    align-items-center text-center">
                            <span class="font-weight-bold w-100 label d-flex flex-column" style="margin-bottom: 10px;">
                              <span class="f-38 d-flex flex-wrap align-items-baseline lh-1
                                justify-content-center">
                              
                                <span class="f-30">

                                </span>
                              </span>
                              <span class="options-label mt-1 !tw-text-xs !tw-min-h-[32px] options-label--"
                                data-adjust-font="" style="">
                                <span>Premium</span>
                              </span>
                            </span>
                            <span class="f-14 f-md-22 f-lg-14 d-block ">
                              <span class="product-old-price d-block price2 price2--eur" style="color: #b1b2b3;"
                                data-original-price="99.83">
                                <span class="tw-inline-flex tw-relative tw-mb-[3px]" x-ref="oldPrice">
                                  € 99
                                  <span class="tw-inline-flex tw-flex-col tw-justify-start tw-gap-[0.1rem]">
                                    <span class="tw-text-[0.75em] tw-ms-[0.15em] tw-mt-[-0.1em] tw-leading-none">
                                      83
                                    </span>
                                  </span>
                                  <span class="tw-inline-block tw-w-[120%] tw-mx-[-10%] tw-h-[1px] tw-border-solid tw-border-b-[.1em]
                        tw-border-current tw-absolute tw-top-[calc(50%-0.1em)]"></span>
                                </span>
                              </span>
                            </span>
                            <span class="f-25 f-md-33 f-lg-22 f-xl-23 d-block ">
                              <b class="product-current-price no-wrap d-block price2 price2--eur lh-1 "
                                style="color: #5acd65" data-total-price="29.95">
                                <span class="tw-inline-flex tw-relative" x-ref="totalPrice">
                                  € 29
                                  <span class="tw-inline-flex tw-flex-col tw-justify-start tw-gap-[0.1rem]">
                                    <span class="tw-text-[0.75em] tw-ms-[0.15em] tw-mt-[-0.1em] tw-leading-none">
                                      95
                                    </span>
                                  </span>
                                </span>
                              </b>
                            </span>
                          </span>
                        </label>
                      </div>
                    </div>
                  </div>
                  <div data-klarna-unload="">
                    <div class="cart-gap-2"></div>
                  </div>
                  <div id="delivery-options-left-placeholder"></div>
                  <div x-data="{}" x-on:input.once="$dispatch('everflow-customer-info-form-touched')"
                    data-klarna-unload="" class="order-customer-information order-customer-information--"
                    data-ga-section="6 - Customer Information">
                    <p x-data="{
        number: 2,
        text: null
    }" @change-step-number-customer.window="number = $event.detail"
                      @change-step-text-customer.window="text = $event.detail"
                      class="cart-step h4 font-weight-bold align-items-center mb-3 mt-0 mb-3"
                      style="display: flex; text-align: inherit;">
                      <img style="height: 20px; margin-right: 10px"
                        src='data:image/svg+xml;charset=utf-8,<svg width="30" height="30" xmlns="http://www.w3.org/2000/svg"><rect style="fill:transparent" width="100%" height="100%"/></svg>'
                        data-src="https://get-huusk.com/images/order/step/customer-information.svg" alt="">
                      <template x-if="text">
                        <span x-html="text"></span>
                      </template>
                      <template x-if="text === null">
                        <span>Step <span x-text="number"></span>: Customer Information</span>
                      </template>
                    </p>
                    <div class="row no-gutters mx-n2">
                      <div class="px-2 col-lg-6">
                        <label class="p cart-input-label" for="first_name">First Name</label>
                        <div class="position-relative mb-3">
                          <input data-validation-error-name="First Name" type="text" placeholder="First Name"
                            class="cart-input p" id="first_name" name="first_name" required="required">

                        </div>
                      </div>
                      <div class="px-2 col-lg-6">
                        <label class="p cart-input-label" for="last_name">Last Name</label>
                        <div class="position-relative mb-3">
                          <input data-validation-error-name="Last Name" type="text" placeholder="Last Name"
                            class="cart-input p" id="last_name" name="last_name" required="required">

                        </div>
                      </div>
                    </div>
                    <label class="p cart-input-label" for="email">Email Address</label>
                    <div class="position-relative mb-3">
                      <input data-validation-error-name="Email Address" type="email" placeholder="Email Address"
                        class="cart-input p" id="email" name="email" required="required">

                    </div>
                    <div class="d-flex align-items-center cursor-pointer mt-2">
                      <input id="email_subscribe" name="email_subscribe" type="checkbox" value="1">
                      <label for="email_subscribe" class="note2 cursor-pointer flex-1 ml-2"
                        label="I agree to receive marketing information about other products." for="">I agree to receive
                        marketing information about other products.</label>
                    </div>
                    <input name="email_subscribe_shown" type="hidden" value="1">
                    <div class="d-flex align-items-start mt-2 cursor-pointer mb-3">
                      <input id="sms_subscribe" name="sms_subscribe" type="checkbox" value="1">
                      <label for="sms_subscribe" class="note2 cursor-pointer flex-1 ml-2"
                        label="&lt;b&gt;Sign me up for Huusk Alerts.&lt;/b&gt;&lt;br/&gt;&lt;span style=font-size:10px;&gt;By submitting your call phone number you are agreeing to receive automated marketing messages and calls from Huusk. Message frequency varies. Reply STOP to cancel. Message and Data Rates May Apply. &lt;a href=https://get-huusk.com/huusk/terms?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&amp;ppwa=payments%40convenity.com&amp;hj=1&amp;pmt=ip&amp;amex=1&amp;oxlis=2&amp;esc=1&amp;ssb=1&amp;tos=1&amp;gae=1&amp;huuskv2=1&amp;eppss=1&amp;qpp=3&amp;prodpv=22&amp;ly=20&amp;gc=1&amp;_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051 style=text-decoration:underline&gt;Terms of Service&lt;/a&gt; and &lt;a href=https://get-huusk.com/huusk/privacy?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&amp;ppwa=payments%40convenity.com&amp;hj=1&amp;pmt=ip&amp;amex=1&amp;oxlis=2&amp;esc=1&amp;ssb=1&amp;tos=1&amp;gae=1&amp;huuskv2=1&amp;eppss=1&amp;qpp=3&amp;prodpv=22&amp;ly=20&amp;gc=1&amp;_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051 style=text-decoration:underline&gt;Privacy Policy&lt;/a&gt;.&lt;/span&gt;"
                        for=""><b>Sign me up for Dall Alerts.</b><br><span style="font-size:10px;">By submitting your
                          call phone number you are agreeing to receive automated marketing messages and calls from
                          Dall. Message frequency varies. Reply STOP to cancel. Message and Data Rates May Apply. <a
                            href="https://get-huusk.com/huusk/terms?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051"
                            style="text-decoration:underline">Terms of Service</a> and <a
                            href="https://get-huusk.com/huusk/privacy?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051"
                            style="text-decoration:underline">Privacy Policy</a>.</span></label>
                    </div>
                    <input name="sms_subscribe_shown" type="hidden" value="1">
                    <div>
                      <label class="p cart-input-label" for="phone_number">Phone Number</label>
                      <div class="mb-0">
                        <input data-validation-error-name="Phone Number" type="text" placeholder="Phone Number"
                          class="cart-input p" id="phone_number" name="phone_number" required="required"
                          data-country="NG">

                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="bg-white cart-box-second">
                  <div class="d-none d-md-block">
                    <div class="d-flex align-items-center ">
                      <svg style="min-width: 24px;" width="24" height="20" viewbox="0 0 24 20" fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <path
                          d="M20.0616 0.5L8.86518 11.6534L3.93839 6.74456L0 10.6688L8.86518 19.5L24 4.42328L20.0616 0.5Z"
                          fill="#3475F6"></path>
                      </svg>
                      <p class="p mb-0 ml-2"><strong>100% Traditional Japanese design</strong> </p>
                    </div>
                    <div class="d-flex align-items-center mt-2">
                      <svg style="min-width: 24px;" width="24" height="20" viewbox="0 0 24 20" fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <path
                          d="M20.0616 0.5L8.86518 11.6534L3.93839 6.74456L0 10.6688L8.86518 19.5L24 4.42328L20.0616 0.5Z"
                          fill="#3475F6"></path>
                      </svg>
                      <p class="p mb-0 ml-2"><strong>30 Day Money Back - Satisfaction Guarantee</strong> </p>
                      <span data-toggle="tooltip" data-placement="top"
                        title="If You have changed your mind You can return an unused and unopened product. Shipping costs and restocking fee will be applied">
                        <img style="width: 20px" src="" class="tw-inline-block"
                          data-src="https://get-huusk.com/theme/common/icons/info.svg " alt="">
                      </span>
                    </div>
                    <div class="d-flex align-items-center mt-2">
                      <svg style="min-width: 24px;" width="24" height="20" viewbox="0 0 24 20" fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <path
                          d="M20.0616 0.5L8.86518 11.6534L3.93839 6.74456L0 10.6688L8.86518 19.5L24 4.42328L20.0616 0.5Z"
                          fill="#3475F6"></path>
                      </svg>
                      <p class="p mb-0 ml-2"><strong>Precisely crafted to the last detail</strong> </p>
                    </div>
                  </div>
                  <div class="d-none d-md-block">
                    <div class="cart-gap-2"></div>
                  </div>
                  <div id="order-cod-badge" class="tw-hidden tw-flex-col">
                    <div class="cod-delivery">
                      <div class="tw-flex tw-items-stretch tw-w-full tw-bg-center tw-bg-cover sm:!tw-bg-none"
                        data-srcset="https://get-huusk.com/assets/theme/components/cod-order-delivery-banner/bg-mob.jpg?q=80&fm=jpg&w=778&s=2ce6c7558b6ea4fc33060ab9afe43db0 0, https://get-huusk.com/assets/theme/components/cod-order-delivery-banner/bg-mob.jpg?q=80&fm=jpg&w=778&s=2ce6c7558b6ea4fc33060ab9afe43db0 576, https://get-huusk.com/assets/theme/components/cod-order-delivery-banner/bg-mob.jpg?q=80&fm=jpg&w=1037&s=5a89e4ad8c3e654195dfd1521239521b 768, https://get-huusk.com/assets/theme/components/cod-order-delivery-banner/bg-mob.jpg?q=80&fm=jpg&w=1382&s=03c778e73256cd8603e0f79369facd09 1023, https://get-huusk.com/assets/theme/components/cod-order-delivery-banner/bg-mob.jpg?q=80&fm=jpg&w=1891&s=fd64ec863fc044efac063dca6c853f1a 1400, https://get-huusk.com/assets/theme/components/cod-order-delivery-banner/bg-mob.jpg?q=80&fm=jpg&w=2106&s=f55f55e6d4cd6b5db1eebbb18b2a2027 1560, https://get-huusk.com/assets/theme/components/cod-order-delivery-banner/bg-mob.jpg?q=80&fm=jpg&w=2525&s=f69f2388ed770ca69733e49e9c7006cb 1870">
                        <div class="tw-hidden sm:tw-block tw-relative tw-me-6 lg:tw-me-10">
                          <div class="cod-delivery__icon tw-rounded-full tw-absolute tw-end-0 tw-top-1/2">
                            <svg class="position-absolute translate-center" width="100%" height="40" viewbox="0 0 53 40"
                              fill="none" xmlns="http://www.w3.org/2000/svg">
                              <g clip-path="url(#clip0_1029_15)">
                                <path class="st0"
                                  d="M50.3733 22.5665C50.2639 22.6538 50.1275 22.6992 49.9885 22.6947C49.8496 22.6902 49.717 22.636 49.6146 22.5419C45.0213 18.3344 37.8846 11.9039 37.047 11.4341L36.7882 11.2885C35.7343 10.6912 34.7386 10.1274 33.8125 10.3941C32.5955 10.7459 28.3621 12.2909 28.3193 12.3078C28.2467 12.3344 28.1697 12.3463 28.0927 12.3428C28.0157 12.3394 27.9402 12.3207 27.8706 12.2878C27.801 12.2549 27.7386 12.2084 27.6869 12.1511C27.6352 12.0937 27.5953 12.0266 27.5695 11.9536C27.5436 11.8805 27.5324 11.8029 27.5363 11.7253C27.5402 11.6476 27.5592 11.5714 27.5923 11.501C27.6254 11.4305 27.6719 11.3673 27.7291 11.3148C27.7863 11.2623 27.8531 11.2217 27.9257 11.1951C28.1019 11.1311 32.2405 9.62043 33.4961 9.25794C34.8906 8.8545 36.2075 9.59946 37.3677 10.2566L37.6223 10.4001C38.8456 11.0867 49.2268 20.5846 50.4064 21.665C50.4632 21.7171 50.5092 21.78 50.5418 21.8501C50.5744 21.9203 50.5929 21.9963 50.5963 22.0739C50.5997 22.1515 50.5879 22.229 50.5616 22.3022C50.5353 22.3754 50.4949 22.4427 50.4429 22.5003C50.4216 22.5243 50.3983 22.5465 50.3733 22.5665V22.5665Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M44.098 28.3431C44.025 28.4009 43.9396 28.4405 43.8488 28.4589C43.7867 28.4713 42.3146 28.7676 40.7479 28.3652C39.2222 27.9733 38.1469 27.2094 37.0077 26.1838C36.5285 25.7528 36.0921 25.1428 35.6722 24.554C35.1356 23.8016 34.5806 23.0238 34.0261 22.7544C33.576 22.5366 31.8762 21.8098 29.9079 20.9679C28.9959 20.5782 28.0233 20.1619 27.0908 19.7609C24.3352 18.5744 22.9078 17.9337 22.4587 17.6824C21.4124 17.0955 21.0661 16.3396 20.9596 15.8087C20.8284 15.1572 20.9678 14.439 21.3615 13.7315C21.8026 12.9375 22.7802 12.0964 24.9268 12.5993C26.0111 12.8531 36.0008 15.1826 36.0008 15.1826L35.7297 16.3356C35.7297 16.3356 25.7386 14.0063 24.6542 13.7524C23.5023 13.4823 22.738 13.668 22.384 14.3045C22.2048 14.6221 22.0158 15.0997 22.1094 15.5669C22.1942 15.9867 22.5054 16.3506 23.0345 16.6471C23.5635 16.9436 25.8707 17.946 27.5575 18.6718C28.4867 19.0724 29.4576 19.4874 30.372 19.878C32.3537 20.7258 34.0651 21.4573 34.5401 21.688C35.3618 22.0868 36.0047 22.9879 36.6259 23.859C37.0274 24.4204 37.4058 24.9519 37.7913 25.2984C38.8346 26.236 39.7423 26.8872 41.0442 27.2181C42.3461 27.549 43.6078 27.3022 43.6206 27.2995C43.7502 27.2722 43.8849 27.2898 44.0028 27.3494C44.1208 27.409 44.215 27.5072 44.2702 27.628C44.3255 27.7488 44.3385 27.8852 44.3073 28.015C44.276 28.1448 44.2023 28.2604 44.098 28.3431V28.3431Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M35.5469 23.8974C35.5358 23.9065 35.5243 23.915 35.5123 23.9229C35.364 24.0254 32.832 25.3065 31.8278 24.8829C31.6146 24.7932 31.2443 24.6818 30.8513 24.5633C30.1291 24.3454 29.3102 24.0985 28.7574 23.7881C28.6902 23.7505 28.6312 23.6998 28.5837 23.639C28.5361 23.5782 28.501 23.5085 28.4802 23.4338C28.4595 23.3591 28.4536 23.281 28.4628 23.2038C28.472 23.1266 28.4962 23.0519 28.534 22.984C28.5718 22.916 28.6225 22.8562 28.6831 22.8078C28.7437 22.7595 28.813 22.7236 28.8872 22.7022C28.9614 22.6808 29.039 22.6743 29.1154 22.6831C29.1919 22.6919 29.2658 22.7158 29.3329 22.7535C29.775 23.001 30.561 23.238 31.1927 23.4289C31.6352 23.5617 32.0143 23.6761 32.2852 23.7906C32.6832 23.8905 34.4727 23.1931 34.856 22.9452C34.9866 22.8605 35.1445 22.8303 35.2961 22.8611C35.4477 22.8919 35.581 22.9812 35.6676 23.11C35.7491 23.2319 35.782 23.3806 35.7596 23.5265C35.7372 23.6724 35.6613 23.8048 35.5469 23.8974V23.8974Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M36.412 26.7384C35.8345 27.1999 35.1558 27.6837 34.7113 27.8118C33.7556 28.0873 29.8474 27.2395 29.2028 27.0315C28.18 26.7023 27.5992 25.7443 27.7586 24.648C27.8144 24.2317 27.9865 23.8392 28.2548 23.5166C28.5231 23.1939 28.8766 22.9544 29.2737 22.8262C29.422 22.7878 29.579 22.8091 29.7111 22.8857C29.8433 22.9623 29.9403 23.088 29.9815 23.2362C30.0226 23.3844 30.0047 23.5433 29.9316 23.6792C29.8584 23.815 29.7358 23.9171 29.5897 23.9636C29.4115 24.0291 29.2545 24.1431 29.1363 24.293C29.018 24.4428 28.9431 24.6225 28.92 24.8121C28.843 25.3411 29.0854 25.7489 29.5668 25.9042C30.3948 26.1712 33.8429 26.8139 34.3939 26.6724C34.7611 26.5663 35.864 25.7036 36.674 24.9662C36.731 24.9115 36.7981 24.8687 36.8715 24.8405C36.9449 24.8123 37.0231 24.7991 37.1015 24.8018C37.1798 24.8045 37.2567 24.823 37.3276 24.8562C37.3985 24.8895 37.462 24.9367 37.5144 24.9952C37.5668 25.0537 37.6069 25.1223 37.6324 25.1968C37.658 25.2714 37.6684 25.3505 37.6631 25.4294C37.6578 25.5083 37.6369 25.5855 37.6016 25.6563C37.5663 25.7271 37.5173 25.7902 37.4576 25.8418C37.3164 25.9743 36.9001 26.3483 36.412 26.7384Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M29.172 23.9634C28.8539 24.2157 28.4748 24.3773 28.0747 24.4312L8.1692 27.1779C7.575 27.2592 6.97465 27.0997 6.49982 26.7344C6.025 26.369 5.71449 25.8278 5.63641 25.2293L4.12332 13.5292C4.0467 12.9306 4.20892 12.3242 4.5744 11.8431C4.93987 11.362 5.47874 11.0456 6.07274 10.9632L25.9801 8.21923C26.5737 8.13925 27.173 8.29944 27.6468 8.66475C28.1207 9.03006 28.4305 9.57074 28.5085 10.1685L28.9795 13.8091C28.9896 13.8861 28.9845 13.9645 28.9646 14.0397C28.9446 14.115 28.9102 14.1856 28.8633 14.2477C28.8164 14.3097 28.7579 14.3619 28.6911 14.4012C28.6243 14.4406 28.5506 14.4663 28.4741 14.477C28.3977 14.4877 28.32 14.4831 28.2455 14.4635C28.171 14.4439 28.1011 14.4096 28.0399 14.3627C27.9787 14.3158 27.9274 14.2571 27.8888 14.19C27.8502 14.123 27.8252 14.0488 27.8151 13.9718L27.3443 10.3305C27.307 10.0429 27.1579 9.78274 26.9298 9.60711C26.7017 9.43149 26.4132 9.35478 26.1277 9.39382L6.22268 12.1371C5.9372 12.1769 5.67828 12.3291 5.50272 12.5605C5.32716 12.7918 5.2493 13.0832 5.28621 13.371L6.79639 25.0693C6.83413 25.3568 6.98345 25.6169 7.21164 25.7923C7.43983 25.9678 7.72828 26.0445 8.01382 26.0056L27.9226 23.2615C28.2076 23.221 28.466 23.0686 28.6413 22.8376C28.8167 22.6067 28.8949 22.3157 28.8589 22.0283L28.6373 20.3093C28.6272 20.2323 28.6322 20.1539 28.6522 20.0787C28.6721 20.0034 28.7065 19.9328 28.7534 19.8707C28.8004 19.8087 28.8589 19.7565 28.9257 19.7172C28.9924 19.6778 29.0662 19.6521 29.1426 19.6414C29.2191 19.6307 29.2968 19.6353 29.3713 19.6549C29.4458 19.6745 29.5156 19.7088 29.5768 19.7557C29.638 19.8026 29.6894 19.8613 29.7279 19.9284C29.7665 19.9954 29.7916 20.0696 29.8017 20.1466L30.0233 21.8656C30.062 22.1619 30.0422 22.4634 29.9647 22.7526C29.8873 23.0419 29.7539 23.3132 29.5722 23.5508C29.4563 23.7045 29.3218 23.8431 29.172 23.9634Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M16.1878 20.7902C17.9734 21.4055 19.9572 20.3628 20.6109 18.4661C21.2645 16.5694 20.3445 14.5252 18.5589 13.9098C16.7733 13.2945 14.7888 14.337 14.135 16.2343C13.4811 18.1316 14.4022 20.1748 16.1878 20.7902ZM18.2725 14.741C19.6054 15.2003 20.2866 16.7456 19.7901 18.186C19.2937 19.6265 17.8054 20.4234 16.4725 19.9641C15.1395 19.5047 14.4555 17.9556 14.9517 16.5158C15.4479 15.076 16.9397 14.2788 18.2733 14.7384L18.2725 14.741Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M7.74585 17.4445C7.80685 17.436 7.86566 17.4154 7.91891 17.384C7.97216 17.3526 8.0188 17.3109 8.05616 17.2613C8.09351 17.2118 8.12085 17.1554 8.1366 17.0953C8.15235 17.0352 8.15621 16.9727 8.14794 16.9112L7.85424 14.6951L10.0541 14.3838C10.1771 14.3664 10.2887 14.3004 10.3641 14.2004C10.4395 14.1004 10.4726 13.9746 10.4561 13.8506C10.4397 13.7265 10.375 13.6145 10.2763 13.5391C10.1776 13.4637 10.0531 13.4312 9.92995 13.4486L7.2656 13.8247C7.14254 13.8425 7.03116 13.9086 6.95578 14.0087C6.88039 14.1087 6.84714 14.2345 6.86329 14.3586L7.21966 17.0425C7.22779 17.1039 7.24784 17.1631 7.27869 17.2165C7.30953 17.27 7.35056 17.3167 7.39943 17.354C7.4483 17.3913 7.50405 17.4186 7.56349 17.4341C7.62293 17.4496 7.6849 17.4532 7.74585 17.4445V17.4445Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M8.63879 24.1759L11.3027 23.7989C11.4258 23.7815 11.5374 23.7155 11.6128 23.6155C11.6882 23.5155 11.7213 23.3897 11.7048 23.2656C11.6884 23.1416 11.6237 23.0296 11.525 22.9542C11.4263 22.8788 11.3017 22.8463 11.1786 22.8637L8.97883 23.175L8.68451 20.9587C8.67636 20.8973 8.65629 20.8381 8.62543 20.7847C8.59458 20.7313 8.55355 20.6846 8.50469 20.6472C8.45583 20.6099 8.40009 20.5827 8.34066 20.5672C8.28123 20.5516 8.21927 20.5481 8.15832 20.5567C8.09736 20.5653 8.03862 20.5859 7.98543 20.6174C7.93223 20.6488 7.88563 20.6905 7.84829 20.74C7.81096 20.7896 7.78361 20.846 7.76781 20.906C7.75202 20.966 7.74808 21.0285 7.75622 21.0899L8.11239 23.7745C8.12911 23.8984 8.19391 24.0102 8.29259 24.0855C8.39128 24.1607 8.51577 24.1932 8.63879 24.1759V24.1759Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M24.6721 21.1973L26.8602 20.8066L26.5166 18.7678C26.8558 18.9312 27.2037 19.0751 27.5465 19.232L27.8653 21.1043C27.8757 21.1653 27.8741 21.228 27.8605 21.2885C27.8468 21.3491 27.8216 21.4065 27.786 21.4574C27.7505 21.5082 27.7054 21.5516 27.6533 21.585C27.6013 21.6184 27.5433 21.6412 27.4826 21.652L24.8335 22.1257C24.7728 22.1365 24.7108 22.1353 24.6508 22.1219C24.5908 22.1086 24.5341 22.0835 24.4839 22.048C24.4337 22.0125 24.391 21.9673 24.3582 21.915C24.3254 21.8628 24.3032 21.8045 24.2928 21.7434C24.2824 21.6823 24.2841 21.6197 24.2977 21.5591C24.3113 21.4986 24.3366 21.4412 24.3722 21.3904C24.4077 21.3395 24.4528 21.2961 24.5048 21.2627C24.5569 21.2293 24.6148 21.2065 24.6755 21.1957L24.6721 21.1973Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M23.0665 11.2715L25.7391 10.9666C25.8627 10.9525 25.9864 10.9884 26.0831 11.0664C26.1798 11.1444 26.2416 11.2582 26.2549 11.3827L26.4879 13.5828C26.4604 13.5733 26.4333 13.559 26.404 13.5489C26.1199 13.4461 25.823 13.3829 25.5215 13.3611L25.3729 11.9585L23.1657 12.2102C23.0422 12.2243 22.9185 12.1883 22.8219 12.1103C22.7252 12.0322 22.6635 11.9184 22.6504 11.794C22.6372 11.6695 22.6737 11.5445 22.7517 11.4465C22.8298 11.3486 22.943 11.2856 23.0665 11.2715V11.2715Z"
                                  fill="#040404"></path>
                              </g>
                              <defs>
                                <clippath id="clip0_1029_15">
                                  <rect width="47" height="26" fill="white"
                                    transform="matrix(-0.945433 -0.325817 -0.325817 0.945433 52.9533 15.3661)"></rect>
                                </clippath>
                              </defs>
                            </svg>
                          </div>
                          <img class="tw-h-full sm:tw-min-w-[120px] tw-object-cover" alt=""
                            src="../theme/components/cod-order-delivery-banner/bg.jpg">
                        </div>
                        <div
                          class="tw-text-center tw-py-1 lg:tw-py-3 tw-flex tw-flex-col tw-justify-center tw-items-center tw-mx-auto tw-pe-1">
                          <div
                            class="sm:tw-hidden tw-relative tw-w-[43px] tw-h-[43px] tw-p-1 tw-bg-[#FF9900] tw-rounded-full tw-my-2">
                            <svg class="position-absolute translate-center" width="100%" height="40" viewbox="0 0 53 40"
                              fill="none" xmlns="http://www.w3.org/2000/svg">
                              <g clip-path="url(#clip0_1029_15)">
                                <path class="st0"
                                  d="M50.3733 22.5665C50.2639 22.6538 50.1275 22.6992 49.9885 22.6947C49.8496 22.6902 49.717 22.636 49.6146 22.5419C45.0213 18.3344 37.8846 11.9039 37.047 11.4341L36.7882 11.2885C35.7343 10.6912 34.7386 10.1274 33.8125 10.3941C32.5955 10.7459 28.3621 12.2909 28.3193 12.3078C28.2467 12.3344 28.1697 12.3463 28.0927 12.3428C28.0157 12.3394 27.9402 12.3207 27.8706 12.2878C27.801 12.2549 27.7386 12.2084 27.6869 12.1511C27.6352 12.0937 27.5953 12.0266 27.5695 11.9536C27.5436 11.8805 27.5324 11.8029 27.5363 11.7253C27.5402 11.6476 27.5592 11.5714 27.5923 11.501C27.6254 11.4305 27.6719 11.3673 27.7291 11.3148C27.7863 11.2623 27.8531 11.2217 27.9257 11.1951C28.1019 11.1311 32.2405 9.62043 33.4961 9.25794C34.8906 8.8545 36.2075 9.59946 37.3677 10.2566L37.6223 10.4001C38.8456 11.0867 49.2268 20.5846 50.4064 21.665C50.4632 21.7171 50.5092 21.78 50.5418 21.8501C50.5744 21.9203 50.5929 21.9963 50.5963 22.0739C50.5997 22.1515 50.5879 22.229 50.5616 22.3022C50.5353 22.3754 50.4949 22.4427 50.4429 22.5003C50.4216 22.5243 50.3983 22.5465 50.3733 22.5665V22.5665Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M44.098 28.3431C44.025 28.4009 43.9396 28.4405 43.8488 28.4589C43.7867 28.4713 42.3146 28.7676 40.7479 28.3652C39.2222 27.9733 38.1469 27.2094 37.0077 26.1838C36.5285 25.7528 36.0921 25.1428 35.6722 24.554C35.1356 23.8016 34.5806 23.0238 34.0261 22.7544C33.576 22.5366 31.8762 21.8098 29.9079 20.9679C28.9959 20.5782 28.0233 20.1619 27.0908 19.7609C24.3352 18.5744 22.9078 17.9337 22.4587 17.6824C21.4124 17.0955 21.0661 16.3396 20.9596 15.8087C20.8284 15.1572 20.9678 14.439 21.3615 13.7315C21.8026 12.9375 22.7802 12.0964 24.9268 12.5993C26.0111 12.8531 36.0008 15.1826 36.0008 15.1826L35.7297 16.3356C35.7297 16.3356 25.7386 14.0063 24.6542 13.7524C23.5023 13.4823 22.738 13.668 22.384 14.3045C22.2048 14.6221 22.0158 15.0997 22.1094 15.5669C22.1942 15.9867 22.5054 16.3506 23.0345 16.6471C23.5635 16.9436 25.8707 17.946 27.5575 18.6718C28.4867 19.0724 29.4576 19.4874 30.372 19.878C32.3537 20.7258 34.0651 21.4573 34.5401 21.688C35.3618 22.0868 36.0047 22.9879 36.6259 23.859C37.0274 24.4204 37.4058 24.9519 37.7913 25.2984C38.8346 26.236 39.7423 26.8872 41.0442 27.2181C42.3461 27.549 43.6078 27.3022 43.6206 27.2995C43.7502 27.2722 43.8849 27.2898 44.0028 27.3494C44.1208 27.409 44.215 27.5072 44.2702 27.628C44.3255 27.7488 44.3385 27.8852 44.3073 28.015C44.276 28.1448 44.2023 28.2604 44.098 28.3431V28.3431Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M35.5469 23.8974C35.5358 23.9065 35.5243 23.915 35.5123 23.9229C35.364 24.0254 32.832 25.3065 31.8278 24.8829C31.6146 24.7932 31.2443 24.6818 30.8513 24.5633C30.1291 24.3454 29.3102 24.0985 28.7574 23.7881C28.6902 23.7505 28.6312 23.6998 28.5837 23.639C28.5361 23.5782 28.501 23.5085 28.4802 23.4338C28.4595 23.3591 28.4536 23.281 28.4628 23.2038C28.472 23.1266 28.4962 23.0519 28.534 22.984C28.5718 22.916 28.6225 22.8562 28.6831 22.8078C28.7437 22.7595 28.813 22.7236 28.8872 22.7022C28.9614 22.6808 29.039 22.6743 29.1154 22.6831C29.1919 22.6919 29.2658 22.7158 29.3329 22.7535C29.775 23.001 30.561 23.238 31.1927 23.4289C31.6352 23.5617 32.0143 23.6761 32.2852 23.7906C32.6832 23.8905 34.4727 23.1931 34.856 22.9452C34.9866 22.8605 35.1445 22.8303 35.2961 22.8611C35.4477 22.8919 35.581 22.9812 35.6676 23.11C35.7491 23.2319 35.782 23.3806 35.7596 23.5265C35.7372 23.6724 35.6613 23.8048 35.5469 23.8974V23.8974Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M36.412 26.7384C35.8345 27.1999 35.1558 27.6837 34.7113 27.8118C33.7556 28.0873 29.8474 27.2395 29.2028 27.0315C28.18 26.7023 27.5992 25.7443 27.7586 24.648C27.8144 24.2317 27.9865 23.8392 28.2548 23.5166C28.5231 23.1939 28.8766 22.9544 29.2737 22.8262C29.422 22.7878 29.579 22.8091 29.7111 22.8857C29.8433 22.9623 29.9403 23.088 29.9815 23.2362C30.0226 23.3844 30.0047 23.5433 29.9316 23.6792C29.8584 23.815 29.7358 23.9171 29.5897 23.9636C29.4115 24.0291 29.2545 24.1431 29.1363 24.293C29.018 24.4428 28.9431 24.6225 28.92 24.8121C28.843 25.3411 29.0854 25.7489 29.5668 25.9042C30.3948 26.1712 33.8429 26.8139 34.3939 26.6724C34.7611 26.5663 35.864 25.7036 36.674 24.9662C36.731 24.9115 36.7981 24.8687 36.8715 24.8405C36.9449 24.8123 37.0231 24.7991 37.1015 24.8018C37.1798 24.8045 37.2567 24.823 37.3276 24.8562C37.3985 24.8895 37.462 24.9367 37.5144 24.9952C37.5668 25.0537 37.6069 25.1223 37.6324 25.1968C37.658 25.2714 37.6684 25.3505 37.6631 25.4294C37.6578 25.5083 37.6369 25.5855 37.6016 25.6563C37.5663 25.7271 37.5173 25.7902 37.4576 25.8418C37.3164 25.9743 36.9001 26.3483 36.412 26.7384Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M29.172 23.9634C28.8539 24.2157 28.4748 24.3773 28.0747 24.4312L8.1692 27.1779C7.575 27.2592 6.97465 27.0997 6.49982 26.7344C6.025 26.369 5.71449 25.8278 5.63641 25.2293L4.12332 13.5292C4.0467 12.9306 4.20892 12.3242 4.5744 11.8431C4.93987 11.362 5.47874 11.0456 6.07274 10.9632L25.9801 8.21923C26.5737 8.13925 27.173 8.29944 27.6468 8.66475C28.1207 9.03006 28.4305 9.57074 28.5085 10.1685L28.9795 13.8091C28.9896 13.8861 28.9845 13.9645 28.9646 14.0397C28.9446 14.115 28.9102 14.1856 28.8633 14.2477C28.8164 14.3097 28.7579 14.3619 28.6911 14.4012C28.6243 14.4406 28.5506 14.4663 28.4741 14.477C28.3977 14.4877 28.32 14.4831 28.2455 14.4635C28.171 14.4439 28.1011 14.4096 28.0399 14.3627C27.9787 14.3158 27.9274 14.2571 27.8888 14.19C27.8502 14.123 27.8252 14.0488 27.8151 13.9718L27.3443 10.3305C27.307 10.0429 27.1579 9.78274 26.9298 9.60711C26.7017 9.43149 26.4132 9.35478 26.1277 9.39382L6.22268 12.1371C5.9372 12.1769 5.67828 12.3291 5.50272 12.5605C5.32716 12.7918 5.2493 13.0832 5.28621 13.371L6.79639 25.0693C6.83413 25.3568 6.98345 25.6169 7.21164 25.7923C7.43983 25.9678 7.72828 26.0445 8.01382 26.0056L27.9226 23.2615C28.2076 23.221 28.466 23.0686 28.6413 22.8376C28.8167 22.6067 28.8949 22.3157 28.8589 22.0283L28.6373 20.3093C28.6272 20.2323 28.6322 20.1539 28.6522 20.0787C28.6721 20.0034 28.7065 19.9328 28.7534 19.8707C28.8004 19.8087 28.8589 19.7565 28.9257 19.7172C28.9924 19.6778 29.0662 19.6521 29.1426 19.6414C29.2191 19.6307 29.2968 19.6353 29.3713 19.6549C29.4458 19.6745 29.5156 19.7088 29.5768 19.7557C29.638 19.8026 29.6894 19.8613 29.7279 19.9284C29.7665 19.9954 29.7916 20.0696 29.8017 20.1466L30.0233 21.8656C30.062 22.1619 30.0422 22.4634 29.9647 22.7526C29.8873 23.0419 29.7539 23.3132 29.5722 23.5508C29.4563 23.7045 29.3218 23.8431 29.172 23.9634Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M16.1878 20.7902C17.9734 21.4055 19.9572 20.3628 20.6109 18.4661C21.2645 16.5694 20.3445 14.5252 18.5589 13.9098C16.7733 13.2945 14.7888 14.337 14.135 16.2343C13.4811 18.1316 14.4022 20.1748 16.1878 20.7902ZM18.2725 14.741C19.6054 15.2003 20.2866 16.7456 19.7901 18.186C19.2937 19.6265 17.8054 20.4234 16.4725 19.9641C15.1395 19.5047 14.4555 17.9556 14.9517 16.5158C15.4479 15.076 16.9397 14.2788 18.2733 14.7384L18.2725 14.741Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M7.74585 17.4445C7.80685 17.436 7.86566 17.4154 7.91891 17.384C7.97216 17.3526 8.0188 17.3109 8.05616 17.2613C8.09351 17.2118 8.12085 17.1554 8.1366 17.0953C8.15235 17.0352 8.15621 16.9727 8.14794 16.9112L7.85424 14.6951L10.0541 14.3838C10.1771 14.3664 10.2887 14.3004 10.3641 14.2004C10.4395 14.1004 10.4726 13.9746 10.4561 13.8506C10.4397 13.7265 10.375 13.6145 10.2763 13.5391C10.1776 13.4637 10.0531 13.4312 9.92995 13.4486L7.2656 13.8247C7.14254 13.8425 7.03116 13.9086 6.95578 14.0087C6.88039 14.1087 6.84714 14.2345 6.86329 14.3586L7.21966 17.0425C7.22779 17.1039 7.24784 17.1631 7.27869 17.2165C7.30953 17.27 7.35056 17.3167 7.39943 17.354C7.4483 17.3913 7.50405 17.4186 7.56349 17.4341C7.62293 17.4496 7.6849 17.4532 7.74585 17.4445V17.4445Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M8.63879 24.1759L11.3027 23.7989C11.4258 23.7815 11.5374 23.7155 11.6128 23.6155C11.6882 23.5155 11.7213 23.3897 11.7048 23.2656C11.6884 23.1416 11.6237 23.0296 11.525 22.9542C11.4263 22.8788 11.3017 22.8463 11.1786 22.8637L8.97883 23.175L8.68451 20.9587C8.67636 20.8973 8.65629 20.8381 8.62543 20.7847C8.59458 20.7313 8.55355 20.6846 8.50469 20.6472C8.45583 20.6099 8.40009 20.5827 8.34066 20.5672C8.28123 20.5516 8.21927 20.5481 8.15832 20.5567C8.09736 20.5653 8.03862 20.5859 7.98543 20.6174C7.93223 20.6488 7.88563 20.6905 7.84829 20.74C7.81096 20.7896 7.78361 20.846 7.76781 20.906C7.75202 20.966 7.74808 21.0285 7.75622 21.0899L8.11239 23.7745C8.12911 23.8984 8.19391 24.0102 8.29259 24.0855C8.39128 24.1607 8.51577 24.1932 8.63879 24.1759V24.1759Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M24.6721 21.1973L26.8602 20.8066L26.5166 18.7678C26.8558 18.9312 27.2037 19.0751 27.5465 19.232L27.8653 21.1043C27.8757 21.1653 27.8741 21.228 27.8605 21.2885C27.8468 21.3491 27.8216 21.4065 27.786 21.4574C27.7505 21.5082 27.7054 21.5516 27.6533 21.585C27.6013 21.6184 27.5433 21.6412 27.4826 21.652L24.8335 22.1257C24.7728 22.1365 24.7108 22.1353 24.6508 22.1219C24.5908 22.1086 24.5341 22.0835 24.4839 22.048C24.4337 22.0125 24.391 21.9673 24.3582 21.915C24.3254 21.8628 24.3032 21.8045 24.2928 21.7434C24.2824 21.6823 24.2841 21.6197 24.2977 21.5591C24.3113 21.4986 24.3366 21.4412 24.3722 21.3904C24.4077 21.3395 24.4528 21.2961 24.5048 21.2627C24.5569 21.2293 24.6148 21.2065 24.6755 21.1957L24.6721 21.1973Z"
                                  fill="#040404"></path>
                                <path class="st0"
                                  d="M23.0665 11.2715L25.7391 10.9666C25.8627 10.9525 25.9864 10.9884 26.0831 11.0664C26.1798 11.1444 26.2416 11.2582 26.2549 11.3827L26.4879 13.5828C26.4604 13.5733 26.4333 13.559 26.404 13.5489C26.1199 13.4461 25.823 13.3829 25.5215 13.3611L25.3729 11.9585L23.1657 12.2102C23.0422 12.2243 22.9185 12.1883 22.8219 12.1103C22.7252 12.0322 22.6635 11.9184 22.6504 11.794C22.6372 11.6695 22.6737 11.5445 22.7517 11.4465C22.8298 11.3486 22.943 11.2856 23.0665 11.2715V11.2715Z"
                                  fill="#040404"></path>
                              </g>
                              <defs>
                                <clippath id="clip0_1029_15">
                                  <rect width="47" height="26" fill="white"
                                    transform="matrix(-0.945433 -0.325817 -0.325817 0.945433 52.9533 15.3661)"></rect>
                                </clippath>
                              </defs>
                            </svg>
                          </div>
                          <div class="cod-delivery__secure tw-py-1 tw-pe-2 tw-ps-3 tw-mb-1 tw-relative">
                            <img class="cod-delivery__check tw-absolute tw-top-1/2 tw-start-0"
                              src="../theme/components/cod-order-delivery-banner/check.svg" alt="">
                            <p class="tw-mb-0 f-12 tw-font-bold tw-uppercase tw-text-center tw-text-white lh-1">
                              Shop 100% secure </p>
                          </div>
                          <p data-wrap-text="" class="tw-m-0 tw-font-bold f-sm-18 f-md-14 f-lg-18">Choose Pay After
                            Delivery At Checkout</p>
                          <p data-wrap-text="" class="tw-m-0 f-10 f-sm-14 f-md-10 f-lg-13">And simply pay courier
                            directly upon delivery</p>
                        </div>
                      </div>
                    </div>
                    <div class="cart-gap-2"></div>
                  </div>
                  <input name="timezone" type="hidden">

                  <div data-klarna-unload="" class="order-delivery-information" x-data="deliveryDetails"
                    data-ga-section="7 - Delivery Details">
                    <p x-data="{
        number: 3,
        text: null
    }" @change-step-number-delivery.window="number = $event.detail"
                      @change-step-text-delivery.window="text = $event.detail"
                      class="cart-step h4 font-weight-bold align-items-center mb-3 test"
                      style="display: flex; text-align: inherit;">
                      <img style="height: 20px; margin-right: 10px"
                        src='data:image/svg+xml;charset=utf-8,<svg width="30" height="30" xmlns="http://www.w3.org/2000/svg"><rect style="fill:transparent" width="100%" height="100%"/></svg>'
                        data-src="https://get-huusk.com/images/order/step/delivery-address.svg" alt="">
                      <template x-if="text">
                        <span x-html="text"></span>
                      </template>
                      <template x-if="text === null">
                        <span>Step <span x-text="number"></span>: Delivery Address</span>
                      </template>
                    </p>
                    <label class="cart-input-label p" for="country">Country</label>
                    <div class="mb-3">
                      <select class="cart-input p" class="cart-input p" id="country" required="required"
                        x-model="Alpine.store('cartDeliveryDetails').country"
                        @pageshow.window="Alpine.store('cartDeliveryDetails').country = $el.value" x-on:change="hideCodSelection__commonOrder = Alpine.store('cartOptions').getSelected__cartOptions()
            && Alpine.store('cartOptions').getSelected__cartOptions().productId === 'derila-king'"
                        x-bind:class="Alpine.store('cartDeliveryDetails').country ? '' : 'cart-input--unselected'"
                        name="country">
                        <option value="">Country</option>
                        <option value="AR">Argentina</option>
                        <option value="AU">Australia</option>
                        <option value="AT">Austria</option>
                        <option value="BE">Belgium</option>
                        <option value="BR">Brazil</option>
                        <option value="BG">Bulgaria</option>
                        <option value="CA">Canada</option>
                        <option value="CN">China</option>
                        <option value="CO">Colombia</option>
                        <option value="HR">Croatia</option>
                        <option value="CY">Cyprus</option>
                        <option value="CZ">Czech Republic</option>
                        <option value="DK">Denmark</option>
                        <option value="EE">Estonia</option>
                        <option value="FI">Finland</option>
                        <option value="FR">France</option>
                        <option value="DE">Germany</option>
                        <option value="GR">Greece</option>
                        <option value="HU">Hungary</option>
                        <option value="IE">Ireland</option>
                        <option value="IL">Israel</option>
                        <option value="IT">Italy</option>
                        <option value="JP">Japan</option>
                        <option value="KR">South Korea</option>
                        <option value="LV">Latvia</option>
                        <option value="LI">Liechtenstein</option>
                        <option value="LU">Luxembourg</option>
                        <option value="MK">Macedonia</option>
                        <option value="MY">Malaysia</option>
                        <option value="MT">Malta</option>
                        <option value="MX">Mexico</option>
                        <option value="NL">Netherlands</option>
                        <option value="NZ">New Zealand</option>
                        <option value="NO">Norway</option>
                        <option value="PL">Poland</option>
                        <option value="PT">Portugal</option>
                        <option value="RO">Romania</option>
                        <option value="RS">Serbia</option>
                        <option value="SK">Slovakia</option>
                        <option value="SI">Slovenia</option>
                        <option value="ES">Spain</option>
                        <option value="SE">Sweden</option>
                        <option value="CH">Switzerland</option>
                        <option value="TW">Taiwan</option>
                        <option value="TH">Thailand</option>
                        <option value="TR">Turkey</option>
                        <option value="UA">Ukraine</option>
                        <option value="AE">United Arab Emirates</option>
                        <option value="GB">United Kingdom</option>
                        <option value="US">United States</option>
                      </select>
                    </div>
                    <template
                      x-if="Alpine.store('cartDeliveryDetails').getTemplateName() === window.ecommerce.DeliveryDetailsTemplates.Default">
                      <div x-show="show__deliveryDetails">
                        <div class="mb-3" x-data="cityInput('Town\/City')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="city" label="Town/City" for="">Town/City</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="city" name="city" class="cart-input p" value=""
                                type="text" placeholder="Town/City" data-validation-error-name="Town/City">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" class="cart-input p" data-validation-error-name="Town/City">
                                <option value="">Town/City</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" placeholder="Town/City" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="Town/City"></select>
                            </div>
                          </template>
                        </div> <template x-if="showStreetAndHouseNumberJoint__deliveryDetails()">
                          <div class="mb-3" x-data="streetAddressInput('Street, house and apartment number', null)"
                            @set-cart-input-required.window="handleRequiredChange"
                            @set-cart-input-disabled.window="handleDisabledChange"
                            @set-cart-input-options.window="handleOptionsChange"
                            @set-cart-input-type.window="handleTypeChange">
                            <label class="p cart-input-label" for="street_address"
                              label="Street, house and apartment number" for="">Street, house and apartment
                              number</label>
                            <template x-if="isTypeInput()">
                              <div>
                                <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                  x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                  x-bind:required="isRequired" id="street_address" name="street_address"
                                  class="cart-input p" value="" type="text"
                                  placeholder="Street, house and apartment number"
                                  data-validation-error-name="Street, house and apartment number">
                              </div>
                            </template>
                            <template x-if="isTypeSelect()">
                              <div>
                                <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                  x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                  x-bind:required="isRequired"
                                  x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                  id="street_address" name="street_address" class="cart-input p"
                                  data-validation-error-name="Street, house and apartment number">
                                  <option value="">Street, house and apartment number</option>
                                  <template x-for="(value, key) in getOptions()">
                                    <option :key="key" x-text="value" x-bind:value="key"></option>
                                  </template>
                                </select>
                              </div>
                            </template>
                            <template x-if="isTypeChoices()">
                              <div x-destroy="destroyChoicesElement()">
                                <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                  x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                  x-bind:required="isRequired"
                                  x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                  id="street_address" name="street_address"
                                  placeholder="Street, house and apartment number" class="cart-input p"
                                  x-ref="choicesElement"
                                  data-validation-error-name="Street, house and apartment number"></select>
                              </div>
                            </template>
                          </div>
                        </template>
                        <template x-if="!showStreetAndHouseNumberJoint__deliveryDetails()">
                          <div class="row no-gutters mx-n2">
                            <div class="col-6 px-2">
                              <div class="mb-3" x-data="streetInput('Street')"
                                @set-cart-input-required.window="handleRequiredChange"
                                @set-cart-input-disabled.window="handleDisabledChange"
                                @set-cart-input-options.window="handleOptionsChange"
                                @set-cart-input-type.window="handleTypeChange">
                                <label class="p cart-input-label" for="street" label="Street" for="">Street</label>
                                <template x-if="isTypeInput()">
                                  <div>
                                    <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                      x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                      x-bind:disabled="isDisabled" x-bind:required="isRequired" id="street"
                                      name="street" class="cart-input p" value="" type="text" placeholder="Street"
                                      data-validation-error-name="Street">
                                  </div>
                                </template>
                                <template x-if="isTypeSelect()">
                                  <div>
                                    <select
                                      @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                      x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                      x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                      x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                      id="street" name="street" class="cart-input p"
                                      data-validation-error-name="Street">
                                      <option value="">Street</option>
                                      <template x-for="(value, key) in getOptions()">
                                        <option :key="key" x-text="value" x-bind:value="key"></option>
                                      </template>
                                    </select>
                                  </div>
                                </template>
                                <template x-if="isTypeChoices()">
                                  <div x-destroy="destroyChoicesElement()">
                                    <select
                                      @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                      x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                      x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                      x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                      id="street" name="street" placeholder="Street" class="cart-input p"
                                      x-ref="choicesElement" data-validation-error-name="Street"></select>
                                  </div>
                                </template>
                              </div>
                            </div>
                            <div class="col-6 px-2">
                              <div class="mb-3" x-data="houseNumberInput('House Number')"
                                @set-cart-input-required.window="handleRequiredChange"
                                @set-cart-input-disabled.window="handleDisabledChange"
                                @set-cart-input-options.window="handleOptionsChange"
                                @set-cart-input-type.window="handleTypeChange">
                                <label class="p cart-input-label" for="house_number" label="House Number" for="">House
                                  Number</label>
                                <template x-if="isTypeInput()">
                                  <div>
                                    <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                      x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                      x-bind:disabled="isDisabled" x-bind:required="isRequired" id="house_number"
                                      name="house_number" class="cart-input p" value="" type="text"
                                      placeholder="House Number" data-validation-error-name="House Number">
                                  </div>
                                </template>
                                <template x-if="isTypeSelect()">
                                  <div>
                                    <select
                                      @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                      x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                      x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                      x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                      id="house_number" name="house_number" class="cart-input p"
                                      data-validation-error-name="House Number">
                                      <option value="">House Number</option>
                                      <template x-for="(value, key) in getOptions()">
                                        <option :key="key" x-text="value" x-bind:value="key"></option>
                                      </template>
                                    </select>
                                  </div>
                                </template>
                                <template x-if="isTypeChoices()">
                                  <div x-destroy="destroyChoicesElement()">
                                    <select
                                      @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                      x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                      x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                      x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                      id="house_number" name="house_number" placeholder="House Number"
                                      class="cart-input p" x-ref="choicesElement"
                                      data-validation-error-name="House Number"></select>
                                  </div>
                                </template>
                              </div>
                            </div>
                          </div>
                        </template>
                        <div class="row mb-n3 align-items-start">
                          <div class="col-sm-6 pr-sm-2">
                            <div class="mb-3" x-data="stateInput('State\/Province')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="state" label="State/Province"
                                for="">State/Province</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="state" name="state"
                                    class="cart-input p" value="" type="text" placeholder="State/Province"
                                    data-validation-error-name="State/Province">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="state" name="state" class="cart-input p"
                                    data-validation-error-name="State/Province">
                                    <option value="">State/Province</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="state" name="state" placeholder="State/Province" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="State/Province"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                          <div class="col-sm-6 pl-sm-2">
                            <div class="mb-3" x-data="zipInput('Zip\/Postal Code')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="zip" label="Zip/Postal Code" for="">Zip/Postal
                                Code</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="zip" name="zip"
                                    class="cart-input p" value="" type="text" placeholder="Zip/Postal Code"
                                    data-validation-error-name="Zip/Postal Code">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="zip" name="zip" class="cart-input p"
                                    data-validation-error-name="Zip/Postal Code">
                                    <option value="">Zip/Postal Code</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="zip" name="zip" placeholder="Zip/Postal Code" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="Zip/Postal Code"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                        </div>
                      </div>
                    </template>
                    <div x-show="show__deliveryDetails" id="custom-details-placeholder"></div>
                    <template
                      x-if="Alpine.store('cartDeliveryDetails').getTemplateName() === window.ecommerce.DeliveryDetailsTemplates.Payo">
                      <div>
                        <div class="mb-3" x-data="stateInput('State\/Province')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="state" label="State/Province"
                            for="">State/Province</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="state" name="state" class="cart-input p" value=""
                                type="text" placeholder="State/Province" data-validation-error-name="State/Province">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="state" name="state" class="cart-input p"
                                data-validation-error-name="State/Province">
                                <option value="">State/Province</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="state" name="state" placeholder="State/Province" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="State/Province"></select>
                            </div>
                          </template>
                        </div>
                        <div class="mb-3" x-data="cityInput('Town\/City')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="city" label="Town/City" for="">Town/City</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="city" name="city" class="cart-input p" value=""
                                type="text" placeholder="Town/City" data-validation-error-name="Town/City">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" class="cart-input p" data-validation-error-name="Town/City">
                                <option value="">Town/City</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" placeholder="Town/City" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="Town/City"></select>
                            </div>
                          </template>
                        </div>
                        <div class="mb-3" x-data="areaInput('District')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="area" label="Barangay" for="">Barangay</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="area" name="area" class="cart-input p" value=""
                                type="text" placeholder="Barangay" data-validation-error-name="Barangay">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="area" name="area" class="cart-input p" data-validation-error-name="Barangay">
                                <option value="">Barangay</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="area" name="area" placeholder="Barangay" class="cart-input p" x-ref="choicesElement"
                                data-validation-error-name="Barangay"></select>
                            </div>
                          </template>
                        </div>
                        <div class="mb-3" x-data="streetAddressInput('Street, house and apartment number', null)"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="street_address"
                            label="Street, house and apartment number" for="">Street, house and apartment number</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="street_address" name="street_address"
                                class="cart-input p" value="" type="text"
                                placeholder="Street, house and apartment number"
                                data-validation-error-name="Street, house and apartment number">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address" class="cart-input p"
                                data-validation-error-name="Street, house and apartment number">
                                <option value="">Street, house and apartment number</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address"
                                placeholder="Street, house and apartment number" class="cart-input p"
                                x-ref="choicesElement"
                                data-validation-error-name="Street, house and apartment number"></select>
                            </div>
                          </template>
                        </div>
                        <div class="mb-3" x-data="zipInput('Zip\/Postal Code')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="zip" label="Zip/Postal Code" for="">Zip/Postal
                            Code</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="zip" name="zip" class="cart-input p" value=""
                                type="text" placeholder="Zip/Postal Code" data-validation-error-name="Zip/Postal Code">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="zip" name="zip" class="cart-input p" data-validation-error-name="Zip/Postal Code">
                                <option value="">Zip/Postal Code</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="zip" name="zip" placeholder="Zip/Postal Code" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="Zip/Postal Code"></select>
                            </div>
                          </template>
                        </div>
                      </div>
                    </template>
                    <template
                      x-if="[window.ecommerce.DeliveryDetailsTemplates.DapsidesLead, window.ecommerce.DeliveryDetailsTemplates.Dapsides].includes(Alpine.store('cartDeliveryDetails').getTemplateName())">
                      <div>
                        <div class="mb-3" x-data="stateInput('State\/Province')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="state" label="State/Province"
                            for="">State/Province</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="state" name="state" class="cart-input p" value=""
                                type="text" placeholder="State/Province" data-validation-error-name="State/Province">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="state" name="state" class="cart-input p"
                                data-validation-error-name="State/Province">
                                <option value="">State/Province</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="state" name="state" placeholder="State/Province" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="State/Province"></select>
                            </div>
                          </template>
                        </div>
                        <div class="row align-items-end">
                          <div class="col-sm-6">
                            <div class="mb-3" x-data="cityInput('Town\/City')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="city" label="Town/City" for="">Town/City</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="city" name="city"
                                    class="cart-input p" value="" type="text" placeholder="Town/City"
                                    data-validation-error-name="Town/City">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="city" name="city" class="cart-input p" data-validation-error-name="Town/City">
                                    <option value="">Town/City</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="city" name="city" placeholder="Town/City" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="Town/City"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                          <div class="col-sm-6">
                            <div class="mb-3" x-data="zipInput('Zip\/Postal Code')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="zip" label="Zip/Postal Code" for="">Zip/Postal
                                Code</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="zip" name="zip"
                                    class="cart-input p" value="" type="text" placeholder="Zip/Postal Code"
                                    data-validation-error-name="Zip/Postal Code">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="zip" name="zip" class="cart-input p"
                                    data-validation-error-name="Zip/Postal Code">
                                    <option value="">Zip/Postal Code</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="zip" name="zip" placeholder="Zip/Postal Code" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="Zip/Postal Code"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                        </div>
                        <div class="mb-3" x-data="streetAddressInput('Street, house and apartment number', null)"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="street_address"
                            label="Street, house and apartment number" for="">Street, house and apartment number</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="street_address" name="street_address"
                                class="cart-input p" value="" type="text"
                                placeholder="Street, house and apartment number"
                                data-validation-error-name="Street, house and apartment number">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address" class="cart-input p"
                                data-validation-error-name="Street, house and apartment number">
                                <option value="">Street, house and apartment number</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address"
                                placeholder="Street, house and apartment number" class="cart-input p"
                                x-ref="choicesElement"
                                data-validation-error-name="Street, house and apartment number"></select>
                            </div>
                          </template>
                        </div>
                      </div>
                    </template>
                    <template
                      x-if="Alpine.store('cartDeliveryDetails').getTemplateName() === window.ecommerce.DeliveryDetailsTemplates.BoxmeTh">
                      <div>
                        <div class="mb-3" x-data="cityInput('Town\/City')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="city" label="Town/City" for="">Town/City</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="city" name="city" class="cart-input p" value=""
                                type="text" placeholder="Town/City" data-validation-error-name="Town/City">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" class="cart-input p" data-validation-error-name="Town/City">
                                <option value="">Town/City</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" placeholder="Town/City" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="Town/City"></select>
                            </div>
                          </template>
                        </div>
                        <div class="mb-3" x-data="streetAddressInput('Street, house and apartment number', null)"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="street_address"
                            label="Street, house and apartment number" for="">Street, house and apartment number</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="street_address" name="street_address"
                                class="cart-input p" value="" type="text"
                                placeholder="Street, house and apartment number"
                                data-validation-error-name="Street, house and apartment number">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address" class="cart-input p"
                                data-validation-error-name="Street, house and apartment number">
                                <option value="">Street, house and apartment number</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address"
                                placeholder="Street, house and apartment number" class="cart-input p"
                                x-ref="choicesElement"
                                data-validation-error-name="Street, house and apartment number"></select>
                            </div>
                          </template>
                        </div>
                        <div class="mb-3" x-data="stateInput('State\/Province')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="state" label="State/Province"
                            for="">State/Province</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="state" name="state" class="cart-input p" value=""
                                type="text" placeholder="State/Province" data-validation-error-name="State/Province">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="state" name="state" class="cart-input p"
                                data-validation-error-name="State/Province">
                                <option value="">State/Province</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="state" name="state" placeholder="State/Province" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="State/Province"></select>
                            </div>
                          </template>
                        </div>
                        <div class="row align-items-end">
                          <div class="col-sm-6">
                            <div class="mb-3" x-data="areaInput('District')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="area" label="District" for="">District</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="area" name="area"
                                    class="cart-input p" value="" type="text" placeholder="District"
                                    data-validation-error-name="District">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="area" name="area" class="cart-input p" data-validation-error-name="District">
                                    <option value="">District</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="area" name="area" placeholder="District" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="District"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                          <div class="col-sm-6">
                            <div class="mb-3" x-data="zipInput('Zip\/Postal Code')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="zip" label="Zip/Postal Code" for="">Zip/Postal
                                Code</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="zip" name="zip"
                                    class="cart-input p" value="" type="text" placeholder="Zip/Postal Code"
                                    data-validation-error-name="Zip/Postal Code">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="zip" name="zip" class="cart-input p"
                                    data-validation-error-name="Zip/Postal Code">
                                    <option value="">Zip/Postal Code</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="zip" name="zip" placeholder="Zip/Postal Code" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="Zip/Postal Code"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                        </div>
                      </div>
                    </template>
                    <template
                      x-if="Alpine.store('cartDeliveryDetails').getTemplateName() === window.ecommerce.DeliveryDetailsTemplates.BoxmeVn">
                      <div>
                        <div class="mb-3" x-data="cityInput('Town\/City')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="city" label="Town/City" for="">Town/City</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="city" name="city" class="cart-input p" value=""
                                type="text" placeholder="Town/City" data-validation-error-name="Town/City">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" class="cart-input p" data-validation-error-name="Town/City">
                                <option value="">Town/City</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" placeholder="Town/City" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="Town/City"></select>
                            </div>
                          </template>
                        </div>
                        <div class="mb-3" x-data="streetAddressInput('Street, house and apartment number', null)"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="street_address"
                            label="Street, house and apartment number" for="">Street, house and apartment number</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="street_address" name="street_address"
                                class="cart-input p" value="" type="text"
                                placeholder="Street, house and apartment number"
                                data-validation-error-name="Street, house and apartment number">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address" class="cart-input p"
                                data-validation-error-name="Street, house and apartment number">
                                <option value="">Street, house and apartment number</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address"
                                placeholder="Street, house and apartment number" class="cart-input p"
                                x-ref="choicesElement"
                                data-validation-error-name="Street, house and apartment number"></select>
                            </div>
                          </template>
                        </div>
                        <div class="row align-items-end">
                          <div class="col-sm-6">
                            <div class="mb-3" x-data="stateInput('State\/Province')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="state" label="State/Province"
                                for="">State/Province</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="state" name="state"
                                    class="cart-input p" value="" type="text" placeholder="State/Province"
                                    data-validation-error-name="State/Province">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="state" name="state" class="cart-input p"
                                    data-validation-error-name="State/Province">
                                    <option value="">State/Province</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="state" name="state" placeholder="State/Province" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="State/Province"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                          <div class="col-sm-6">
                            <div class="mb-3" x-data="areaInput('District')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="area" label="District" for="">District</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="area" name="area"
                                    class="cart-input p" value="" type="text" placeholder="District"
                                    data-validation-error-name="District">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="area" name="area" class="cart-input p" data-validation-error-name="District">
                                    <option value="">District</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="area" name="area" placeholder="District" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="District"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                        </div>
                      </div>
                    </template>
                    <template
                      x-if="[window.ecommerce.DeliveryDetailsTemplates.DirLogisticsPt, window.ecommerce.DeliveryDetailsTemplates.Express2660Pt].includes(Alpine.store('cartDeliveryDetails').getTemplateName())">
                      <div>
                        <div class="mb-3" x-data="cityInput('Town\/City')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="city" label="Town/City" for="">Town/City</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="city" name="city" class="cart-input p" value=""
                                type="text" placeholder="Town/City" data-validation-error-name="Town/City">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" class="cart-input p" data-validation-error-name="Town/City">
                                <option value="">Town/City</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" placeholder="Town/City" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="Town/City"></select>
                            </div>
                          </template>
                        </div>
                        <div class="mb-3" x-data="streetAddressInput('Street, house and apartment number', null)"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="street_address"
                            label="Street, house and apartment number" for="">Street, house and apartment number</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="street_address" name="street_address"
                                class="cart-input p" value="" type="text"
                                placeholder="Street, house and apartment number"
                                data-validation-error-name="Street, house and apartment number">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address" class="cart-input p"
                                data-validation-error-name="Street, house and apartment number">
                                <option value="">Street, house and apartment number</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address"
                                placeholder="Street, house and apartment number" class="cart-input p"
                                x-ref="choicesElement"
                                data-validation-error-name="Street, house and apartment number"></select>
                            </div>
                          </template>
                        </div>
                        <div class="row mb-n3 align-items-start">
                          <div class="order-1 col-lg-5 pr-lg-2">
                            <div class="mb-3" x-data="stateInput('State\/Province')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="state" label="State/Province"
                                for="">State/Province</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="state" name="state"
                                    class="cart-input p" value="" type="text" placeholder="State/Province"
                                    data-validation-error-name="State/Province"
                                    data-validation-error-insert-after="choicesjs-error-placement-state">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="state" name="state" class="cart-input p"
                                    data-validation-error-name="State/Province"
                                    data-validation-error-insert-after="choicesjs-error-placement-state">
                                    <option value="">State/Province</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="state" name="state" placeholder="State/Province" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="State/Province"
                                    data-validation-error-insert-after="choicesjs-error-placement-state"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                          <div class="order-lg-2 order-3 col-lg-7 pl-lg-2">
                            <div class="tw-flex tw-items-end">
                              <div class="col-7 px-0">
                                <div class="mb-3" x-data="zipInput('Zip\/Postal Code')"
                                  @set-cart-input-required.window="handleRequiredChange"
                                  @set-cart-input-disabled.window="handleDisabledChange"
                                  @set-cart-input-options.window="handleOptionsChange"
                                  @set-cart-input-type.window="handleTypeChange">
                                  <label class="p cart-input-label" for="zip" label="Zip/Postal Code" for="">Zip/Postal
                                    Code</label>
                                  <template x-if="isTypeInput()">
                                    <div>
                                      <input
                                        @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                        x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                        x-bind:disabled="isDisabled" x-bind:required="isRequired" id="zip" name="zip"
                                        class="cart-input p" value="" type="text" placeholder="Zip/Postal Code"
                                        data-validation-error-name="Zip/Postal Code"
                                        data-validation-error-insert-after="choicesjs-error-placement-zip">
                                    </div>
                                  </template>
                                  <template x-if="isTypeSelect()">
                                    <div>
                                      <select
                                        @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                        x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                        x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                        x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                        id="zip" name="zip" class="cart-input p"
                                        data-validation-error-name="Zip/Postal Code"
                                        data-validation-error-insert-after="choicesjs-error-placement-zip">
                                        <option value="">Zip/Postal Code</option>
                                        <template x-for="(value, key) in getOptions()">
                                          <option :key="key" x-text="value" x-bind:value="key"></option>
                                        </template>
                                      </select>
                                    </div>
                                  </template>
                                  <template x-if="isTypeChoices()">
                                    <div x-destroy="destroyChoicesElement()">
                                      <select
                                        @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                        x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                        x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                        x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                        id="zip" name="zip" placeholder="Zip/Postal Code" class="cart-input p"
                                        x-ref="choicesElement" data-validation-error-name="Zip/Postal Code"
                                        data-validation-error-insert-after="choicesjs-error-placement-zip"></select>
                                    </div>
                                  </template>
                                </div>
                              </div>
                              <span
                                class="zip-code-divider px-2 mb-3 pb-lg-1 align-self-lg-end align-self-center">-</span>
                              <div>
                                <label class="p cart-input-label" for="zip-pt">&nbsp;</label>
                                <div class="position-relative mb-3">
                                  <input data-validation-error-name="&amp;nbsp;" type="number" placeholder=""
                                    class="cart-input p hide-input-arrow m-0" id="zip-pt" name="zip-pt" max="999"
                                    onkeypress="limitFieldLength(event, 3)">

                                </div>
                              </div>
                            </div>
                          </div>
                          <div class="order-lg-3 order-2 col-lg-5 pr-lg-2 mt-n3">
                            <div id="choicesjs-error-placement-state"></div>
                          </div>
                          <div class="order-4 col-lg-7 pl-lg-2 mt-n3">
                            <div id="choicesjs-error-placement-zip"></div>
                          </div>
                        </div>
                      </div>
                    </template>
                    <template
                      x-if="Alpine.store('cartDeliveryDetails').getTemplateName() === window.ecommerce.DeliveryDetailsTemplates.Shorages">
                      <div>
                        <div class="mb-3" x-data="cityInput('Town\/City')"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="city" label="Town/City" for="">Town/City</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="city" name="city" class="cart-input p" value=""
                                type="text" placeholder="Town/City" data-validation-error-name="Town/City">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" class="cart-input p" data-validation-error-name="Town/City">
                                <option value="">Town/City</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="city" name="city" placeholder="Town/City" class="cart-input p"
                                x-ref="choicesElement" data-validation-error-name="Town/City"></select>
                            </div>
                          </template>
                        </div>
                        <div class="mb-3" x-data="streetAddressInput('Street, house and apartment number', null)"
                          @set-cart-input-required.window="handleRequiredChange"
                          @set-cart-input-disabled.window="handleDisabledChange"
                          @set-cart-input-options.window="handleOptionsChange"
                          @set-cart-input-type.window="handleTypeChange">
                          <label class="p cart-input-label" for="street_address"
                            label="Street, house and apartment number" for="">Street, house and apartment number</label>
                          <template x-if="isTypeInput()">
                            <div>
                              <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired" id="street_address" name="street_address"
                                class="cart-input p" value="" type="text"
                                placeholder="Street, house and apartment number"
                                data-validation-error-name="Street, house and apartment number">
                            </div>
                          </template>
                          <template x-if="isTypeSelect()">
                            <div>
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address" class="cart-input p"
                                data-validation-error-name="Street, house and apartment number">
                                <option value="">Street, house and apartment number</option>
                                <template x-for="(value, key) in getOptions()">
                                  <option :key="key" x-text="value" x-bind:value="key"></option>
                                </template>
                              </select>
                            </div>
                          </template>
                          <template x-if="isTypeChoices()">
                            <div x-destroy="destroyChoicesElement()">
                              <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                x-model="Alpine.store('cartDeliveryDetails')[storeName]" x-bind:disabled="isDisabled"
                                x-bind:required="isRequired"
                                x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                id="street_address" name="street_address"
                                placeholder="Street, house and apartment number" class="cart-input p"
                                x-ref="choicesElement"
                                data-validation-error-name="Street, house and apartment number"></select>
                            </div>
                          </template>
                        </div>
                        <div class="row mb-n3 align-items-end">
                          <div class="col-sm-6 pr-sm-2">
                            <div class="mb-3" x-data="stateInput('State\/Province')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="state" label="State/Province"
                                for="">State/Province</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="state" name="state"
                                    class="cart-input p" value="" type="text" placeholder="State/Province"
                                    data-validation-error-name="State/Province">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="state" name="state" class="cart-input p"
                                    data-validation-error-name="State/Province">
                                    <option value="">State/Province</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="state" name="state" placeholder="State/Province" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="State/Province"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                          <div class="col-sm-6 pl-sm-2">
                            <div class="mb-3" x-data="zipInput('Zip\/Postal Code')"
                              @set-cart-input-required.window="handleRequiredChange"
                              @set-cart-input-disabled.window="handleDisabledChange"
                              @set-cart-input-options.window="handleOptionsChange"
                              @set-cart-input-type.window="handleTypeChange">
                              <label class="p cart-input-label" for="zip" label="Zip/Postal Code" for="">Zip/Postal
                                Code</label>
                              <template x-if="isTypeInput()">
                                <div>
                                  <input @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired" id="zip" name="zip"
                                    class="cart-input p" value="" type="text" placeholder="Zip/Postal Code"
                                    data-validation-error-name="Zip/Postal Code">
                                </div>
                              </template>
                              <template x-if="isTypeSelect()">
                                <div>
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="zip" name="zip" class="cart-input p"
                                    data-validation-error-name="Zip/Postal Code">
                                    <option value="">Zip/Postal Code</option>
                                    <template x-for="(value, key) in getOptions()">
                                      <option :key="key" x-text="value" x-bind:value="key"></option>
                                    </template>
                                  </select>
                                </div>
                              </template>
                              <template x-if="isTypeChoices()">
                                <div x-destroy="destroyChoicesElement()">
                                  <select @pageshow.window="Alpine.store('cartDeliveryDetails')[storeName] = $el.value"
                                    x-model="Alpine.store('cartDeliveryDetails')[storeName]"
                                    x-bind:disabled="isDisabled" x-bind:required="isRequired"
                                    x-bind:class="Alpine.store('cartDeliveryDetails')[storeName] ? '' : 'cart-input--unselected'"
                                    id="zip" name="zip" placeholder="Zip/Postal Code" class="cart-input p"
                                    x-ref="choicesElement" data-validation-error-name="Zip/Postal Code"></select>
                                </div>
                              </template>
                            </div>
                          </div>
                        </div>
                        <div class="mt-3">
                          <label class="p cart-input-label" for="delivery_instructions">Delivery Instructions</label>
                          <div class="position-relative mb-3">
                            <input data-validation-error-name="Delivery Instructions" type="text"
                              placeholder="Delivery Instructions" class="cart-input p" id="delivery_instructions"
                              name="delivery_instructions">

                          </div>
                        </div>
                        <div class="order-lg-3 order-2 col-lg-6 pr-lg-2 mt-n3">
                          <div id="choicesjs-error-placement-state"></div>
                        </div>
                        <div class="order-4 col-lg-6 pl-lg-2 mt-n3">
                          <div id="choicesjs-error-placement-zip"></div>
                        </div>
                      </div>
                    </template>
                  </div>
                  <div id="delivery-options-right-placeholder">
                    <div id="delivery-options" x-data="deliveryOptions" x-show="show() && !hide" class="mt-3"
                      x-on:delivery-options-reposition-left.window="repositionLeft"
                      x-on:delivery-options-reposition-right.window="repositionRight"
                      x-on:delivery-options-hide.window="hide = true" x-on:delivery-options-show.window="hide = false">
                      <p class="tw-text-base tw-font-bold tw-mb-1">
                        <template
                          x-if="Alpine.store('cartDeliveryOptions').getDisplayedOptions__cartDeliveryOptions().length > 1">
                          <span>
                            Choose your delivery </span>
                        </template>
                        <template
                          x-if="Alpine.store('cartDeliveryOptions').getDisplayedOptions__cartDeliveryOptions().length === 1">
                          <span>
                            Shipping </span>
                        </template>
                      </p>
                      <template x-if="show"
                        x-data="standardDeliveryOption(JSON.parse('{\u0022id\u0022:\u0022[\\u0022standard-delivery\\u0022,\\u00228.95\\u0022,1,\\u0022Standard Delivery\\u0022,[],\\u0022EUR\\u0022,null,0,\\u00228.95\\u0022,[],\\u0022https:\\\\\\\/\\\\\\\/get-huusk.com\\\\\\\/huusk\\\\\\\/order\\u0022,\\u0022shipping\\u0022,\\u00228.95\\u0022,70,null]\u0022,\u0022product_id\u0022:\u0022standard-delivery\u0022,\u0022label\u0022:\u0022Standard Delivery\u0022,\u0022checked\u0022:true,\u0022count\u0022:1,\u0022price\u0022:8.95,\u0022price_formatted\u0022:\u0022\\u20ac 8,95\u0022,\u0022unit_original_price\u0022:\u002229.83\u0022,\u0022unit_original_price_formatted\u0022:\u0022\\u20ac 29,83\u0022,\u0022total_price\u0022:\u00228.95\u0022,\u0022total_price_formatted\u0022:\u0022\\u20ac 8,95\u0022,\u0022original_price\u0022:\u00228.95\u0022,\u0022original_price_formatted\u0022:\u0022\\u20ac 8,95\u0022,\u0022subscription_price\u0022:null,\u0022subscription_price_formatted\u0022:null,\u0022currency\u0022:\u0022EUR\u0022,\u0022converted_from_currency\u0022:\u0022USD\u0022,\u0022discount_applied\u0022:\u0022\\u20ac 0,00\u0022,\u0022discount_percentage\u0022:70,\u0022attributes\u0022:[],\u0022label_price_template\u0022:\u0022Standard Delivery\u0022,\u0022has_gift\u0022:false,\u0022related_pricing_items\u0022:[],\u0022old_price\u0022:null,\u0022trans\u0022:\u0022global.standard_delivery\u0022,\u0022order\u0022:1,\u0022subscription_plan\u0022:null,\u0022pricing_id\u0022:193}'))">
                        <div class="tw-cursor-pointer tw-flex tw-items-start tw-mt-2"
                          x-on:click="Alpine.store('cartDeliveryOptions').select('standard-delivery')">
                          <div class="tw-mr-2">
                            <div x-data="{ active: false }" x-modelable="active" class="tw-bg-transparent tw-h-[20px] tw-w-[20px] tw-p-[4px] tw-border tw-text-[#e1e1e1]
     tw-border-solid tw-border-current tw-bg-clip-content tw-transition-colors tw-rounded-full"
                              x-model="option__deliveryOption().checked"
                              :class="active ? '!tw-text-selection !tw-bg-current': '' ">
                            </div>
                          </div>
                          <p class="tw-mb-0">
                            Standard
                            <template
                              x-if="Alpine.store('cartDeliveryOptions').minStandardDeliveryDays && Alpine.store('cartDeliveryOptions').maxStandardDeliveryDays">
                              <span x-data=""> (<span
                                  x-text="Alpine.store('cartDeliveryOptions').minStandardDeliveryDays"></span>-<span
                                  x-text="Alpine.store('cartDeliveryOptions').maxStandardDeliveryDays"></span>
                                days)</span>
                            </template>
                            <template x-if="option__deliveryOption().totalPrice > 0">
                              <span class="tw-ml-1" x-html="option__deliveryOption().totalPriceFormatted"></span>
                            </template>
                            <template x-if="option__deliveryOption().totalPrice <= 0">
                              <span>Free</span>
                            </template>
                          </p>
                        </div>
                      </template>
                      <template x-if="show"
                        x-data="expressDeliveryOption(JSON.parse('{\u0022id\u0022:\u0022[\\u0022express-delivery\\u0022,\\u002219.99\\u0022,1,\\u0022Upgrade to Express Delivery\\u0022,[],\\u0022EUR\\u0022,null,0,\\u002219.99\\u0022,[],\\u0022https:\\\\\\\/\\\\\\\/get-huusk.com\\\\\\\/huusk\\\\\\\/order\\u0022,\\u0022shipping\\u0022,\\u002219.99\\u0022,70,null]\u0022,\u0022product_id\u0022:\u0022express-delivery\u0022,\u0022label\u0022:\u0022Upgrade to Express Delivery\u0022,\u0022checked\u0022:false,\u0022count\u0022:1,\u0022price\u0022:19.99,\u0022price_formatted\u0022:\u0022\\u20ac 19,99\u0022,\u0022unit_original_price\u0022:\u002266.63\u0022,\u0022unit_original_price_formatted\u0022:\u0022\\u20ac 66,63\u0022,\u0022total_price\u0022:\u002219.99\u0022,\u0022total_price_formatted\u0022:\u0022\\u20ac 19,99\u0022,\u0022original_price\u0022:\u002219.99\u0022,\u0022original_price_formatted\u0022:\u0022\\u20ac 19,99\u0022,\u0022subscription_price\u0022:null,\u0022subscription_price_formatted\u0022:null,\u0022currency\u0022:\u0022EUR\u0022,\u0022converted_from_currency\u0022:\u0022USD\u0022,\u0022discount_applied\u0022:\u0022\\u20ac 0,00\u0022,\u0022discount_percentage\u0022:70,\u0022attributes\u0022:[],\u0022label_price_template\u0022:\u0022Upgrade to Express Delivery\u0022,\u0022has_gift\u0022:false,\u0022related_pricing_items\u0022:[],\u0022old_price\u0022:null,\u0022trans\u0022:\u0022global.express_delivery\u0022,\u0022order\u0022:1,\u0022subscription_plan\u0022:null,\u0022pricing_id\u0022:221}'))">
                        <div class="tw-cursor-pointer tw-flex tw-items-start tw-mt-2"
                          x-on:click="Alpine.store('cartDeliveryOptions').select('express-delivery')">
                          <div class="tw-mr-2">
                            <div x-data="{ active: false }" x-modelable="active" class="tw-bg-transparent tw-h-[20px] tw-w-[20px] tw-p-[4px] tw-border tw-text-[#e1e1e1]
     tw-border-solid tw-border-current tw-bg-clip-content tw-transition-colors tw-rounded-full"
                              x-model="option__deliveryOption().checked"
                              :class="active ? '!tw-text-selection !tw-bg-current': '' ">
                            </div>
                          </div>
                          <p class="tw-mb-0">
                            Express
                            <template
                              x-if="Alpine.store('cartDeliveryOptions').minStandardDeliveryDays && Alpine.store('cartDeliveryOptions').maxStandardDeliveryDays">
                              <span>
                                (<span x-text="Alpine.store('cartDeliveryOptions').minExpressDeliveryDays"></span>-<span
                                  x-text="Alpine.store('cartDeliveryOptions').maxExpressDeliveryDays"></span> days)
                              </span>
                            </template>
                            <template x-if="option__deliveryOption().totalPrice > 0">
                              <span class="tw-ml-1" x-html="option__deliveryOption().totalPriceFormatted"></span>
                            </template>
                            <template x-if="option__deliveryOption().totalPrice <= 0">
                              <span>Free</span>
                            </template>
                          </p>
                        </div>
                      </template>
                      <div id="australia-post-widget-location"></div>
                      <div id="parcel-locker-error-placeholder"></div>
                    </div>
                  </div>
                  <div data-klarna-unload="">
                    <div class="cart-gap-2"></div>
                  </div>
                  <div id="billing-details" data-ga-section="8 - Billing Details">
                    <p x-data="{
        number: 4,
        text: null
    }" @change-step-number-billing.window="number = $event.detail"
                      @change-step-text-billing.window="text = $event.detail"
                      class="cart-step h4 font-weight-bold align-items-center mb-3 mt-0 mb-3"
                      style="display: flex; text-align: inherit;" data-klarna-unload="data-klarna-unload">
                      <img style="height: 20px; margin-right: 10px"
                        src='data:image/svg+xml;charset=utf-8,<svg width="30" height="30" xmlns="http://www.w3.org/2000/svg"><rect style="fill:transparent" width="100%" height="100%"/></svg>'
                        data-src="https://get-huusk.com/images/order/step/billing-information.svg" alt="">
                      <template x-if="text">
                        <span x-html="text"></span>
                      </template>
                      <template x-if="text === null">
                        <span>Step <span x-text="number"></span>: Billing Information</span>
                      </template>
                    </p>
                    <div data-klarna-unload="" class="mb-3">
                      <script type="text/template" id="payment-method-paypal">
                        <div class="payment-method-select"
         title="PayPal"
         data-value="paypal"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('paypal')
            || (codGateways__commonOrder.includes('paypal') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/paypal.svg"
                 alt="Payment PayPal">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-paypal-vault">
                        <div class="payment-method-select"
         title="PayPal Vault"
         data-value="paypal_vault_checkout"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('paypal_vault_checkout')
            || (codGateways__commonOrder.includes('paypal_vault_checkout') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/paypal.svg"
                 alt="Payment PayPal Vault">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-visa-mastercard">
                        <div class="payment-method-select"
         title="Credit - debit"
         data-value="visa"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('visa')
            || (codGateways__commonOrder.includes('visa') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height: 20px;" class="m-0" src="https://get-huusk.com/theme/images/processors/visa.svg"
                 alt="Payment Visa">
                            <div class="d-inline-block" style="background: #cccccc; width: 1px; height: 20px"></div>
                        <img style="height: 20px;" class="m-0"
                 src="https://get-huusk.com/theme/images/processors/mastercard-icon-and-title.svg?v1"
                 alt="Payment Mastercard"
            >
                                                <div class="d-inline-block" style="background: #cccccc; width: 1px; height: 20px"></div>
                                <img style="height: 20px;" class="m-0" src="https://get-huusk.com/theme/images/processors/amex-color.svg"
                     alt="Payment American Express">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-ebanx">
                        <div class="payment-method-select"
         title="Ebanx"
         data-value="ebanx"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ebanx')
            || (codGateways__commonOrder.includes('ebanx') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            Credit
                <img style="height: 15px;" class="m-0" src="https://get-huusk.com/theme/images/processors/visa.svg"
             alt="Payment Visa">
                    <div class="d-inline-block" style="background: #cccccc; width: 1px; height: 20px"></div>
                <img style="height: 20px;" class="m-0"
             src="https://get-huusk.com/theme/images/processors/mastercard-icon-and-title.svg?v1"
             alt="Payment Mastercard">
                    <div class="d-inline-block" style="background: #cccccc; width: 1px; height: 20px"></div>
                <img style="height: 20px;" class="m-0" src="https://get-huusk.com/theme/images/processors/amex-color.svg"
             alt="Payment American Express">
                    <div class="ebanx-payment-card-separator"
                 style="background: #cccccc; width: 1px; height: 20px; display:none"></div>
                <img style="height: 20px; display:none" class="m-0 ebanx-payment-card-mx"
             src="https://get-huusk.com/theme/images/processors/carnet.svg"
             alt="Payment Carnet">
        <img style="height: 20px; display:none" class="m-0 ebanx-payment-card-other"
             src="https://get-huusk.com/theme/images/processors/diners-club.svg"
             alt="Payment Diners Club">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-ebanx-debit">
                        <div class="payment-method-select"
         title="Ebanx"
         data-value="ebanx_debit"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ebanx_debit')
            || (codGateways__commonOrder.includes('ebanx_debit') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            Debit
                <img style="height: 15px;" class="m-0" src="https://get-huusk.com/theme/images/processors/visa.svg"
             alt="Payment Visa">
                    <div class="d-inline-block" style="background: #cccccc; width: 1px; height: 20px"></div>
                <img style="height: 20px;" class="m-0"
             src="https://get-huusk.com/theme/images/processors/mastercard-icon-and-title.svg?v1"
             alt="Payment Mastercard">
                    <div class="d-inline-block" style="background: #cccccc; width: 1px; height: 20px"></div>
                <img style="height: 20px;" class="m-0" src="https://get-huusk.com/theme/images/processors/amex-color.svg"
             alt="Payment American Express">
                    <div class="ebanx-payment-card-separator"
                 style="background: #cccccc; width: 1px; height: 20px; display:none"></div>
                <img style="height: 20px; display:none" class="m-0 ebanx-payment-card-mx"
             src="https://get-huusk.com/theme/images/processors/carnet.svg"
             alt="Payment Carnet">
        <img style="height: 20px; display:none" class="m-0 ebanx-payment-card-other"
             src="https://get-huusk.com/theme/images/processors/diners-club.svg"
             alt="Payment Diners Club">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-ebanx-token">
                        <div class="payment-method-select"
         title="Ebanx"
         data-value="ebanx_token"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ebanx_token')
            || (codGateways__commonOrder.includes('ebanx_token') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            Credit
                <img style="height: 15px;" class="m-0" src="https://get-huusk.com/theme/images/processors/visa.svg"
             alt="Payment Visa">
                    <div class="d-inline-block" style="background: #cccccc; width: 1px; height: 20px"></div>
                <img style="height: 20px;" class="m-0"
             src="https://get-huusk.com/theme/images/processors/mastercard-icon-and-title.svg?v1"
             alt="Payment Mastercard">
                    <div class="d-inline-block" style="background: #cccccc; width: 1px; height: 20px"></div>
                <img style="height: 20px;" class="m-0" src="https://get-huusk.com/theme/images/processors/amex-color.svg"
             alt="Payment American Express">
                    <div class="ebanx-payment-card-separator"
                 style="background: #cccccc; width: 1px; height: 20px; display:none"></div>
                <img style="height: 20px; display:none" class="m-0 ebanx-payment-card-mx"
             src="https://get-huusk.com/theme/images/processors/carnet.svg"
             alt="Payment Carnet">
        <img style="height: 20px; display:none" class="m-0 ebanx-payment-card-other"
             src="https://get-huusk.com/theme/images/processors/diners-club.svg"
             alt="Payment Diners Club">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-ebanx-pix">
                        <div class="payment-method-select"
         title="Ebanx Pix"
         data-value="ebanx_pix"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ebanx_pix')
            || (codGateways__commonOrder.includes('ebanx_pix') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height:20px" src="https://get-huusk.com/theme/images/processors/pix.svg" alt="Payment Pix">
        </div>
    </div>
</script>

                      <script type="text/template" id="payment-method-ebanx-mercado">
                        <div class="payment-method-select"
         title="Ebanx Pix"
         data-value="ebanx_mercado"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ebanx_mercado')
            || (codGateways__commonOrder.includes('ebanx_mercado') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height:20px" src="https://get-huusk.com/theme/images/processors/mercado-pago.svg" alt="Payment Mercado">
        </div>
    </div>
</script>

                      <script type="text/template" id="payment-method-ebanx-oxxo">
                        <div class="payment-method-select"
         title="Ebanx Oxxo"
         data-value="ebanx_oxxo"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ebanx_oxxo')
            || (codGateways__commonOrder.includes('ebanx_oxxo') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height:20px" src="https://get-huusk.com/theme/images/processors/oxxo.svg" alt="Payment Oxxo">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-boleto">
                        <div class="payment-method-select"
         title="Boleto"
         data-value="ebanx_boleto"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ebanx_boleto')
            || (codGateways__commonOrder.includes('ebanx_boleto') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height: 20px" src="https://get-huusk.com/theme/huusk/order-3/boleto.svg" alt="Payment Boleto">
        </div>
    </div>
</script>

                      <script type="text/template" id="payment-method-klarna_payments">
                        <div class="payment-method-select"
         title="Klarna"
         data-value="klarna_payments"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('klarna_payments')
            || (codGateways__commonOrder.includes('klarna_payments') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height: 20px" src="/theme/images/processors/klarna-color.svg" alt="Klarna Logo"
                 title="Klarna">
            <span class="text-nowrap" style="font-size: 0.7em;">Get Now - Pay Later</span>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-klarna">
                        <div class="payment-method-select"
         title="Klarna"
         data-value="klarna"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('klarna')
            || (codGateways__commonOrder.includes('klarna') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div style="min-width: 80%;" class="d-flex flex-column">
                <div style="min-height: 36px" class="my-1 d-flex align-items-center">
                    <div style="min-width: 110px" class="mr-3">
                        <img style="height:22px;" src="https://get-huusk.com/theme/images/processors/visa.svg" alt="Visa">
                        <img style="height:22px;" src="https://get-huusk.com/theme/images/processors/mastercard-icon.svg"
                             alt="Mastercard"
                        >
                    </div>
                    <span class="f-14 mx-auto text-center">
                        Pay With Credit Card                    </span>
                </div>
                <div style="min-height: 36px" class="my-1 d-flex align-items-center">
                    <span style="min-width: 110px" class="mr-3">
                        <img style="height:26px;" src="https://get-huusk.com/theme/images/processors/paypal.svg"  alt="Paypal">
                    </span>
                    <span class="f-14 mx-auto text-center">
                        Pay With PayPal                    </span>
                </div>
                <div style="min-height: 36px" class="my-1 d-flex align-items-center">
                    <div style="min-width: 110px" class="mr-3" >
                        <img style="height:26px;" src="/theme/images/processors/klarna-color.svg" alt="Klarna Logo"
                             title="Klarna">
                    </div>
                    <span class="f-14 mx-auto text-center">
                        Pay later after 30 days                    </span>
                </div>
                <div style="min-height: 36px" class="my-1 d-flex align-items-center">
                    <div style="min-width: 110px" class="mr-3">
                        <img style="height:26px;" src="/theme/images/processors/klarna-color.svg" alt="Klarna Logo"
                             title="Klarna">
                    </div>
                    <span class="f-14 mx-auto text-center">
                        Interest-free installments                    </span>
                </div>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-ixo-pay-after-pay">
                        <div class="payment-method-select"
         title="Afterpay"
         data-value="ixo_pay_after_pay"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ixo_pay_after_pay')
            || (codGateways__commonOrder.includes('ixo_pay_after_pay') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height:20px" src="https://get-huusk.com/theme/images/processors/afterpay.png" alt="Payment Afterpay">
            <span class="text-nowrap" style="font-size: 0.7em;">Buy Now. Pay Later.</span>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-stripe_blik">
                        <div class="payment-method-select"
         title="Blik payments"
         data-value="stripe_blik"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('stripe_blik')
            || (codGateways__commonOrder.includes('stripe_blik') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height: 20px" src="/theme/images/processors/blik.svg" alt="Blik payment method"
                 title="Blik payments">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-tpay_blik">
                        <div class="payment-method-select"
         title="Blik payments"
         data-value="tpay_blik"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('tpay_blik')
            || (codGateways__commonOrder.includes('tpay_blik') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img style="height: 20px" src="https://get-huusk.com/theme/images/processors/blik.svg" alt="Blik payment method"
                 title="Blik payments">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-ixo_pay_ideal">
                        <div class="payment-method-select"
         title="iDeal"
         data-value="ixo_pay_ideal"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ixo_pay_ideal')
            || (codGateways__commonOrder.includes('ixo_pay_ideal') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <img class="tw-h-full tw-ml-[-7px]" src="https://get-huusk.com/theme/images/processors/ideal.svg" alt="iDeal payment method"
                 title="iDeal">
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-dapsides">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="dapsides"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('dapsides')
            || (codGateways__commonOrder.includes('dapsides') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-dapsides_lead">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="dapsides_lead"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('dapsides_lead')
            || (codGateways__commonOrder.includes('dapsides_lead') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-weship">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="weship"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('weship')
            || (codGateways__commonOrder.includes('weship') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-packer">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="packer"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('packer')
            || (codGateways__commonOrder.includes('packer') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-inpost">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="inpost"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('inpost')
            || (codGateways__commonOrder.includes('inpost') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-payo">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="payo"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('payo')
            || (codGateways__commonOrder.includes('payo') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-urstore">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="urstore"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('urstore')
            || (codGateways__commonOrder.includes('urstore') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-boxme">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="boxme"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('boxme')
            || (codGateways__commonOrder.includes('boxme') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-logismart">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="logismart"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('logismart')
            || (codGateways__commonOrder.includes('logismart') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-dir_logistics">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="dir_logistics"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('dir_logistics')
            || (codGateways__commonOrder.includes('dir_logistics') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-testCod">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="testCod"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('testCod')
            || (codGateways__commonOrder.includes('testCod') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-helpship">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="helpship"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('helpship')
            || (codGateways__commonOrder.includes('helpship') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-shorages">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="shorages"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('shorages')
            || (codGateways__commonOrder.includes('shorages') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-ship_rocket">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="ship_rocket"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('ship_rocket')
            || (codGateways__commonOrder.includes('ship_rocket') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-express_2660">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="express_2660"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('express_2660')
            || (codGateways__commonOrder.includes('express_2660') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <script type="text/template" id="payment-method-fhb">
                        <div class="payment-method-select" data-cod="data-cod"
         title="Cash On Delivery"
         data-value="fhb"
         x-show="(typeof codGateways__commonOrder !== 'undefined' && codGateways__commonOrder)
            && (!codGateways__commonOrder.includes('fhb')
            || (codGateways__commonOrder.includes('fhb') && !hideCodSelection__commonOrder))"
    >
        <div class="align-self-center mr-2">
            <div class="tw-radio-style"></div>
        </div>
        <div class="payment-method-select-logo overflow-hidden d-flex flex-wrap justify-content-start
        align-items-center flex-grow-1 gap-8 font-weight-bold text-capitalize">
            <div>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() &&
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId === 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <svg class="tw-me-3 tw-h-[2em] tw-my-[-1em] tw-w-auto" fill="none" height="24" viewBox="0 0 40 24" width="40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="m9.67642 4.68141c-.41785-.3043-.80564-.64743-1.16339-1.02937-.10278-.10976-.19821-.21588-.28629-.31836-.38044-.44246-.71549-.93995-1.00514-1.49245-.28894-.55123-.51306-1.124856-.67238-1.720895-.00542-.019983.00029-.0239076.01713-.011776.59444.43133 1.12556.928171 1.59337 1.490531.35317.42433.65232.86801.89743 1.33102.29992.56678.53397 1.15975.70214 1.77891.01056.03925-.00243.04204-.03897.00835-.01399-.01284-.02863-.02483-.0439-.03596z" fill="#fc0"/><path d="m9.06058 16.9587c-1.03641-1.1558-1.65118-2.4965-1.84433-4.022-.10792-.8522-.06096-1.7089.1409-2.57.03255-.1384.06981-.2763.11178-.41363.4-1.30868 1.10792-2.42669 2.12377-3.354.6608-.60303 1.4051-1.07483 2.233-1.41538 1.2972-.53367 2.6339-.71072 4.01-.53117.0591.00771.059.01442-.0004.02013-.1513.01455-.3015.03653-.4505.06594-1.3681.27018-2.5728.85795-3.6142 1.76328-.6189.53809-1.1384 1.16924-1.5582 1.89345-.43969.75861-.7332 1.56853-.88052 2.42978-.02812.1637-.04225.3054-.0424.4252-.001.5358.16945 1.0164.51135 1.4419.21017.2616.47237.4934.78677.6954.2641.1698.5431.3039.8372.4023.0123.004.0129.0094.0019.0162-.1985.1238-.4028.2329-.6128.3274-.1508.0679-.283.1216-.3968.161-.2467.0852-.50035.1369-.76102.1552-.00265.0002-.00522.001-.00752.0023-.00229.0013-.00424.0032-.00569.0054-.00146.0022-.00238.0048-.00268.0074-.00031.0026 0 .0053.0009.0078.39571 1.09 1.00561 2.0369 1.82951 2.8406.1008.0984.2061.1948.3159.2893 1.1723 1.0083 2.5327 1.617 4.0811 1.826.0147.002.0147.004 0 .006-.6543.088-1.3094.0936-1.9651.0167-1.1371-.1333-2.1925-.4984-3.1659-1.0953-.6267-.3843-1.18538-.85-1.67602-1.3972z" fill="#fc0"/><path d="m1.97986 5.50307c-.06653-.06551-.13576-.13445-.20771-.20681-.02284-.02298-.01827-.03197.0137-.02698.81813.12632 1.59979.35476 2.34497.68532.30364.13488.59715.2891.88051.46266.67438.41306 1.2818.90362 1.82227 1.47168.01071.01142.00836.01599-.00706.01371-.96032-.14273-1.8676-.42884-2.72184-.85831-.12791-.06423-.25339-.13217-.37645-.20382-.63811-.37167-1.22091-.81748-1.74839-1.33745z" fill="#fc0"/><path d="m23.497 13.2537-.0013 2.0536c0 .0041-.0016.0079-.0044.0108-.0028.0028-.0066.0044-.0106.0044h-1.0942c-.004 0-.0078-.0016-.0106-.0044-.0028-.0029-.0044-.0067-.0044-.0108v-6.5547c0-.00465.0019-.00912.0052-.01241s.0077-.00514.0124-.00514c.8358 0 1.6633-.00015 2.4824-.00043.2902-.00014.5746.03996.8531.12032.5376.15501.9367.46723 1.1972.93666.0683.12289.1235.2541.1658.3937.0721.2377.1096.4893.1126.7549.0023.2024-.0096.3809-.0357.5355-.0798.473-.2888.8671-.6268 1.1822-.1045.0973-.2184.1827-.3418.2561-.1923.1146-.3964.1971-.6124.2475-.2307.0538-.4734.0805-.728.0802-.4493-.0007-.8985-.0002-1.3478.0013-.0028 0-.0056.0011-.0076.0032-.002.002-.0031.0047-.0031.0075zm1.5144-1.0779c.141-.0102.2724-.0389.3942-.0861.2458-.0958.4241-.2575.5349-.4851.0574-.1181.0945-.255.1115-.4107.0197-.181.0117-.369-.0242-.5641-.0505-.2749-.1779-.4842-.3822-.628-.1065-.07489-.2375-.12841-.3929-.16053-.1325-.0274-.2756-.0411-.4294-.0411-.4318 0-.8683 0-1.3094 0-.0048 0-.0094.00192-.0129.00533-.0034.00341-.0053.00804-.0053.01287l.0013 2.33573c0 .0073.0029.0143.008.0195.0052.0052.0121.0081.0194.0082.3732.0018.7354.0012 1.0867-.002.2597-.0021.3931-.0035.4003-.004z" fill="#403f41"/><path d="m15.888 8.7511h-1.1015c-.0034 0-.0062.00278-.0062.00621v6.57609c0 .0035.0028.0062.0062.0062h1.1015c.0034 0 .0062-.0027.0062-.0062v-6.57609c0-.00343-.0028-.00621-.0062-.00621z" fill="#403f41"/><path d="m38.9613 11.0804c-.0033.025-.005.0639-.0052.1167-.0026.9011.001 1.8021.0107 2.703.0013.1299.0231.2454.0655.3466.0307.0731.0866.1272.1677.1623.1149.0498.2353.0756.361.0775.1094.0014.2185-.005.3274-.0193.0024-.0003.0049-.0001.0072.0006.0023.0008.0044.002.0062.0036s.0033.0036.0042.0058c.001.0023.0015.0047.0015.0071l-.0039.8718c0 .0075-.0025.0147-.0071.0205-.0047.0057-.0111.0097-.0183.0112-.3534.0745-.7075.0804-1.0626.0176-.147-.026-.2794-.0673-.3972-.1238-.2391-.115-.3903-.3021-.4537-.5613-.0643-.2622-.0963-.5285-.0962-.7988.0006-1.7146.0009-3.4332.0009-5.15563 0-.00392.0015-.00767.0043-.01044.0027-.00278.0064-.00433.0103-.00433l1.0601.00128c.0029 0 .0056.00113.0076.00314s.0031.00473.0031.00757l.0026 1.40491c0 .0029.0011.0056.0031.0077.002.002.0048.0032.0076.0032l.9373.0013c.0052 0 .0102.0021.0139.0057.0037.0037.0058.0088.0058.014v.8452c0 .0031-.0006.0062-.0018.009-.0012.0029-.0029.0055-.0051.0077s-.0048.0039-.0077.0051c-.0028.0012-.0059.0018-.009.0018l-.928.0013c-.0031 0-.006.001-.0082.003-.0022.0019-.0037.0046-.004.0074z" fill="#403f41"/><path d="m28.4197 14.795c-.3082-.2807-.5296-.6146-.6641-1.0017-.0428-.1236-.0778-.2618-.1051-.4145-.0789-.4412-.077-.8846.0058-1.3304.0935-.5032.3146-.9321.6632-1.2867.1035-.1053.2127-.1969.3276-.2749.2194-.149.458-.2547.7158-.3173.3017-.073.6122-.0927.9315-.0588.3947.0418.7451.1627 1.0512.3629.1153.0753.2258.1652.3315.2697.3036.3003.5097.6519.6182 1.0546.0896.3332.1275.6931.1137 1.0799-.0107.301-.0524.5729-.1251.8155-.0882.2949-.2275.563-.4178.8044-.4135.5244-.9588.8122-1.6359.8636-.3202.0243-.6307-.0025-.9315-.0803-.3215-.0832-.6145-.2452-.879-.486zm.7912-.7429c.127.1206.2723.2038.4358.2495.1677.0468.3368.0604.5072.0409.1489-.0172.2848-.0581.4077-.1227.1541-.0808.2843-.1945.3906-.3411.1432-.1972.2366-.4216.2803-.6731.0581-.3341.0563-.6611-.0055-.981-.0359-.1854-.0973-.3526-.1844-.5016-.223-.3811-.5456-.5825-.9679-.6044-.1482-.0077-.2892.0084-.4231.0484-.3062.0914-.5394.286-.6996.5841-.0939.1747-.1568.3718-.1886.5915-.0557.3844-.0305.7528.0755 1.1052.0709.2349.1948.4363.372.6043z" fill="#403f41"/><path d="m33.3429 12.624c-.1606-.1443-.2671-.3215-.3193-.5318-.1005-.4045-.0498-.7726.152-1.1043.0707-.1159.1617-.2251.273-.3278.2026-.1869.4324-.322.6895-.405.3111-.1007.6378-.1473.9801-.1398.1461.0031.2882.0143.4266.0336.5706.0795 1.0706.3148 1.5002.7061.0023.002.0041.0045.0054.0073s.002.0058.0022.0089c.0001.003-.0004.0061-.0015.009s-.0027.0055-.0048.0077l-.627.6592c-.0036.0037-.0084.0059-.0136.0061-.0051.0002-.0102-.0016-.014-.005-.3432-.3047-.7483-.4721-1.2152-.502-.2113-.0136-.4075-.0025-.5887.0331-.0732.0145-.1545.0441-.2439.0891-.131.0658-.2124.1631-.2441.292-.0241.0979-.0172.1886.0208.2719.0398.0879.1099.1557.2103.2034.0859.0408.1628.0667.2306.0777.4054.0657.8103.1346 1.2145.2066.1821.0324.3592.0818.5315.1482.1032.0398.2016.0884.2951.1458.0988.0606.1848.1279.258.2017.2087.2105.3237.4661.345.7668.0447.6328-.1891 1.125-.7013 1.4767-.2564.1761-.5383.2906-.8458.3434-.1492.0257-.2992.0404-.4499.0443-.1361.0036-.2787.0016-.4278-.006-.3402-.0173-.6698-.0843-.9887-.201-.1428-.0523-.2724-.1114-.3891-.1775-.2234-.1266-.4295-.287-.6182-.4811-.0015-.0016-.0027-.0035-.0035-.0056s-.0011-.0043-.001-.0066c.0001-.0022.0007-.0044.0017-.0064s.0024-.0037.0041-.0052l.8114-.6737c.0037-.0031.0084-.0048.0132-.0046.0049.0001.0095.0021.0131.0054.4872.464 1.0687.6555 1.7443.5744.1716-.0206.3336-.0855.4859-.1946.1178-.0845.19-.1917.2167-.3217.0228-.1117.0121-.2142-.0321-.3077-.0483-.1015-.1322-.1741-.2519-.2179-.0875-.0322-.1771-.0567-.2689-.0737-.3092-.0569-.6191-.1102-.9296-.1597-.1887-.0303-.375-.0712-.5591-.1227-.1703-.0477-.3331-.1136-.4886-.1978-.0714-.0387-.1373-.0851-.1976-.1392z" fill="#403f41"/><path d="m18.1009 11.2789-.0013 4.0468c0 .0052-.0021.0102-.0057.0138-.0037.0037-.0086.0057-.0138.0057h-1.0696c-.005 0-.0099-.002-.0135-.0056-.0035-.0035-.0055-.0084-.0055-.0134v-4.8244c-.0001-.0031.001-.0061.0029-.0085.002-.0024.0047-.0041.0078-.0048.4254-.0871.8481-.1569 1.2683-.2094.2778-.0347.6063-.0605.9854-.0775.2283-.0103.4299-.0049.6049.0161.1338.0159.2713.0544.4127.1154.133.0573.2551.129.3664.2149.3631.2808.5693.6631.6186 1.1469.0141.1387.0212.2779.0212.4175-.0002 1.0669-.0002 2.1379-.0002 3.2129 0 .0053-.0021.0104-.0059.0141-.0037.0037-.0088.0058-.014.0058h-1.072c-.004 0-.0078-.0016-.0106-.0044s-.0044-.0066-.0044-.0106c-.0016-1.0288-.002-2.0586-.0013-3.0893.0002-.1392-.0083-.2588-.0252-.3589-.0767-.4544-.3449-.7041-.8045-.7491-.1525-.0148-.3506-.0061-.5943.0261-.2131.0283-.425.0639-.6357.1069-.003.0006-.0058.0022-.0077.0046-.002.0024-.003.0053-.003.0084z" fill="#403f41"/><path d="m5.75717 12.0508c.01399.0048.01399.0097 0 .0145-.43155.1483-.87309.2621-1.32463.3415-.64668.1136-1.26402.1585-1.85203.1347-.87795-.0359-1.730981-.1949-2.5591041-.4773-.01584587-.0054-.01584587-.0107 0-.016.7471811-.2518 1.5127041-.4067 2.2965741-.4648.50978-.0378 1.01849-.0271 1.52612.0321.64954.0755 1.28723.2206 1.91307.4353z" fill="#fc0"/><path d="m1.90985 18.6517c.41942-.4177.85661-.7799 1.31157-1.0865.51577-.3478 1.03868-.6266 1.56873-.8363.65354-.2584 1.33255-.4407 2.03705-.5468.0137-.002.01577.002.00621.012-1.3793 1.4512-3.06824 2.3256-5.06681 2.6233-.00728.001-.00864-.0013-.00407-.007.02926-.0371.07837-.09.14732-.1587z" fill="#fc0"/><g fill="#403f41"><path d="m26.0775 17.6668.3692.0013c.0066.0001.0129.0027.0175.0072s.0072.0107.0071.017l-.0026.2875c0 .003-.0012.0058-.0034.0079-.0021.0021-.0049.0033-.0079.0033l-.3724.0034c-.0052 0-.0102.002-.0139.0056-.0037.0037-.0058.0086-.0058.0137v1.0355c0 .0027-.0005.0053-.0015.0078-.0011.0024-.0026.0046-.0045.0064s-.0042.0032-.0066.0042c-.0025.0009-.0051.0013-.0077.0011-.1189-.0065-.2427-.0058-.3713.0022-.0032.0002-.0064-.0003-.0093-.0013-.003-.0011-.0057-.0028-.0081-.005-.0023-.0021-.0041-.0047-.0054-.0076-.0012-.003-.0019-.0061-.0019-.0093l-.0012-1.039c0-.0022-.0005-.0044-.0014-.0064-.0009-.0021-.0022-.0039-.0038-.0054s-.0035-.0027-.0056-.0034-.0044-.001-.0066-.0008c-.0741.0056-.1401.0037-.1981-.0056-.0031-.0005-.0059-.0021-.008-.0044-.0021-.0024-.0032-.0054-.0033-.0084l-.0028-.2833c0-.003.0006-.0059.0017-.0087.0012-.0028.0029-.0053.0051-.0075.0022-.0021.0048-.0038.0077-.0049.0029-.0012.006-.0018.0091-.0018h.1972c.0037 0 .0073-.0015.01-.0041.0026-.0027.0041-.0063.0041-.01 0-.0388.0006-.0769.0017-.1143.0056-.1807.0956-.2953.2701-.3439.0616-.0172.1174-.0272.1672-.0299.1141-.0063.2342-.0083.3606-.0058.0052 0 .0101.0022.0138.0059.0036.0037.0057.0087.0057.014v.2785c0 .0024-.0005.0047-.0014.0068-.0009.0022-.0022.0042-.0039.0058-.0016.0016-.0036.0029-.0057.0038-.0022.0008-.0045.0012-.0068.0012-.0951-.0023-.1842-.0012-.2672.0032-.0419.0023-.071.0091-.0874.0203-.0281.0193-.0408.0506-.0379.0938.0014.0208.0028.0417.0041.0627.0001.0029.0014.0057.0036.0076.0021.002.005.0031.0079.0031z"/><path d="m29.1342 19.0672c-.0061 0-.0119-.0024-.0162-.0065-.0043-.0042-.0067-.0098-.0067-.0157v-1.868c0-.0046.0019-.009.0051-.0123.0033-.0032.0077-.005.0123-.005h.3796c.0041 0 .0079.0016.0108.0044.0028.0029.0044.0067.0044.0108l-.0013.681c0 .0113.0035.0126.0105.0039.0697-.0863.1574-.1466.263-.181.2108-.0685.4088-.0627.5938.0174.1656.0716.2695.1943.3118.368.0209.0859.0316.1787.0319.2783.0008.237.0005.4738-.0011.7106 0 .0028-.0011.0055-.0031.0075s-.0048.0032-.0076.0032l-.3771.0052c-.003 0-.006-.0005-.0088-.0016s-.0054-.0028-.0075-.0049c-.0022-.0021-.0039-.0046-.0051-.0073-.0011-.0028-.0017-.0057-.0017-.0087 0-.2231-.0005-.4417-.0013-.6558 0-.0347-.0014-.0693-.0043-.1038-.0031-.0396-.0101-.0732-.0208-.1009-.0468-.1206-.1415-.1879-.2841-.2021-.1049-.0104-.2008.0083-.2876.0561-.0789.0434-.1342.1031-.1657.179-.0186.0445-.0289.1211-.0311.2297-.0038.1979-.0047.3987-.0026.6027 0 .0023-.0004.0046-.0013.0067-.001.0021-.0023.004-.004.0056-.0017.0017-.0037.0029-.0059.0038-.0022.0008-.0046.0013-.007.0012z"/><path d="m34.4797 17.8206c.1554-.1269.3396-.1884.5524-.1846.069.0013.1323.007.19.0172.0599.0105.1202.0296.1807.0571.262.1189.403.3155.4231.5899.0115.1558-.0144.2941-.0775.4149-.0489.0939-.1173.1722-.2051.235-.0784.056-.1709.0975-.2775.1244-.1946.0494-.3904.0369-.5874-.0374-.0774-.0293-.1452-.0702-.2034-.1227-.0139-.0126-.0209-.0094-.021.0094l-.0009.1253c0 .0032-.0007.0064-.002.0093-.0013.003-.0033.0056-.0057.0078s-.0053.0039-.0084.0049c-.0032.0011-.0065.0015-.0098.0013-.1267-.009-.2467-.0095-.3597-.0015-.0019.0001-.0039-.0001-.0057-.0007-.0018-.0007-.0035-.0017-.0049-.003s-.0025-.0029-.0033-.0046c-.0007-.0018-.0011-.0037-.0011-.0056v-1.8826c0-.0039.0015-.0076.0043-.0104s.0065-.0043.0105-.0043h.3845c.0035 0 .0068.0014.0092.0038.0025.0025.0039.0059.0039.0094l.0062.6438c0 .0073.0029.0086.0086.0039zm.1336.8497c.0782.0563.1642.0889.2578.0979.0938.0088.1827.0003.2666-.0255.1067-.0328.1837-.0996.2311-.2004.0354-.0751.0474-.1532.0362-.2344-.0125-.0897-.051-.1635-.1157-.2214-.0649-.0583-.1494-.0959-.2533-.1131-.0968-.0161-.1922-.0086-.2863.0225-.1756.0581-.2692.1732-.2807.3454-.0046.0676.0041.1279.0261.1809.0248.0601.0642.1094.1182.1481z"/><path d="m21.7728 18.0066c-.0054.1487-.0075.3446-.0062.5875.0006.0988.0492.1465.1458.1432.0651-.0023.1812-.0006.3482.0049.003.0001.0058.0014.0079.0034.002.0021.0032.0049.0033.0078l.003.2971c0 .0048-.0019.0094-.0053.0129-.0035.0034-.0082.0054-.0132.0055-.1753.0039-.3492.0026-.5218-.0038-.0718-.0027-.1284-.0113-.1698-.0257-.1213-.0424-.1897-.1284-.2049-.258-.0095-.0803-.0108-.3378-.0041-.7722 0-.003-.0011-.0058-.0031-.0079-.0019-.0021-.0046-.0033-.0074-.0033l-.2323-.003c-.0056 0-.0109-.0022-.0148-.0059-.0039-.0038-.0061-.0089-.006-.0142l.0013-.2894c0-.0046.0018-.009.0051-.0123s.0078-.0051.0124-.0051h.2341c.0014 0 .0028-.0003.0042-.0008.0013-.0006.0025-.0014.0035-.0024.001-.0011.0018-.0023.0024-.0036.0005-.0014.0008-.0028.0008-.0043l-.0015-.3486c0-.0019.0004-.0039.0012-.0057.0007-.0018.0019-.0035.0033-.0049.0014-.0013.0031-.0024.0049-.0032s.0038-.0011.0058-.0011h.3797c.0046 0 .009.0018.0122.005.0033.0033.0051.0077.0051.0123v.3391c0 .0049.0019.0095.0054.0129.0034.0034.008.0053.0128.0053h.476c.0038 0 .0075.0015.0102.0042s.0042.0064.0042.0102v.2918c0 .0026-.0005.0053-.0016.0078-.001.0024-.0025.0047-.0044.0066-.0019.0018-.0041.0033-.0066.0044-.0024.001-.0051.0015-.0078.0015l-.471.0013c-.0029 0-.0056.0011-.0076.0031-.0021.002-.0033.0047-.0034.0076z"/><path d="m27.7717 17.9957-.2359-.0011c-.0019 0-.0038-.0003-.0055-.0011-.0018-.0007-.0033-.0017-.0047-.003-.0013-.0013-.0024-.0029-.0031-.0046s-.0011-.0036-.0011-.0054v-.2942c0-.0048.002-.0095.0054-.0129.0035-.0035.0081-.0054.013-.0055l.2319-.0008c.0029-.0001.0057-.0013.0077-.0034.002-.002.0032-.0048.0033-.0078l.001-.3507c0-.0031.0013-.0061.0035-.0083s.0052-.0034.0083-.0034h.3897c.0029 0 .0056.0011.0076.0031s.0031.0047.0031.0076l.0013.3519c0 .0029.0012.0056.0032.0076s.0047.0031.0075.0031l.4683.0013c.0075 0 .0147.003.02.0083.0027.0026.0047.0057.0062.0092.0014.0034.0021.0071.0021.0108v.2789c0 .0052-.0021.0101-.0058.0138-.0036.0036-.0087.0057-.0139.0057l-.4743.0035c-.0028 0-.0056.0012-.0076.0033-.002.002-.0032.0048-.0033.0078-.0064.2005-.0064.4011.0002.6018.0013.037.0073.0636.018.0799.0173.0264.0439.0404.0799.0421.123.006.2516.0078.3858.0052.0028-.0001.0055.0004.0081.0014.0025.001.0049.0025.0068.0044.002.0019.0035.0042.0046.0067.001.0024.0015.0051.0015.0078l-.0013.2946c0 .0045-.0019.0089-.0051.0121-.0033.0032-.0076.005-.0122.005-.1803.0018-.3615.0006-.5435-.0034-.2412-.0053-.3612-.129-.3597-.3712.0014-.2298.0013-.4595-.0003-.6892 0-.0029-.0011-.0057-.0031-.0077-.002-.0021-.0047-.0032-.0076-.0032z"/><path d="m17.2469 18.9114c-.1903-.1565-.2723-.3602-.2459-.6113.0317-.2997.1896-.4983.4735-.5958.2091-.0719.43-.0876.6625-.0469.1433.025.2671.0763.3713.154.183.1361.2743.3203.2737.5525-.0004.2792-.1195.4857-.3572.6196-.0731.0411-.1541.0714-.243.0908-.2457.0534-.4867.0387-.7229-.0439-.0777-.0273-.1484-.0669-.212-.119zm.2929-.2497c.0318.0273.0673.0486.1064.0638.1419.0553.2862.0614.4328.0184.1106-.0324.1899-.0932.2379-.1824.0437-.081.056-.1725.037-.2742-.0308-.1649-.1407-.2676-.3295-.3081-.1059-.0228-.2077-.0203-.3054.0075-.1065.0304-.1867.0851-.2407.164-.0675.0985-.0813.2158-.0413.352.0187.0633.053.1164.1028.159z"/><path d="m23.6227 18.9059c-.1539-.1249-.2358-.2877-.2456-.4884-.0113-.2292.0568-.4131.2042-.5517.0865-.0812.1949-.1413.3251-.1801.1151-.0344.2405-.0509.3762-.0496.1279.0012.2458.0177.3536.0494.1196.0354.2222.0911.3077.1672.1334.1188.2071.2679.221.4475.0114.1501-.0162.2882-.0827.4142-.0822.1558-.2136.2633-.394.3227-.2314.0761-.4701.0872-.7161.0334-.1337-.0293-.2502-.0842-.3494-.1646zm.3222-.2313c.0634.0466.1323.0762.2067.0891.0675.0117.1407.0129.2195.0036.0816-.0097.1534-.0357.2154-.0781.0856-.0588.1368-.1372.1535-.2353.0154-.0904.0042-.1771-.0338-.2603-.0503-.1102-.1431-.1811-.2784-.2126-.1497-.035-.2869-.0229-.4116.0364-.1636.0779-.2353.2131-.2152.4055.011.1056.059.1895.1439.2517z"/><path d="m31.5281 18.4808c.0222.0941.0787.1655.1693.2143.0599.0323.1234.0536.1906.0638.2498.0383.4852-.0132.706-.1543.0049-.0032.0108-.0045.0166-.0036.0058.0008.0112.0037.0151.0081l.1814.204c.0031.0035.0054.0075.0069.0119s.002.009.0017.0136c-.0004.0046-.0017.0091-.0038.0132s-.0051.0077-.0087.0106c-.1259.1026-.2654.1704-.4186.2036-.2121.0458-.4213.0522-.6274.0192-.1075-.0172-.2133-.0546-.3174-.1119-.1514-.0837-.2518-.2086-.3012-.3749-.0539-.1806-.0462-.3497.0229-.5074.0434-.0989.1099-.1851.1995-.2584.0901-.074.1896-.1252.2985-.1538.1885-.0493.379-.0579.5716-.0256.1386.0231.2646.0757.3781.158.1933.1398.2751.3431.2454.6099-.0011.0104-.006.02-.0137.027-.0078.007-.0178.0109-.0283.0109l-1.2683.0013c-.0025 0-.005.0006-.0072.0016-.0023.0011-.0043.0027-.0059.0047-.0015.002-.0026.0043-.0032.0068-.0005.0024-.0005.005.0001.0074zm.8006-.4374c-.0789-.0586-.1649-.0922-.2578-.1006-.0888-.008-.1737-.002-.2546.0178-.1145.0281-.2045.0982-.27.2102-.0126.0217-.0064.0326.0186.0326h.8456c.002 0 .0041-.0005.0059-.0013.0018-.0009.0035-.0022.0047-.0038.0013-.0015.0022-.0034.0027-.0054.0004-.002.0004-.004 0-.006-.0129-.0581-.0446-.1059-.0951-.1435z"/><path d="m36.3893 18.9073c-.0918-.0737-.1587-.1656-.2009-.2758-.0521-.1363-.0591-.2846-.0209-.4451.0404-.1701.1344-.3017.282-.3948.164-.1032.3572-.155.5794-.1556.1334-.0003.256.0156.3679.0477.1251.036.2318.0937.3203.1732.1831.1646.2512.3849.2045.6609-.0231.1364-.0883.255-.1955.3559-.0883.0832-.1916.1429-.3098.1792-.0997.0305-.2153.0477-.3469.0516-.1568.0045-.3094-.0193-.458-.0715-.078-.0274-.152-.0693-.2221-.1257zm.3278-.2263c.1585.1018.3342.1214.5272.0589.1598-.0518.2486-.1593.2664-.3225.0139-.1261-.016-.2286-.0895-.3074-.0621-.0665-.1491-.1113-.261-.1345-.1035-.0212-.2054-.0157-.3058.0167-.1019.033-.1775.086-.2268.1589-.0558.0825-.0743.1807-.0556.2946.0174.1059.0658.1843.1451.2353z"/><path d="m20.3467 18.8742c0-.0117-.0035-.0128-.0105-.0032-.0711.0962-.1643.1611-.2797.1948-.1107.0324-.2217.0438-.3329.0341-.1184-.0105-.2219-.0442-.3107-.1013-.1665-.1068-.2525-.2737-.2581-.5008-.0064-.264-.0083-.5332-.0057-.8075 0-.0059.0024-.0115.0065-.0156.0041-.0042.0097-.0065.0155-.0065l.372.0011c.0024 0 .0048.0005.0071.0015.0022.0009.0043.0023.006.0041.0017.0017.003.0038.0039.0061s.0014.0047.0014.0071c-.0023.213-.0017.4187.0017.6173.0026.1433.0167.241.0424.2931.0549.1109.1614.1627.3195.1556.1947-.0088.321-.089.3788-.2404.0222-.0584.0334-.1632.0334-.3143 0-.1666 0-.3381 0-.5145 0-.0044.0017-.0087.0049-.0118.0031-.0031.0073-.0049.0118-.0049h.376c.0052 0 .0101.0021.0138.0057.0036.0037.0057.0086.0057.0138v1.3631c0 .0028-.0006.0054-.0017.0079-.001.0025-.0026.0048-.0046.0066-.002.0019-.0044.0033-.0069.0042-.0026.0009-.0053.0012-.008.001-.1125-.0074-.2296-.0071-.3512.0009-.0037.0002-.0074-.0003-.011-.0016-.0035-.0013-.0067-.0033-.0094-.0059-.0027-.0025-.0049-.0057-.0064-.0091-.0015-.0035-.0023-.0072-.0023-.011z"/><path d="m38.3794 18.7383c.1101-.1198.222-.2383.3358-.3557.0045-.0046.007-.0108.0071-.0172.0001-.0065-.0023-.0127-.0067-.0174l-.6156-.6603c-.0121-.013-.0093-.0195.0086-.0195h.4824c.0102 0 .0203.0022.0297.0064.0094.0043.0179.0105.0249.0182l.3529.3908c.001.0011.0022.0019.0036.0025s.0029.0009.0044.0009.003-.0003.0044-.001c.0014-.0006.0026-.0015.0037-.0027l.3518-.3932c.0061-.0069.0136-.0124.0219-.0162.0084-.0037.0174-.0057.0265-.0057h.4623c.0138 0 .016.005.0064.015l-.6133.6483c-.0035.0037-.0055.0086-.0055.0137s.0019.01.0053.0137l.6424.6911c.0129.0137.0099.0205-.0088.0205h-.4989c-.0064 0-.0127-.0013-.0184-.0039-.0058-.0026-.0109-.0063-.015-.0111l-.3692-.4185c-.0024-.0028-.0054-.005-.0087-.0065-.0034-.0016-.007-.0024-.0107-.0024-.0036 0-.0072.0008-.0106.0023-.0033.0014-.0063.0036-.0087.0064l-.3677.417c-.0047.0054-.0106.0097-.0173.0126s-.014.0044-.0214.0043l-.4621-.0017c-.014 0-.0165-.0052-.0075-.0156.0467-.0545.0947-.1075.1441-.1591.0752-.0785.1245-.1305.1479-.156z"/></g><path d="m6.8291 23.7804c-.08608.0693-.17416.1346-.26424.1957-.01613.0109-.02163.007-.01649-.0118.24825-.9142.6359-1.762 1.16296-2.5433.07937-.1177.16317-.2332.25139-.3464.51078-.6554 1.10414-1.2301 1.78008-1.7241.02113-.0155.02827-.0106.02142.0148-.46224 1.6878-1.35632 3.0894-2.68223 4.2048-.12405.1045-.20835.1746-.25289.2103z" fill="#fc0"/></g></svg>                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay at the parcel locker                        </p>
                    </div>
                </template>
                <template x-if="$store.cartDeliveryOptions.getSelected__cartDeliveryOptions() === null ||
                                $store.cartDeliveryOptions.getSelected__cartDeliveryOptions().data.productId !== 'inpost-parcel-delivery'">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <img style="height: 20px;" src="https://get-huusk.com/theme/images/processors/cod.svg?2" class="mr-2" alt="Cash On Delivery">
                        <p data-wrap-text class="mb-0 f-14 mx-auto text-center">
                            Pay After Delivery                        </p>
                    </div>
                </template>
            </div>
        </div>
    </div>
</script>
                      <div class="payment-methods payment-method-select-grid  "></div>

                      <div class="form-group d-none">
                        <label for="payment_method">Payment Method</label>
                        <select class="form-control" id="payment_method" required="" dir="ltr"
                          name="payment_method"></select>
                      </div>
                    </div>
                    <script type="text/template" id="paysafe-template">
                      <label for="cc_no" class="font-weight-bold p">Card Number</label>
        <div id="cc_no" class="cart-input p"></div>
        <input name="token" type="hidden">
        <div class="row">
            <div class="col-8">
                <label for="expiry_date" class="font-weight-bold p">Expiry Date</label>
                <div id="expiry_date" class="cart-input p"></div>
            </div>
            <div class="col-4">
                <label for="cvc" class="font-weight-bold p">CVV/CVC/CSC</label>
                <div id="cvc" class="cart-input p"></div>
            </div>
        </div>
    </script>

                    <script type="text/template" id="checkout-template">
                      <div class="mb-n3">
            <div class="card-frame"></div>
            <input name="token" type="hidden">
        </div>
    </script>

                    <script type="text/template" id="ebanx-template">
                      <div class="ebanx-cc mb-3">
            <label for="cc_no" class="font-weight-bold p">Card Number</label>
            <input id="cc_no" type="tel" class="cart-input p" name="number" placeholder="XXXX XXXX XXXX XXXX"
                   required/>
        </div>
        <div class="row mb-n3">
            <div class="col-12 mb-3 col-lg-8 mb-lg-0">
                <label for="expiry_date" class="font-weight-bold p">Expiry Date</label>
                <input id="expiry_date" type="tel" class="cart-input p" maxlength="7" name="due_date" required
                       placeholder="MM / YY"
                />
            </div>
            <div class="col-12 mb-3 col-lg-4 mb-lg-0">
                <label for="cvc" class="font-weight-bold p">CVV/CVC/CSC</label>
                <input id="cvc" type="tel" class="cart-input p" maxlength="4" name="cvv"
                       placeholder="XXXX" required/>
            </div>
        </div>
    </script>

                    <script type="text/template" id="paypal-cc-api-template">
                      <div class="paypal-cc-api">
            <label class="p cart-input-label" for="cc_no">Card Number</label>
<div class="position-relative mb-3">
    <input
        data-validation-error-name="Card Number"  type="tel"
        placeholder="XXXX XXXX XXXX XXXX" class="cart-input p" id="cc_no" name="number" required="required" />
    
</div>
        </div>
        <div class="d-flex gap-16 mb-n3 ">
            <div class="flex-grow-1">
                <label class="p cart-input-label" for="expiry_date">Expiry Date</label>
<div class="position-relative mb-3">
    <input
        data-validation-error-name="Expiry Date"  type="tel"
        placeholder="MM / YY" class="cart-input p" id="expiry_date" name="due_date" autocomplete="cc-exp" maxlength="7" required="required" />
    
</div>
            </div>
            <div>
                <label class="p cart-input-label" for="cvc">CVV/CVC/CSC</label>
<div class="position-relative mb-3">
    <input
        data-validation-error-name="CVV/CVC/CSC"  type="tel"
        placeholder="XXXX" class="cart-input p" id="cvc" name="cvv" required="required" maxlength="4" autocomplete="cc-csc" />
    
</div>
            </div>
        </div>
    </script>

                    <script type="text/template" id="paypal-cc-template">
                      <div class='card_container mb-n3'>
            <div class="row">
                <div class="col-12">
                    <label for='card-number' class="font-weight-bold p">
                        Card Number                    </label>
                    <div id='card-number' class='card_field cart-input p'></div>
                </div>
                <div class="col-8">
                    <label for='expiration-date' class="font-weight-bold p">
                        Expiry Date                    </label>
                    <div id='expiration-date' class='card_field cart-input p'></div>
                </div>
                <div class="col-4">
                    <label for='cvv' class="font-weight-bold p">CVV/CVC/CSC</label>
                    <div id='cvv' class='card_field cart-input p'></div>
                </div>
            </div>
        </div>
    </script>

                    <div class="payment-method-cc "></div>
                  </div>

                  <script type="text/template" id="instalments-template">
                    <label for="installments" class="font-weight-bold p">Interest-free installments</label>
        <select id="installments" class="cart-input p" required name="installments"><option value="1" selected="selected">1</option><option value="3">3</option><option value="6">6</option><option value="9">9</option><option value="12">12</option></select>
</script>

                  <script type="text/template" id="blik-template">
                    <div class="blik-step-1">
            <p class="font-weight-bold text-center pt-3">Open your BLIK app and enter 6 digits below:</p>
            <input
                x-data="{ blikCode: null }"
                x-init="$watch('blikCode', function () { $dispatch('blik-code-updated', blikCode)})" type="text"
                name="blik_code" id="blik-code"
                x-model="blikCode"
                maxlength="6"
                minlength="6"
                class="form-control form-control-lg w-50 h-50 mx-auto p-4 text-center font-weight-bold"
                style="letter-spacing: 5px;"
                placeholder="___ ___"
                required>
        </div>
        <div class="blik-step-2" style="display: none;">
            <p class="font-weight-bold text-center pt-3">Please confirm your payment on your mobile device.</p>
            <h1 class="text-center font-size blik-seconds"></h1>
        </div>
        <input name="error" type="hidden">
            </script>
                  <div class="cart-gap-2"></div>
                  <img src="" data-src="https://get-huusk.com/theme/images/secured.png" alt=""
                    class="img-fluid d-block mx-auto" data-ga-section="9 - Secured Images">
                  <div class="cart-gap-small"></div>
                  <div x-data="{ checked:false }"
                    x-init="$watch('checked', function() { $refs['js-disabled-submit-message'].style.display = 'none'; })">
                    <div class="d-flex align-items-center mt-2 cursor-pointer">
                      <input id="agree-terms" required="" x-model="checked" name="terms" type="checkbox" value="terms">
                      <label for="agree-terms" class="font-weight-bold note2 ml-3 cursor-pointer"
                        label="I confirm that I have read and agree to &lt;a href=&quot;https://get-huusk.com/huusk/terms?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&amp;ppwa=payments%40convenity.com&amp;hj=1&amp;pmt=ip&amp;amex=1&amp;oxlis=2&amp;esc=1&amp;ssb=1&amp;tos=1&amp;gae=1&amp;huuskv2=1&amp;eppss=1&amp;qpp=3&amp;prodpv=22&amp;ly=20&amp;gc=1&amp;_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&quot; style=&quot;text-decoration: underline&quot;&gt;Terms of Service&lt;/a&gt; and &lt;a href=&quot;https://get-huusk.com/huusk/privacy?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&amp;ppwa=payments%40convenity.com&amp;hj=1&amp;pmt=ip&amp;amex=1&amp;oxlis=2&amp;esc=1&amp;ssb=1&amp;tos=1&amp;gae=1&amp;huuskv2=1&amp;eppss=1&amp;qpp=3&amp;prodpv=22&amp;ly=20&amp;gc=1&amp;_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051&quot; style=&quot;text-decoration: underline&quot;&gt;Privacy Policy&lt;/a&gt;."
                        for="">I confirm that I have read and agree to <a
                          href="https://get-huusk.com/huusk/terms?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051"
                          style="text-decoration: underline">Terms of Service</a> and <a
                          href="https://get-huusk.com/huusk/privacy?uuid=01902663-1f26-73c9-8a16-9749bbd4771c&ppwa=payments%40convenity.com&hj=1&pmt=ip&amex=1&oxlis=2&esc=1&ssb=1&tos=1&gae=1&huuskv2=1&eppss=1&qpp=3&prodpv=22&ly=20&gc=1&_=5300%2C3092%2C3284%2C3559%2C4216%2C4288%2C4878%2C5828%2C5840%2C5969%2C6051"
                          style="text-decoration: underline">Privacy Policy</a>.</label>
                    </div>

                    <div class="js-disabled-submit-message t-red mb-3 font-weight-bold"
                      x-ref="js-disabled-submit-message" style="display:none;">
                      Please confirm in order to proceed. </div>
                    <div class="cart-gap-small"></div>
                  </div>
                  <ul class="invalid-feedback error-summary"></ul>
                  <span data-ga-section="10 - CTA" class="js-order-form-submit-wrapper" x-init="
            Alpine.store('cartButton').defaultText = 'Yes, Send Me My Dall Now';
            Alpine.store('cartButton').codText = 'Order now - pay on delivery';
            Alpine.store('cartButton').setDefaultText();
        ">
                    <button class="btn-block px-2 btn btn-pay order-form-submit pointer-events-none-disabled"
                      type="submit" data-ga-event="convert" data-ga-category="Call To Action"
                      data-ga-click="10 - CTA (CTA)" x-text="Alpine.store('cartButton').text">
                      Yes, Send Me My Dall Now

                    </button>
                  </span>
                  <div class="cart-gap-small"></div>
                  <div class="order-pay text-center" data-ga-section="11 - SSL">
                    <div class="d-flex align-items-center justify-content-center mb-2">
                      <img class="mx-0" style="height: 16px" src=""
                        data-src="https://get-huusk.com/theme/images/lock-green.svg" alt="">
                      <p class="font-weight-bold p ml-2">
                        <b class="green"> SSL</b> SECURED PAYMENT
                      </p>
                    </div>
                    <p class="p t-gray-body">Your information is protected by 256-bit SSL encryption</p>
                  </div>
                  <div class="d-md-none">
                    <div class="cart-gap-2"></div>
                  </div>
                  <div class="d-md-none">
                    <div class="d-flex align-items-center ">
                      <svg style="min-width: 24px;" width="24" height="20" viewbox="0 0 24 20" fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <path
                          d="M20.0616 0.5L8.86518 11.6534L3.93839 6.74456L0 10.6688L8.86518 19.5L24 4.42328L20.0616 0.5Z"
                          fill="#3475F6"></path>
                      </svg>
                      <p class="p mb-0 ml-2"><strong>100% Traditional Japanese design</strong> </p>
                    </div>
                    <div class="d-flex align-items-center mt-2">
                      <svg style="min-width: 24px;" width="24" height="20" viewbox="0 0 24 20" fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <path
                          d="M20.0616 0.5L8.86518 11.6534L3.93839 6.74456L0 10.6688L8.86518 19.5L24 4.42328L20.0616 0.5Z"
                          fill="#3475F6"></path>
                      </svg>
                      <p class="p mb-0 ml-2"><strong>30 Day Money Back - Satisfaction Guarantee</strong> </p>
                      <span data-toggle="tooltip" data-placement="top"
                        title="If You have changed your mind You can return an unused and unopened product. Shipping costs and restocking fee will be applied">
                        <img style="width: 20px" src="" class="tw-inline-block"
                          data-src="https://get-huusk.com/theme/common/icons/info.svg " alt="">
                      </span>
                    </div>
                    <div class="d-flex align-items-center mt-2">
                      <svg style="min-width: 24px;" width="24" height="20" viewbox="0 0 24 20" fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <path
                          d="M20.0616 0.5L8.86518 11.6534L3.93839 6.74456L0 10.6688L8.86518 19.5L24 4.42328L20.0616 0.5Z"
                          fill="#3475F6"></path>
                      </svg>
                      <p class="p mb-0 ml-2"><strong>Precisely crafted to the last detail</strong> </p>
                    </div>
                  </div>
                </div>
              </div>

            </div>
            <div x-data="">
              <template x-for="(item, name) in Alpine.store('cartItems').items" :key="name">
                <div>
                  <template x-if="name === 'product[delivery]'">
                    <input data-selected="" type="hidden" x-bind:value="item" x-bind:name="name">
                  </template>
                  <template
                    x-if="name.startsWith('product[coverlastic-') || name.startsWith('product[upsell-coverlastic-')">
                    <input type="hidden" x-bind:value="item" x-bind:name="name">
                  </template>
                  <template x-if="name !== 'product[delivery]' && !name.startsWith('product[coverlastic-')">
                    <input type="hidden" x-bind:value="item" x-bind:name="'temporary-' + name">
                  </template>
                  <template x-if="name.startsWith('product[viaota-plan-') || name.startsWith('product[ryoko-2')">
                    <input type="hidden" x-bind:value="item" x-bind:name="name">
                  </template>
                  <template x-if="name === 'product[huusk-2]'">
                    <input type="hidden" x-bind:value="item" x-bind:name="name">
                  </template>
                </div>
              </template>
            </div>
          </form>
        </div>
      </div>


    </div>
    <script>
    function limitFieldLength(evt, allowedLength) {
      var input = document.getElementById($(evt.target).attr('id'));
      if (input.value && input.value.length === allowedLength) {
        evt.preventDefault();
      }
    }
    </script>
    <script>
    document.addEventListener('alpine:init', function() {
      return Alpine.data('googleMapsWithClusterMarkerSelect', function() {
        return {
          show: window.Livewire.find('ZSnOVVWkLVZIkL9x5DI8').entangle('show').live,
          googleMapsLoaded: false,
          init() {
            this.show = Alpine.store('cartParcelLocker').showSelectionMap;
            Alpine.effect(function() {
              this.show = Alpine.store('cartParcelLocker').showSelectionMap;
            }.bind(this))
            window.Livewire.find('ZSnOVVWkLVZIkL9x5DI8').on('show-map', function(locations) {
              window.parcelLockerLocations = Object.values(locations[0]);
              if (this.googleMapsLoaded) {
                this.$nextTick(this.initMap);
              } else {
                window.initGoogleMapsWithClusterMarkerSelect = this.initMap;
                const script = document.createElement('script');
                script.src =
                  'https://maps.googleapis.com/maps/api/js?key=AIzaSyC4e4aZ8lfadfxWEiGtL5bLbk33PtIa_rQ&callback=initGoogleMapsWithClusterMarkerSelect&libraries=places,marker&loading=async';
                script.async = true;
                document.head.appendChild(script);
                this.googleMapsLoaded = true;
              }
            }.bind(this));
          },
          initMap() {
            var searchBoxElement = document.getElementById('google-maps-search-box');
            var searchBoxInputElement = document.getElementById('google-maps-search-box-input');
            var mapElement = document.getElementById('google-maps');
            var currentLocationButtonElement = document.getElementById(
              'google-maps-search-box-current-location');
            var closeButtonElement = document.getElementById('google-maps-close-button');
            var mapWrapperElement = document.getElementById('google-maps-wrapper');

            var mapConfig = {
              zoom: Alpine.store('cartParcelLocker').zoom,
              center: {
                lat: Alpine.store('cartParcelLocker').centerLat,
                lng: Alpine.store('cartParcelLocker').centerLng
              },
              mapId: 'GOOGLE_MAP_ID',
            };
            var map = new google.maps.Map(mapElement, mapConfig);
            var infoWindow = new google.maps.InfoWindow();
            var searchBox = new google.maps.places.SearchBox(searchBoxInputElement);
            var markers = window.parcelLockerLocations.map(function(location, i) {
              var pinGlyph = new google.maps.marker.PinElement({
                glyphColor: 'white',
                background: '#000000',
                borderColor: '#000000'
              })
              var marker = new google.maps.marker.AdvancedMarkerElement({
                position: new google.maps.LatLng(location.lat, location.lon),
                content: pinGlyph.element,
              });

              marker.addListener('click', function() {
                infoWindow.close();
                infoWindow.setContent(
                  `<div class="tw-text-black">
                                        <p class="tw-mb-1 tw-capitalize tw-leading-none md:tw-leading-[inherit]">Parcel locker <b>${location.title.toLowerCase()}</b></p>
                                        <p class="tw-mb-1 tw-capitalize tw-leading-none md:tw-leading-[inherit]"><b>${location.address.toLowerCase()}</b></p>
                                        <p class="tw-mb-0 tw-capitalize tw-leading-none md:tw-leading-[inherit]">${location.postcode} ${location.city.toLowerCase()}</p>
                                        <div onclick="
                                            Alpine.store('cartLoader').stopLoading();
                                            Alpine.store('cartParcelLocker').parcelLockerId = ${location.post_id};
                                            Alpine.store('cartParcelLocker').parcelLockerObject = ${JSON.stringify(location).split('"').join("&quot;")};
                                            Alpine.store('cartParcelLocker').showSelectionMap = false;
                                            Alpine.store('cartParcelLocker').onSelectCallback();" class="tw-mt-4 tw-w-full tw-text-white tw-font-bold tw-px-3 tw-py-1 tw-text-center tw-bg-[#4C8AFF] tw-text-base tw-mb-0 tw-cursor-pointer">Select</div>
                                    </div>`
                );
                infoWindow.open(map, marker);
              }.bind(this));

              return marker;
            }.bind(this));

            var interval = setInterval(function() {
              if (window.MarkerClusterer) {
                new window.MarkerClusterer({
                  map,
                  markers
                });
                clearInterval(interval);
              }
            }.bind(this), 100)

            map.controls[google.maps.ControlPosition.TOP_LEFT].push(searchBoxElement);

            map.addListener('bounds_changed', function() {
              searchBox.setBounds(map.getBounds());
            }.bind(this));
            map.addListener('zoom_changed', function() {
              infoWindow.close();
            }.bind(this))
            map.addListener('tilesloaded', function() {
              searchBoxElement.style.display = 'flex';
              closeButtonElement.style.display = 'block';
              mapWrapperElement.classList.add('tw-border-8', 'tw-border-white');
            }.bind(this));

            searchBox.addListener('places_changed', function() {
              const places = searchBox.getPlaces();

              if (places.length === 0) {
                return;
              }

              markers.forEach(function(marker) {
                marker.setMap(null);
              });
              this.markers = [];
              var bounds = new google.maps.LatLngBounds();
              places.forEach(function(place) {
                if (!place.geometry || !place.geometry.location) {
                  return;
                }
                var icon = {
                  url: place.icon,
                  size: new google.maps.Size(71, 71),
                  origin: new google.maps.Point(0, 0),
                  anchor: new google.maps.Point(17, 34),
                  scaledSize: new google.maps.Size(25, 25),
                };
                markers.push(
                  new google.maps.Marker({
                    map,
                    icon,
                    title: place.name,
                    position: place.geometry.location,
                  }),
                );
                if (place.geometry.viewport) {
                  bounds.union(place.geometry.viewport);
                } else {
                  bounds.extend(place.geometry.location);
                }
              }.bind(this));
              map.fitBounds(bounds);
            }.bind(this));

            if (!navigator.geolocation) {
              currentLocationButtonElement.style.display = 'none';
            }
            currentLocationButtonElement.addEventListener('click', function() {
              if (navigator.geolocation) {
                var loader = document.getElementById('google-maps-loader');
                loader.style.display = 'flex';

                navigator.geolocation.getCurrentPosition(function(position) {
                  loader.style.display = 'none';

                  const pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude,
                  };
                  map.setCenter(pos);
                  map.setZoom(14);
                }, function() {
                  loader.style.display = 'none';
                  alert('Error occurred while fetching location');
                });
              }
            }.bind(this));
          }
        }
      })
    });
    </script>
    <link rel="modulepreload" href="../build/assets/google-maps-a46755e4.js">
    <link rel="modulepreload" href="../build/assets/_commonjsHelpers-042e6b4d.js">
    <script type="module" src="../build/assets/google-maps-a46755e4.js" data-navigate-track="reload"></script>
    <script>
    (function() {
      document.querySelectorAll('[data-ga-click]').forEach((element) => {
        element.addEventListener('click', function(event) {
          typeof gatag !== 'undefined' && gatag('event', 'Click', {
            'event_category': element.dataset.gaCategory,
            'event_label': element.dataset.gaClick
          });
        });
      });
    })();
    (function() {
      function handleIntersection(entries, observer) {
        entries.forEach(function(entry) {
          if (entry.isIntersecting) {
            const sectionId = entry.target.dataset.gaSection;
            typeof gatag !== 'undefined' && gatag('event', 'Scroll', {
              'event_category': 'Section',
              'event_label': sectionId
            });
            observer.unobserve(entry.target);
          }
        });
      }

      var observer = new IntersectionObserver(handleIntersection);
      document.querySelectorAll('[data-ga-section]').forEach(function(section) {
        observer.observe(section);
      }.bind(this));
    })()
    </script>
    <div
      wire:snapshot="{&quot;data&quot;:{&quot;selection&quot;:[[true,true,true,true],{&quot;s&quot;:&quot;arr&quot;}],&quot;params&quot;:[{&quot;uuid&quot;:&quot;01902663-1f26-73c9-8a16-9749bbd4771c&quot;,&quot;ppwa&quot;:&quot;payments@convenity.com&quot;,&quot;hj&quot;:&quot;1&quot;,&quot;pmt&quot;:&quot;ip&quot;,&quot;amex&quot;:&quot;1&quot;,&quot;oxlis&quot;:&quot;2&quot;,&quot;esc&quot;:&quot;1&quot;,&quot;ssb&quot;:&quot;1&quot;,&quot;tos&quot;:&quot;1&quot;,&quot;gae&quot;:&quot;1&quot;,&quot;huuskv2&quot;:&quot;1&quot;,&quot;eppss&quot;:&quot;1&quot;,&quot;qpp&quot;:&quot;3&quot;,&quot;prodpv&quot;:&quot;22&quot;,&quot;ly&quot;:&quot;20&quot;,&quot;gc&quot;:&quot;1&quot;,&quot;_&quot;:&quot;5300,3092,3284,3559,4216,4288,4878,5828,5840,5969,6051&quot;},{&quot;s&quot;:&quot;arr&quot;}],&quot;brand&quot;:&quot;huusk&quot;},&quot;memo&quot;:{&quot;id&quot;:&quot;rFZf0s8iCDx2gzsbebJ4&quot;,&quot;name&quot;:&quot;google-consent&quot;,&quot;path&quot;:&quot;huusk\/order&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;children&quot;:[],&quot;scripts&quot;:[],&quot;assets&quot;:[],&quot;errors&quot;:[],&quot;locale&quot;:&quot;en&quot;},&quot;checksum&quot;:&quot;7bc11c1b0cab372e4666a70f55f4564789d50abf977064579f260bc77e9c2faf&quot;}"
      wire:effects="[]" wire:id="rFZf0s8iCDx2gzsbebJ4" x-data="{ poll: true }" @poll-stop="poll = false;">
      <template x-if="window.localStorage && !window.localStorage.getItem('consentMode') && false && poll">
        <div wire:poll="">
        </div>
      </template>
      <template x-if="window.localStorage && !window.localStorage.getItem('consentMode') && !false">
        <div x-init="window.setConsentMode && window.setConsentMode(true, true, true, true);"></div>
      </template>
      <script>
      document.addEventListener('livewire:init', function() {
        Livewire.hook('request', function(request) {
          if (JSON.parse(request.payload).components.findIndex(function(component) {
              return JSON.parse(component.snapshot).memo.id === window.Livewire.find('rFZf0s8iCDx2gzsbebJ4')
                .$id;
            }) > -1) {
            request.fail(function(response) {
              if (response.status === 419) {
                response.preventDefault();
                window.Livewire.find('rFZf0s8iCDx2gzsbebJ4').$dispatchSelf('poll-stop')
              }
            })
          }
        })
      })
      </script>
    </div>
  </div>
  <script data-navigate-once="true">
  window.livewireScriptConfig = {
    "csrf": "fjLbYmRPh7Y8quIT3xsbOtQJqyhVJcpraSrlzcPX",
    "uri": "\/livewire\/update",
    "progressBar": "",
    "nonce": ""
  };
  </script>

</body>

</html>